Public Sub Click_and_Pledge_Monthly_AR_Part1()

''' This converter is to have the user insert the Salesforce report, so we can create an Intacct Import File '''

''''' Last Updated May 7, 2024 '''''

    Dim UserResponse As VbMsgBoxResult
    Dim wsReset As Worksheet
    Dim wsSFReport As Worksheet
    Dim CP_Part2Button As Shape
    Dim CP_Part2ButtonText As String
    Dim SFReportName As String
    
    ' Salesforce Click and Pledge Report Name
        SFReportName = "C&P ProPay Report w/ Pos. and Neg. Txns"
    
    
    
    ' Step 1: Ask user if they are sure they want to go to the 'AR' Click and Pledge Converter - Part 1
        UserResponse = MsgBox("Are you sure you want to start the 'AR' Click and Pledge Converter?", vbYesNo + vbQuestion, "Confirmation to start the Click and Pledge Converter")


    ' Step 2: Check the user's response - If they choose no, end the sub, otherwise continue to the next steps.
        If UserResponse = vbNo Then
            Exit Sub
        End If
        
        
    ' Step 3: Delete the Selection Page and Create the Reset Page
        Reset.Create_Reset_Worksheet
    
    
    ' Step 4: Create a variable for the Reset Worksheet
        Set wsReset = ThisWorkbook.Worksheets("COMPLETE RESET")
        
        
    ' Step 5: Protect the Reset Worksheet
        wsReset.Protect
        
        
    ' Step 6: Create a new worksheet called "Insert Salesforce Report" and add it to the end of the worksheets. Color the Worksheet Tab Green.
        Set wsSFReport = ThisWorkbook.Worksheets.Add(After:=ThisWorkbook.Worksheets(ThisWorkbook.Worksheets.Count))
        wsSFReport.Name = "Insert Salesforce Report"
        wsSFReport.Tab.Color = RGB(0, 255, 0)
        
        
    ' Step 7: Unprotect all cells except for column A
        wsSFReport.Cells.Locked = False
        wsSFReport.Range("A:A").Locked = True
        
        
    ' Step 8: Create a message to user for where to put the Salesforce Information in the "Insert Salesforce Report" Worksheet, Cells A1:A5
        With wsSFReport.Range("A1")
            .value = ",------------------------------------------------------->"
            .Interior.Color = vbRed
            .Font.ColorIndex = 6
            .Font.Bold = True
            .Font.Size = 12
        End With
    
        With wsSFReport.Range("A2:A5")
            .Merge
            .WrapText = True
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlTop
            .value = "''---Place the Salesforce information from the """ & SFReportName & """ Report, in Cell B1"
            .Interior.Color = RGB(255, 0, 0)
            .Font.Color = vbYellow
            .Font.Bold = True
            .Font.Size = 12
        End With
        
        
    ' Step 9: In A6 through A11 - add additional information to help user, if they are having issues.
        With wsSFReport.Range("A6:A11")
            .Merge
            .WrapText = True
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .value = "*** If you are having issues with pasting the Salesforce information, make sure to copy only the columns with data, from the Salesforce Report. ***"
            .Interior.Color = vbYellow
            .Font.Color = vbRed
            .Font.Bold = True
            .Font.Size = 13
        End With
        
        
    ' Step 10: Change the column Width of Column A.
        wsSFReport.Range("A:A").ColumnWidth = 42#
    
    
    ' Steps 11-13: Add a button for the user to easily click when they are ready for the next step.

        ' Step 11: Set the Button Shape (Button Shape, Start Position (Left to right), Start Position (Top to Bottom), Button Length, Button Height)
            Set CP_Part2Button = wsSFReport.Shapes.AddShape(msoShapeRectangle, 1, 170, 215, 301)

        ' Step 12: Create a variable name for the text going onto the button
            CP_Part2ButtonText = "CLICK HERE to go to the second step of the 'AR' Click and Pledge Converter."
        
        ' Step 13: Put text onto the button and format it.
            With CP_Part2Button
                .OnAction = DonationSiteName & "Click_and_Pledge.Click_and_Pledge_Monthly_AR_Part2"                     ' Embedding the Specific Converter Macro to the button
                .TextFrame.Characters.Text = CP_Part2ButtonText                                                         ' Using the CP_Part2ButtonText Variable for the text going into the button
                .TextFrame.Characters.Font.Name = "Calibri"                                                             ' Button Font Style
                .TextFrame.Characters.Font.FontStyle = "Bold"                                                           ' Make Button Font Bold
                .TextFrame.Characters.Font.Size = 30                                                                    ' Button Font Size
                .TextFrame.Characters.Font.Color = RGB(255, 255, 0)                                                     ' Yellow Font Color
                .TextFrame.HorizontalAlignment = xlCenter                                                               ' Center the font within the button (left to right)
                .TextFrame.VerticalAlignment = xlCenter                                                                 ' Center the font within the button (up and down)
            End With


    ' Step 14: Protect the "Insert Salesforce Report" Worksheet with limited restrictions.
        wsSFReport.Protect _
            DrawingObjects:=False, Contents:=True, Scenarios:=False, AllowFormattingCells:=True, _
            AllowFormattingColumns:=True, AllowFormattingRows:=True, AllowInsertingColumns:=True, _
            AllowInsertingRows:=True, AllowInsertingHyperlinks:=True, AllowDeletingColumns:=True, _
            AllowDeletingRows:=True, AllowSorting:=True, AllowFiltering:=True, AllowUsingPivotTables:=True
    
    
    ' Step 15: Select Cell B1 of the "Insert Salesforce Report" Worksheet
        wsSFReport.Range("B1").Select
        
End Sub
Public Sub Click_and_Pledge_Monthly_AR_Part2()

''''' Last Updated 6/4/2024 '''''
    
    Dim UserResponse As VbMsgBoxResult
    Dim wsSFReport As Worksheet
    Dim SearchRange As Range
    Dim TargetColumnHeaders
    Dim ColumnDictionary As Object
    Dim ColumnLetters() As String
    Dim FamilyNameSFColumn As String
    Dim CampaignTypeSFColumn As String
    Dim SchoolSFColumn As String
    Dim OrderNumberSFColumn As String
    Dim DescriptionSFColumn As String
    Dim FirstNameSFColumn As String
    Dim LastNameSFColumn As String
    Dim OpportunityNameSFColumn As String
    Dim PaymentIDSFColumn As String
    Dim PaymentAmountSFColumn As String
    Dim PaymentDateSFColumn As String
    Dim CampaignNameSFColumn As String
    Dim CheckNumberColumn As String
    Dim CloseDateColumn As String
    Dim DepositDateColumn As String
    Dim DepositDateManualColumn As String
    Dim PaymentTypeColumn As String
    Dim StageSFColumn As String
    Dim EmptyItems As String
    Dim Key As Variant
    Dim FolderPath As String
    Dim DownloadDate As String
    Dim wsSummary As Worksheet
    Dim wsConsolidated As Worksheet
    Dim SummaryLastRow As Long
    Dim ConsolidatedTempLastRow As Long
    Dim ConsolidatedNewLastRow As Long
    Dim wbTemp As Workbook
    Dim wsTemp As Worksheet
    Dim LoopCount As Long
    Dim wsSchoolMap As Worksheet
    Dim wsSweepsBD As Worksheet
    Dim SweepsBDLastRow As Long
    Dim CurrentFileName As String
    Dim NewFileName As String
    Dim SheetsToHide As Variant
    Dim NewFolderPath As String
    Dim OriginalFolderFileName As String
    Dim NewFolderFileName As String
    ''
    Dim wsConsolidatedPos As Worksheet
    Dim wsConsolidatedNeg As Worksheet
    Dim wsConsolidatedReturn As Worksheet
    Dim wsPosNegSweeps As Worksheet
    Dim wsSFFiltered As Worksheet
    Dim wsSFPos As Worksheet
    Dim wsSFNeg As Worksheet
    Dim wsSchoolAllocation As Worksheet
    Dim wsSchoolUserAllocation As Worksheet
    Dim wsAccountDesignation As Worksheet
    Dim wsAccountUserDesignation As Worksheet
    Dim wsCRJSweepsInfo As Worksheet
    Dim wsCRJReturnFees As Worksheet
    Dim wsCRJFormat As Worksheet
    Dim wsCRJPutTogether As Worksheet
    Dim wsCRJPos As Worksheet
    Dim wsCRJImport As Worksheet
    Dim wsCRJNeg As Worksheet
    Dim wsCHARNegStart As Worksheet
    Dim wsCHARNeg As Worksheet
    Dim wsCHARImport As Worksheet
    Dim wsDivisionMap As Worksheet
    Dim wsSFCampaignCheck As Worksheet
    Dim wsAdditionalFees As Worksheet
    Dim wsSFvsCPRevenue As Worksheet
    Dim wsRevenueDif As Worksheet
    ''
    Dim SFFilteredLastRow As Long
    Dim PosNegSweepsBLastRow As Long
    Dim PosNegSweepsGLastRow As Long
    Dim PosNegSweepsJLastRow As Long
    Dim SFvsCPRevenueLastRow As Long
    Dim SFPosLastRow As Long
    Dim SFNegLastRow As Long
    Dim SFCampaignLastRow As Long
    Dim SchoolAllocation_TopLastRow As Long
    Dim SchoolAllocation_BottomLastRow As Long
    Dim SchoolUserAllocationLastRow As Long
    Dim AccountDesignationPos_TopLastRow As Long
    Dim AccountDesignationPos_BottomLastRow As Long
    Dim AccountUserDesignationLastRow As Long
    Dim CRJSweepsInfoEndRow As Long
    Dim CRJReturnFeesEndRow As Long
    Dim CRJFormatEndRow_Bank As Long
    Dim CRJPutTogetherEndRow As Long
    Dim CRJPosEndRow As Long
    Dim CRJImportEndRow As Long
    Dim CRJNegEndRow As Long
    Dim CHARNegStart_TopEndRow As Long
    Dim CHARNegStart_BottomEndRow As Long
    Dim CHARNegEndRow As Long
    Dim CHARImportEndRow As Long
    Dim wsHidden As Worksheet





    ' Step 0: Basic Information Required (This will be used in the loops later on when consolidating the reports into this file)
        Dim RowStart As Integer
        Dim DeleteRows As Integer
        Dim EndColumn As String
        Dim ConsolidatedReportsFileColumn As String
        
        ' This is the row the actual data starts on the donation site's report. The row underneath of the header
            RowStart = 14
        
        ' Some Sites have rows at the bottom with totals and subtotals, for those sites, these are the rows to delete
            DeleteRows = 0
        
        ' Last Column of the donation site's report + 1 Column (if the last column is L, M goes here
            EndColumn = "K"
            
        ' This is the column in the consolidated Report tab that the file name will be placed in.
            ConsolidatedReportsFileColumn = "P"




    ' Step 1: Ask user if they are sure they want to go to the second part of the 'AR' Click and Pledge Converter
        UserResponse = MsgBox("Are you sure you want to go to the second part the 'AR' Click and Pledge Converter?" _
            & vbCrLf & vbCrLf & "You will need to make sure you have the click and pledge reports downloaded and put into a single folder with no other files." _
            & vbCrLf & vbCrLf & "***The folder name will need to be have ""Click and Pledge"" in the name of the folder.***" _
            & vbCrLf & vbCrLf & "(Example: Click and Pledge - April 2024)", _
            vbYesNo + vbQuestion, "Confirmation to start Part 2 of the click and Pledge Converter")


    ' Step 2: Check the user's response - If they choose no, end the sub, otherwise continue to the next steps.
        If UserResponse = vbNo Then
            Exit Sub
        End If


    ' Step 3: Set the 'wsSFReport' variable to the "Insert Salesforce Report" Worksheet.
        Set wsSFReport = ThisWorkbook.Worksheets("Insert Salesforce Report")
    
    
    ' Step 4: Set the 'SearchRange' variable to be row 1 of the "Insert Salesforce Report" Worksheet.
        Set SearchRange = wsSFReport.Rows(1)
    
    
    ' Steps 5-11: Check the column headers in the "Insert Salesforce Report" worksheet, to make sure the user has put in the correct Salesforce Report.
              '' Also start pulling the column letters to use for later. ''

        ' Step 5: Create an array of column headers to search for, using the 'TargetColumnHeaders' Variable
            TargetColumnHeaders = Array("Account Name", "Campaign Type", "C&P Account Name", "C&P Order Number", "Check Number", "Close Date", "Deposit Date", "Deposit Date (Manual)", "Description", "First Name", "Last Name", _
                                        "Opportunity Name", "Payment: Payment Number", "Payment Amount", "Payment Date", "Payment Type", "Primary Campaign Source", "Stage")
                                        
        ' Step 6: Set the 'ColumnDictionary' variable to hold the Column Header Mappings.
            Set ColumnDictionary = CreateObject("Scripting.Dictionary")
        

        ' Step 7: Resize the ColumnLetters array to match the size of TargetColumnHeaders
            ReDim ColumnLetters(0 To UBound(TargetColumnHeaders))

        ' Step 8: Search for the required "Target" Column Headers
            For I = LBound(TargetColumnHeaders) To UBound(TargetColumnHeaders)                                                      ' LBound is the lowest index position in the array and UBound is the highest (Upper Bound) index position (in this instance, this is the same as: i = 0 To 10) - indexes in VBA (like other coding languages) start at 0 rather than 1.
                    On Error Resume Next                                                                                            ' 8a. This will turn off the error prompts (in case there are any column headers that are missing).
                    Set ColumnHeader = SearchRange.Find(TargetColumnHeaders(I))                                                     ' 8b. This finds the current ColumnHeader name. If it is not present, then this is left as Nothing.
                    If Not ColumnHeader Is Nothing Then                                                                             ' 8c0. If the column header is found, proceed
                            ColumnIndex = Range(ColumnHeader.Address).Column                                                        ' 8c1. Get the column index of the ColumnHeader
                            ColumnIndex = ColumnIndex - 1                                                                           ' 8c2. Subtract 1 from the column index (this is subtracted due to column A being deleted later on)
                            NewColumnLetter = Cells(1, ColumnIndex).Address(False, False)                                           ' 8c3. Convert the modified column index back to the column letter
                            ColumnLetters(I) = Left(NewColumnLetter, Len(NewColumnLetter) - 1)                                      ' 8c4. Assign the new column letter to ColumnLetters(i)
                            ColumnDictionary(TargetColumnHeaders(I)) = ColumnLetters(I)                                             ' 8c5. Set the Column Letter with its appropriate Column Header
                    End If
                    On Error GoTo 0                                                                                                 ' 8d. This will turn error notifications back on.
            Next I

        ' Step 9: Retrieve values from the dictionary to add the column letter to each variable, where they can be found.
            FamilyNameSFColumn = ColumnDictionary("Account Name")
            CampaignTypeSFColumn = ColumnDictionary("Campaign Type")
            SchoolSFColumn = ColumnDictionary("C&P Account Name")
            OrderNumberSFColumn = ColumnDictionary("C&P Order Number")
            CheckNumberColumn = ColumnDictionary("Check Number")
            CloseDateColumn = ColumnDictionary("Close Date")
            DescriptionSFColumn = ColumnDictionary("Description")
            DepositDateColumn = ColumnDictionary("Deposit Date")
            DepositDateManualColumn = ColumnDictionary("Deposit Date (Manual)")
            FirstNameSFColumn = ColumnDictionary("First Name")
            LastNameSFColumn = ColumnDictionary("Last Name")
            OpportunityNameSFColumn = ColumnDictionary("Opportunity Name")
            PaymentIDSFColumn = ColumnDictionary("Payment: Payment Number")
            PaymentAmountSFColumn = ColumnDictionary("Payment Amount")
            PaymentDateSFColumn = ColumnDictionary("Payment Date")
            PaymentTypeColumn = ColumnDictionary("Payment Type")
            CampaignNameSFColumn = ColumnDictionary("Primary Campaign Source")
            StageSFColumn = ColumnDictionary("Stage")

        ' Step 10: Check for empty dictionary items
            EmptyItems = ""
            For Each Key In ColumnDictionary.Keys
                If ColumnDictionary(Key) = "" Then
                    EmptyItems = EmptyItems & Key & vbCrLf
                End If
            Next Key
    
        ' Step 11: If any column headers are missing: display which ones are missing, clear contents, and then exit the Sub. (If none are missing, proceed to the next steps.)
            If EmptyItems <> "" Then
                wsSFReport.Columns("B:XFD").ClearContents
                wsSFReport.Range("B1").Select
                MsgBox "These required column headers are missing from the Salesforce Report you attempted to use: " & vbCrLf _
                        & vbCrLf & EmptyItems & vbCrLf & "Please find the Correct Report and Try again!" _
                        & vbCrLf & vbCrLf & "This converter requires that you have all of these column headers: " _
                        & """Account Name"", ""Campaign Type"", ""C&P Account Name"", ""C&P Order Number"", ""Check Number"", ""Close Date"", ""Deposit Date"", ""Deposit Date (Manual)"", ""Description""," _
                        & """First Name"", ""Last Name"", ""Opportunity Name"", ""Payment: Payment Number"", ""Payment Amount"", ""Payment Date"", ""Payment Type"", ""Primary Campaign Source"", ""Stage""", vbExclamation, "Missing Column Headers"
                Exit Sub
            End If
                
    
        ' Step 12: Ask User for a FolderPath (if the user cancels, end the Sub).
            With Application.FileDialog(msoFileDialogFolderPicker)
                .Title = "Select a folder"
                .AllowMultiSelect = False
                If .Show = -1 Then
                    FolderPath = .SelectedItems(1)
                Else
                    MsgBox "No folder path was selected. When you are ready, please click the button again. Then select the folder you wish to use.", vbInformation, "No Folder Path Selected"
                    Exit Sub
                End If
            End With
            
           
        ' Step 13: Check to make sure the folder has "Click and Pledge" in the FolderPath Name, if it doesn't, prompt the user to rename folder and try again.
            If InStr(1, FolderPath, "Click and Pledge", vbTextCompare) = 0 Then
                MsgBox "The selected folder path does not contain 'Click and Pledge' in its name. Please rename the folder to 'Click and Pledge - ' [and the month the reports come from] and try again.", vbCritical, "Incorrect Folder Name"
                Exit Sub
            End If
    
   
        ' Step 14: Check that the folder has at least one file. If it doesn't, exit the Sub. If it does, continue on.
            If Dir(FolderPath & "\*.csv") = "" Then
                MsgBox "The selected folder does not contain any CSV files. Please find the folder you'd like to use and make sure that it contains at least one file. Then try again.", vbCritical, "No Files in Folder Path"
                Exit Sub
            End If
        
       
        ' Step 15-16: Ask user for the day they downloaded the Reports. If the user cancels, exit Sub, otherwise proceed. - This date will be placed in the reports later in this macro.
            ' Step 15: Create the 'DownloadDate' variable to hold the response of the user
                DownloadDate = InputBox("Please enter the day you downloaded the reports (format: MM/DD/YYYY):")
        
       
            ' Step 16: Check User Response for Download Date
                If DownloadDate = "" Then
                    MsgBox "Please retry when you have the date of download (only the most recent date is needed.", vbInformation, "No Download Date"
                    Exit Sub
                End If
        
       
        ' Step 17: Unprotect the "Insert Salesforce Report" Worksheet and delete column A
            wsSFReport.Unprotect
            wsSFReport.Range("A:A").Delete
        
       
        ' Step 18: Remove the "Insert Salesforce Report" Tab Color
            wsSFReport.Tab.ColorIndex = xlColorIndexNone
            
           
        ' Step 19: Change the Name of "Insert Salesforce Report" to "Salesforce Report"
            wsSFReport.Name = "Salesforce Report"
            
       
        ' Step 20-21: Create the worksheets: "Summary Page" and "Reports Consolidated"
        
            ' "Summary Page" Worksheet - Goes before the "Salesforce Report" Worksheet
                Set wsSummary = ThisWorkbook.Worksheets.Add(Before:=wsSFReport)
                wsSummary.Name = "Summary Page"
                
            ' "Reports Consolidated" Worksheet - Goes after the "Salesforce Report" Worksheet
                Set wsConsolidated = ThisWorkbook.Worksheets.Add(Before:=wsSFReport)
                wsConsolidated.Name = "Reports Consolidated"
        
       
        ' Step 21: Populate the column headers in the "Summary Page" worksheet
            wsSummary.Range("A1").value = "Original File Name"
            wsSummary.Range("B1").value = "New File Name/Worksheet Name"
            wsSummary.Range("C1").value = "Completed"
            wsSummary.Range("D1").value = "Year.Month"
            wsSummary.Range("E1").value = "School Abbreviation"
            wsSummary.Range("F1").value = "Transactions for the report"
            wsSummary.Range("G1").value = "Positive Transactions for the report"
            wsSummary.Range("H1").value = "Negative Transactions for the report"
            wsSummary.Range("I1").value = "Sweeps for the report"
            wsSummary.Range("J1").value = "Positive Sweeps for the report"
            wsSummary.Range("K1").value = "Negative Sweeps for the report"
            wsSummary.Range("L1").value = "Gross Amount for the report"
            wsSummary.Range("M1").value = "Per Transaction Fees for the report"
            wsSummary.Range("N1").value = "Discount Fees for the report"
            wsSummary.Range("O1").value = "Net amount for the report"
            wsSummary.Range("P1").value = "Bank Fees (Positive Sweeps * 2.50)"
            wsSummary.Range("Q1").value = "Net amount after bank fees"
            wsSummary.Range("R1").value = "Temporary File Name"
            With wsSummary.Range("T1")
                .value = "****For more information, unhide hidden worksheets.***"
                .Interior.Color = vbYellow
                .Font.Color = vbRed
            End With
       
       
        ' Step 22: Populate the column headers in the "Reports Consolidated" worksheet
            wsConsolidated.Range("A1").value = "Sweep ID"
            wsConsolidated.Range("B1").value = "Order Number"
            wsConsolidated.Range("C1").value = "C&P Transaction Date"
            wsConsolidated.Range("D1").value = "C&P Fund Date"
            wsConsolidated.Range("E1").value = "First Name"
            wsConsolidated.Range("F1").value = "Last Name"
            wsConsolidated.Range("G1").value = "Gross Amount"
            wsConsolidated.Range("H1").value = "Per Transaction Fees"
            wsConsolidated.Range("I1").value = "Discount Fees"
            wsConsolidated.Range("J1").value = "Net Amount"
            wsConsolidated.Range("K1").value = "Order Number Trimmed"
            wsConsolidated.Range("L1").value = "Transaction Date (MM/DD/YYYY)"
            wsConsolidated.Range("M1").value = "Fund Date (MM/DD/YYYY)"
            wsConsolidated.Range("N1").value = "CNP School ID"
            wsConsolidated.Range("O1").value = "CNP School ID - Sweep ID"
            wsConsolidated.Range("P1").value = "Original File Name"
            wsConsolidated.Range("Q1").value = "New File Name"
            wsConsolidated.Range("R1").value = "Transaction Date (YYYY.MM.DD)"
            wsConsolidated.Range("S1").value = "Fund Date (YYYY.MM.DD)"
           
           
        ' Steps 23-42: Start looping through the files in the folder, one by one. Add the data to the "Reports Consolidated" worksheet, then copy the temporary worksheet as a new file into the workbook.
           
            ' Step 23: Define the variable 'File' to be the file in a file in the FolderPath
                File = Dir(FolderPath & "\*.csv")
           
            ' Step 24: Define the 'LoopCount' variable to temporarily name new worksheets in the loop
                LoopCount = 1
           
            ' Steps 25-42: Create the loop - loop through each file until there are none left.
                Do While File <> ""
                    ' Step 25: Define the 'CurrentFile' variable to hold the current file name
                        CurrentFile = File
                    ' Step 26: Find the last row of column A in the "Summary Page" worksheet. Then add one to it (to put new data in). Call this variable 'SummaryLastRow'
                        SummaryLastRow = wsSummary.Cells(wsSummary.Rows.Count, 1).End(xlUp).Row + 1
                    ' Step 27: Add the 'CurrentFile' name to 'SummaryLastRow' row. (adds it to the last row of column A + 1 to create a new last row of data, with this 'CurrentFile' name in it)
                        wsSummary.Cells(SummaryLastRow, 1).value = CurrentFile
                    ' Step 28: Find the last row of column A in the "Reports Consolidated" worksheet. Then add one to it (to put new data in). Call this variable 'ConsolidatedTempLastRow'
                        ConsolidatedTempLastRow = wsConsolidated.Cells(wsConsolidated.Rows.Count, 1).End(xlUp).Row + 1
                    ' Step 29: Open the File in the FolderPath and create a variable for that workbook called 'wbTemp'
                        Set wbTemp = Workbooks.Open(FolderPath & "\" & File)
                    ' Step 30: Create a variable for the first sheet in that workbook and call it 'wsTemp'
                        Set wsTemp = wbTemp.Sheets(1)
                    ' Step 31: Copy the data within the temporary file's table and paste it into the "Reports Consolidated" worksheet. Add it to the end of the data already in there.
                        wsTemp.Rows(RowStart & ":" & wsTemp.Cells(wsTemp.Rows.Count, 1).End(xlUp).Row).Copy wsConsolidated.Cells(ConsolidatedTempLastRow, 1)
                    ' Step 32: After the data is copied and pastied. Find the new last row of the "Reports Consolidated" worksheet. Use that information to fill down the file name in the file name column of the "Reports Consolidated" worksheet
                        ConsolidatedNewLastRow = wsConsolidated.Cells(wsConsolidated.Rows.Count, 1).End(xlUp).Row
                        wsConsolidated.Range(ConsolidatedReportsFileColumn & ConsolidatedTempLastRow & ":" & ConsolidatedReportsFileColumn & ConsolidatedNewLastRow).value = CurrentFile
                    ' Step 33: Change the name of the worksheet to the LoopCount. (This is temporary, until we are able to get the data necessary to name it appropriately)
                        wsTemp.Name = LoopCount
                    ' Step 34: Use the DownloadDate variable from earlier to put that information in Row 5 of the Temporary worksheet
                        wsTemp.Range("B5").value = "Download Date:"
                        wsTemp.Range("C5").value = DownloadDate
                    ' Step 35: Add hyperlink in K3 of the temporary worksheet that links to A1 of the "Summary Page"
                        wsTemp.Hyperlinks.Add Anchor:=wsTemp.Range(EndColumn & "3"), Address:="", SubAddress:="'" & wsSummary.Name & "'!A1", TextToDisplay:="Return to Summary Page"
                    ' Step 36: AutoFit the columns in the temporary worksheet
                        wsTemp.Range("A:" & EndColumn).EntireColumn.AutoFit
                    ' Step 37: Now copy the temporary worksheet into the click and pledge workbook.
                        wsTemp.Copy After:=ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count)
                    ' Step 38: Close the temporary workbook and don't save any changes made to the original report.
                        wbTemp.Close SaveChanges:=False
                    ' Step 39: Go into the "Summary Page" worksheet and add the temporary worksheet name (LoopCount) into column R, to match with the row the original file name was put into.
                        wsSummary.Range("R" & SummaryLastRow).value = LoopCount
                    ' Step 40: In the "Summary Page" worksheet put an "x" in column C in the row with the new file names, to indicate it has been completed.
                        wsSummary.Range("C" & SummaryLastRow).value = "x"
                    ' Step 41: Add one to the LoopCount for the next Loop
                        LoopCount = 1 + LoopCount
                    ' Step 42: Go to the next File in the FolderPath
                        File = Dir()
            ' Restart the loop
                Loop
       
       
        ' Step 43: Add the School Mapping Worksheet
            SchoolMapping.CnP_SchoolMap
           
       
        ' Step 44: Add a variable for the "School Mapping" worksheet called 'wsSchoolMap'
            Set wsSchoolMap = ThisWorkbook.Sheets("School Mapping")
       
       
        ' Step 45: Create the "Sweeps Breakdown" worksheet and add a variable called 'wsSweepsBD'.
            Set wsSweepsBD = ThisWorkbook.Worksheets.Add(Before:=wsSchoolMap)
            wsSweepsBD.Name = "Sweeps Breakdown"
            

        ' Step 46: Populate the Column Headers for the "Sweeps Breakdown" worksheet.
            wsSweepsBD.Range("A1").value = "Sweep ID"
            wsSweepsBD.Range("B1").value = "School Abbreviation"
            wsSweepsBD.Range("C1").value = "Gross Amount"
            wsSweepsBD.Range("D1").value = "Total Per Transaction Fees"
            wsSweepsBD.Range("E1").value = "Total Discount Fees"
            wsSweepsBD.Range("F1").value = "Net Amount"
            wsSweepsBD.Range("G1").value = "Bank Fees"
            wsSweepsBD.Range("H1").value = "Net Deposit"
            wsSweepsBD.Range("I1").value = "New File Name/Worksheet Name"
            wsSweepsBD.Range("J1").value = "Fund Date (MM/DD/YYYY)"
            wsSweepsBD.Range("K1").value = "Fund Date (YYYY.MM.DD)"
            wsSweepsBD.Range("L1").value = "Total Transactions in Sweep"
            wsSweepsBD.Range("M1").value = "Number of Positive Transactions"
            wsSweepsBD.Range("N1").value = "Number of Negative Transactions"
            
            

        ' Steps 47-48: Create and Fill formulas down in the "Reports Consolidated" worksheet
           
            ' Step 47: Create formulas in columns K, L, M, N, O, Q, R, S - starting in row 2
                ' K2 [Order Number Trimmed] -> =TRIM(RIGHT(B2,LEN(B2)-4))
                    wsConsolidated.Range("K2").Formula = "=TRIM(RIGHT(B2,LEN(B2)-4))"
                ' L2 [Transaction Date (MM/DD/YYYY)] -> =TEXT(C2,"MM/DD/YYYY")
                    wsConsolidated.Range("L2").Formula = "=TEXT(C2,""MM/DD/YYYY"")"
                ' M2 [Fund Date (MM/DD/YYYY)] -> =TEXT(D2,"MM/DD/YYYY")
                    wsConsolidated.Range("M2").Formula = "=TEXT(D2,""MM/DD/YYYY"")"
                ' N2 [CNP School ID] -> =LEFT(K2,5)
                    wsConsolidated.Range("N2").Formula = "=LEFT(K2,5)"
                ' O2 [CNP School ID - Sweep ID] -> =N2&" - "&A2
                    wsConsolidated.Range("O2").Formula = "=N2&"" - ""&A2"
                ' Q2 [New File Name] -> =XLOOKUP(P2,'Summary Page'!A:A,'Summary Page'!B:B)
                    wsConsolidated.Range("Q2").Formula = "=XLOOKUP(P2,'Summary Page'!A:A,'Summary Page'!B:B)"
                ' R2 [Transaction Date (YYYY.MM.DD)] -> =TEXT(C2,"YYYY.MM.DD")
                    wsConsolidated.Range("R2").Formula = "=TEXT(C2,""YYYY.MM.DD"")"
                ' S2 [Fund Date (YYYY.MM.DD)] -> =TEXT(D2,"YYYY.MM.DD")
                    wsConsolidated.Range("S2").Formula = "=TEXT(D2,""YYYY.MM.DD"")"
                   
                   
            ' Step 48: Fill Formulas down
                wsConsolidated.Range("K2:O" & ConsolidatedNewLastRow).FillDown
                wsConsolidated.Range("Q2:S" & ConsolidatedNewLastRow).FillDown
               
       
        ' Steps 49-51: Populate the Formulas in the "Summary Page" worksheet and Fill Down formulas
            ' Step 49: Re-define the last row of the "Summary Page"
                SummaryLastRow = wsSummary.Cells(wsSummary.Rows.Count, 1).End(xlUp).Row
               
            ' Step 50: Add formulas to columns B, D, E, F, G, H, I, J, K, L, M, N, O, P, and Q - starting in Row 2
                ' B2 [New File/Worksheet Name] -> =D2&" - "&E2
                    wsSummary.Range("B2").Formula = "=D2&"" - ""&E2"
                   
                ' D2 [Year.Month] -> =LEFT(XLOOKUP(A2,'Reports Consolidated'!P:P,'Reports Consolidated'!S:S),7)
                    wsSummary.Range("D2").Formula = "=LEFT(XLOOKUP(A2,'Reports Consolidated'!P:P,'Reports Consolidated'!S:S),7)"
                   
                ' E2 [School Abbreviation] -> =XLOOKUP(NUMBERVALUE(XLOOKUP(A2,'Reports Consolidated'!P:P,'Reports Consolidated'!N:N)),'School Mapping'!C:C,'School Mapping'!I:I)
                    wsSummary.Range("E2").Formula = "=XLOOKUP(NUMBERVALUE(XLOOKUP(A2,'Reports Consolidated'!P:P,'Reports Consolidated'!N:N)),'School Mapping'!C:C,'School Mapping'!I:I)"
               
                ' F2 [Transactions for the report] -> =COUNTIF('Reports Consolidated'!P:P,A2)
                    wsSummary.Range("F2").Formula = "=COUNTIF('Reports Consolidated'!P:P,A2)"
               
                ' G2 [Positive Transactions for the report] -> =COUNTIFS('Reports Consolidated'!P:P,A2,'Reports Consolidated'!J:J,">0")
                    wsSummary.Range("G2").Formula = "=COUNTIFS('Reports Consolidated'!P:P,A2,'Reports Consolidated'!J:J,"">0"")"
               
                ' H2 [Negative Transactions for the report] -> =COUNTIFS('Reports Consolidated'!P:P,A2,'Reports Consolidated'!J:J,"<0")
                    wsSummary.Range("H2").Formula = "=COUNTIFS('Reports Consolidated'!P:P,A2,'Reports Consolidated'!J:J,""<0"")"
               
                ' I2 [Sweeps for the report] -> =COUNTA(UNIQUE(FILTER('Reports Consolidated'!O:O, 'Reports Consolidated'!P:P=A2)))
                    wsSummary.Range("I2").Formula = "=COUNTA(UNIQUE(FILTER('Reports Consolidated'!O:O, 'Reports Consolidated'!P:P=A2)))"
               
                ' J2 [Positive Sweeps for the report] -> =COUNTIFS('Sweeps Breakdown'!I:I,'Summary Page'!B2,'Sweeps Breakdown'!F:F,">0")
                    wsSummary.Range("J2").Formula = "=COUNTIFS('Sweeps Breakdown'!I:I,'Summary Page'!B2,'Sweeps Breakdown'!F:F,"">0"")"
               
                ' K2 [Negative Sweeps for the report] -> =COUNTIFS('Sweeps Breakdown'!I:I,'Summary Page'!B2,'Sweeps Breakdown'!F:F,"<0")
                    wsSummary.Range("K2").Formula = "=COUNTIFS('Sweeps Breakdown'!I:I,'Summary Page'!B2,'Sweeps Breakdown'!F:F,""<0"")"
               
                ' L2 [Gross Amount for the report] -> =SUMIF('Reports Consolidated'!P:P,A2,'Reports Consolidated'!G:G)
                    wsSummary.Range("L2").Formula = "=SUMIF('Reports Consolidated'!P:P,A2,'Reports Consolidated'!G:G)"
               
                ' M2 [Per Transaction Fees for the report] -> =SUMIF('Reports Consolidated'!P:P,A2,'Reports Consolidated'!H:H)
                    wsSummary.Range("M2").Formula = "=SUMIF('Reports Consolidated'!P:P,A2,'Reports Consolidated'!H:H)"
               
                ' N2 [Discount Fees for the report] -> =SUMIF('Reports Consolidated'!P:P,A2,'Reports Consolidated'!I:I)
                    wsSummary.Range("N2").Formula = "=SUMIF('Reports Consolidated'!P:P,A2,'Reports Consolidated'!I:I)"
               
                ' O2 [Net amount for the report] -> =SUMIF('Reports Consolidated'!P:P,A2,'Reports Consolidated'!J:J)
                    wsSummary.Range("O2").Formula = "=SUMIF('Reports Consolidated'!P:P,A2,'Reports Consolidated'!J:J)"
               
                ' P2 [Bank Fees (Positive Sweeps * 2.50)] -> =J2*-2.5
                    wsSummary.Range("P2").Formula = "=J2*-2.5"
               
                ' Q2 [Net amount after bank fees] -> =O2+P2
                    wsSummary.Range("Q2").Formula = "=O2+P2"
               
            ' Step 51: Fill Formulas Down
                wsSummary.Range("B2:B" & SummaryLastRow).FillDown
                wsSummary.Range("D2:Q" & SummaryLastRow).FillDown
               
               
        ' Steps 52-54: Populate Formulas in the "Sweeps Breakdown" worksheet.
            ' Step 52: Add formulas to the following Columns:
               ' A2 [Sweep ID] -> =UNIQUE(FILTER('Reports Consolidated'!O:O,('Reports Consolidated'!O:O<>"")*('Reports Consolidated'!O:O<>"CNP School ID - Sweep ID")))
                   wsSweepsBD.Range("A2").Formula2 = "=UNIQUE(FILTER('Reports Consolidated'!O:O,('Reports Consolidated'!O:O<>"""")*('Reports Consolidated'!O:O<>""CNP School ID - Sweep ID"")))"
               
               ' B2 [School Abbreviation] -> =XLOOKUP(NUMBERVALUE(LEFT(A2,5)),'School Mapping'!C:C,'School Mapping'!I:I)
                   wsSweepsBD.Range("B2").Formula = "=XLOOKUP(NUMBERVALUE(LEFT(A2,5)),'School Mapping'!C:C,'School Mapping'!I:I)"
                   
               ' C2 [Gross Amount] -> =SUMIF('Reports Consolidated'!O:O,A2,'Reports Consolidated'!G:G)
                   wsSweepsBD.Range("C2").Formula = "=SUMIF('Reports Consolidated'!O:O,A2,'Reports Consolidated'!G:G)"
                   
               ' D2 [Total Per Transaction Fees] -> "=SUMIF('Reports Consolidated'!O:O,A2,'Reports Consolidated'!H:H)"
                   wsSweepsBD.Range("D2").Formula = "=SUMIF('Reports Consolidated'!O:O,A2,'Reports Consolidated'!H:H)"
                   
               ' E2 [Total Discount Fees] -> "=SUMIF('Reports Consolidated'!O:O,A2,'Reports Consolidated'!I:I)"
                   wsSweepsBD.Range("E2").Formula = "=SUMIF('Reports Consolidated'!O:O,A2,'Reports Consolidated'!I:I)"
                   
               ' F2 [Net Amount] -> "=SUMIF('Reports Consolidated'!O:O,A2,'Reports Consolidated'!J:J)"
                   wsSweepsBD.Range("F2").Formula = "=SUMIF('Reports Consolidated'!O:O,A2,'Reports Consolidated'!J:J)"
                   
               ' G2 [Bank Fees] -> =IF(F2>0,-2.5,0)
                   wsSweepsBD.Range("G2").Formula = "=IF(F2>0,-2.5,0)"
                   
                ' H2 [Net Deposit] -> =F2+G2
                    wsSweepsBD.Range("H2").Formula = "=F2+G2"
                   
                ' I2 [New File Name/Worksheet Name] -> =XLOOKUP(A2,'Reports Consolidated'!O:O,'Reports Consolidated'!Q:Q)
                    wsSweepsBD.Range("I2").Formula = "=XLOOKUP(A2,'Reports Consolidated'!O:O,'Reports Consolidated'!Q:Q)"
                
                ' J2 [Fund Date (MM/DD/YYYY)] -> =XLOOKUP(A2,'Reports Consolidated'!O:O,'Reports Consolidated'!M:M)
                    wsSweepsBD.Range("J2").Formula = "=XLOOKUP(A2,'Reports Consolidated'!O:O,'Reports Consolidated'!M:M)"
                    
                ' K2 [Fund Date (YYYY.MM.DD] -> =XLOOKUP(A2,'Reports Consolidated'!O:O,'Reports Consolidated'!S:S)
                    wsSweepsBD.Range("K2").Formula = "=XLOOKUP(A2,'Reports Consolidated'!O:O,'Reports Consolidated'!S:S)"
                    
                ' L2 [Total Transactions in Sweep] -> =COUNTIF('Reports Consolidated'!O:O,A2)
                    wsSweepsBD.Range("L2").Formula = "=COUNTIF('Reports Consolidated'!O:O,A2)"
                    
                ' M2 [Number of Positive Transactions] -> =COUNTIFS('Reports Consolidated'!O:O,A2,'Reports Consolidated'!J:J,">0")
                    wsSweepsBD.Range("M2").Formula = "=COUNTIFS('Reports Consolidated'!O:O,A2,'Reports Consolidated'!J:J,"">0"")"
                    
                ' N2 [Number of Negative Transactions] -> =COUNTIFS('Reports Consolidated'!O:O,A2,'Reports Consolidated'!J:J,"<0")
                    wsSweepsBD.Range("N2").Formula = "=COUNTIFS('Reports Consolidated'!O:O,A2,'Reports Consolidated'!J:J,""<0"")"
           
           
            ' Step 53: Create a variable to find the last row of column A in the "Sweeps Breakdown" worksheet and call it 'SweepsBDLastRow'
                SweepsBDLastRow = wsSweepsBD.Cells(wsSweepsBD.Rows.Count, 1).End(xlUp).Row
           
            ' Step 54: Fill Formulas down and then copy and paste the values of the data
                wsSweepsBD.Range("B2:K" & SweepsBDLastRow).FillDown
                With wsSweepsBD.Range("A:K")
                    .Copy
                    .PasteSpecial xlPasteValues
                End With
                Application.CutCopyMode = False
               
               
        ' Step 55: Auto Filter and Auto Fit Column Width of the worksheets: "Summary Page", "Salesforce Report", "Reports Consolidated", "Sweeps Breakdown"
            wsSummary.UsedRange.AutoFilter
            wsSFReport.UsedRange.AutoFilter
            wsConsolidated.UsedRange.AutoFilter
            wsSweepsBD.UsedRange.AutoFilter
            
            wsSummary.Cells.Columns.AutoFit
            wsSFReport.Cells.Columns.AutoFit
            wsConsolidated.Cells.Columns.AutoFit
            wsSweepsBD.Cells.Columns.AutoFit
               
               
        ' Steps 56-58: Rename Worksheets to the "New File Name/Worksheet Name" - using the "Summary Page" worksheet column B
            ' Step 56: Create a loop to loop through each worksheet
                For I = 2 To SummaryLastRow
                    ' Step 57: Define "CurrentFileName" (Column R of the "Summary Page" worksheet) and "NewFileName" (Column B of the "Summary Page" worksheet) variables
                        CurrentFileName = wsSummary.Cells(I, "R").value
                        NewFileName = wsSummary.Cells(I, "B").value
                    ' Step 58: Loop through each file name to match the CurrentFileName with the New FileName then change the name to the 'NewFileName'
                        For Each ws In ThisWorkbook.Worksheets
                            If ws.Name = CurrentFileName Then
                                ws.Name = NewFileName
                                Exit For
                            End If
                        Next ws
                Next I
       
           
        ' Step 59: Hide the worksheets: "COMPLETE RESET", "Summary Page", "Salesforce Report", "Reports Consolidated", "Sweeps Breakdown", and "School Mapping" (Sheets 1-6).
            For I = 1 To 6
                ThisWorkbook.Worksheets(I).Visible = xlSheetHidden
            Next I
           
           
        ' Step 60: Reorder visible sheets in alphabetical order.
            If visibleSheetCount > 1 Then
                For I = 1 To visibleSheetCount - 1
                    For j = 1 To visibleSheetCount - I
                        If StrComp(ThisWorkbook.Worksheets(j).Name, ThisWorkbook.Worksheets(j + 1).Name, vbTextCompare) > 0 Then
                            Set temp = ThisWorkbook.Worksheets(j)
                            ThisWorkbook.Worksheets(j).Move After:=ThisWorkbook.Worksheets(j + 1)
                            Set temp = Nothing
                        End If
                    Next j
                Next I
            End If


        ' Step 61: Unhide all worksheets
            For Each ws In ThisWorkbook.Worksheets
                ws.Visible = xlSheetVisible
            Next ws
           
           
        ' Step 62: Hide all sheets that aren't the following worksheets (not 1-6): "COMPLETE RESET", "Summary Page", "Salesforce Report", "Reports Consolidated", "Sweeps Breakdown", and "School Mapping"
            For I = 7 To ThisWorkbook.Worksheets.Count
                ThisWorkbook.Worksheets(I).Visible = xlSheetHidden
            Next I
           
           
        ' Steps 63-66: Create a new folder in the FolderPath called "Renamed Monthly Reports" - Then copy and rename each file in the FolderPath. If that FolderPath exists. Then skip it.
            ' Step 63: Define the NewFolderPath variable.
                NewFolderPath = FolderPath & "\Renamed Monthly Reports"
           
            ' Step 64: Check if the FolderPath exists.
                If Dir(NewFolderPath, vbDirectory) = "" Then
                    ' Step 65: Make the new folder path
                        MkDir NewFolderPath
                    ' Steps 66: Loop through each row in the "Summary Page" worksheet, and use column A as the original name and column B as the new name. Once complete, go to the next.
                        For I = 2 To SummaryLastRow
                            OriginalFolderFileName = wsSummary.Cells(I, "A").value
                            NewFolderFileName = wsSummary.Cells(I, "B").value
                            File = FolderPath & "\" & OriginalFolderFileName
                            NewFile = NewFolderPath & "\Click and Pledge - " & NewFolderFileName & ".csv"
                            On Error Resume Next
                            FileCopy File, NewFile
                            On Error GoTo 0
                        Next I
                End If
               
               
   ''' Start Populating the rest of the worksheets '''

        ' Steps 67-92: Create the rest of the worksheets needed in for this analysis. Name them appropriately

            ' Step 67: wsConsolidatedPos ("Reports Consolidated-Positives" worksheet)
                ' Add variable with the new worksheet.
                    Set wsConsolidatedPos = ThisWorkbook.Sheets.Add(Before:=wsSFReport)
                ' Rename the worksheet.
                    wsConsolidatedPos.Name = "Reports Consolidated-Positives"
               
           ' Step 68: Set wsConsolidatedNeg ("Reports Consolidated-Negatives" worksheet)
                ' Add variable with the new worksheet.
                    Set wsConsolidatedNeg = ThisWorkbook.Sheets.Add(Before:=wsSFReport)
                ' Rename the worksheet.
                    wsConsolidatedNeg.Name = "Reports Consolidated-Negatives"
               
            ' Step 69: wsConsolidatedReturn ("Reports Consolidated-ReturnFees" worksheet)
                ' Add variable with the new worksheet.
                    Set wsConsolidatedReturn = ThisWorkbook.Sheets.Add(Before:=wsSFReport)
                ' Rename the worksheet.
                    wsConsolidatedReturn.Name = "Reports Consolidated-ReturnFees"
               
            ' Step 71: wsAdditionalFees ("Additional Return Fees" worksheet)
                ' Add variable with the new worksheet.
                    Set wsAdditionalFees = ThisWorkbook.Sheets.Add(Before:=wsSFReport)
                ' Rename the worksheet.
                    wsAdditionalFees.Name = "Additional Return Fees"
               
            ' Step 72: wsSFFiltered ("SF Filtered" worksheet)
                ' Add variable with the new worksheet.
                    Set wsSFFiltered = ThisWorkbook.Sheets.Add(After:=wsSFReport)
                ' Rename the worksheet.
                    wsSFFiltered.Name = "SF Filtered"
               
            ' Step 73: wsPosNegSweeps ("Positive vs Negative Sweeps" worksheet)
                ' Add variable with the new worksheet.
                    Set wsPosNegSweeps = ThisWorkbook.Sheets.Add(Before:=wsSchoolMap)
                ' Rename the worksheet.
                    wsPosNegSweeps.Name = "Positive vs Negative Sweeps"

            ' Step 74: wsSFvsCPRevenue ("SF vs C&P Revenue Match Check" worksheet)
                ' Add variable with the new worksheet.
                    Set wsSFvsCPRevenue = ThisWorkbook.Sheets.Add(Before:=wsSchoolMap)
                ' Rename the worksheet.
                    wsSFvsCPRevenue.Name = "SF vs C&P Revenue Match Check"
               
            ' Step 75: wsRevenueDif ("Revenue Difference" worksheet)
                ' Add variable with the new worksheet.
                    Set wsRevenueDif = ThisWorkbook.Sheets.Add(Before:=wsSchoolMap)
                ' Rename the worksheet.
                    wsRevenueDif.Name = "Revenue Difference"
               
            ' Step 76: wsSFPos ("Positive SF Data" worksheet)
                ' Add variable with the new worksheet.
                    Set wsSFPos = ThisWorkbook.Sheets.Add(Before:=wsSchoolMap)
                ' Rename the worksheet.
                    wsSFPos.Name = "Positive SF Data"
                 
            ' Step 77: wsSFNeg ("Negative SF Data" worksheet)
                ' Add variable with the new worksheet.
                    Set wsSFNeg = ThisWorkbook.Sheets.Add(Before:=wsSchoolMap)
                ' Rename the worksheet.
                    wsSFNeg.Name = "Negative SF Data"

            ' Step 78: wsSchoolAllocation ("School Allocation" worksheet)
                ' Add variable with the new worksheet.
                    Set wsSchoolAllocation = ThisWorkbook.Sheets.Add(Before:=wsSchoolMap)
                ' Rename the worksheet.
                    wsSchoolAllocation.Name = "School Allocation"

            ' Step 79: wsSchoolUserAllocation ("UserRequired School Allocation" worksheet)
                ' Add variable with the new worksheet.
                    Set wsSchoolUserAllocation = ThisWorkbook.Sheets.Add(Before:=wsSchoolMap)
                ' Rename the worksheet.
                    wsSchoolUserAllocation.Name = "UserRequired School Allocation"

            ' Step 80: wsSFCampaignCheck ("SF Campaign Checker" worksheet)
                ' Add variable with the new worksheet.
                    Set wsSFCampaignCheck = ThisWorkbook.Sheets.Add(Before:=wsSchoolMap)
                ' Rename the worksheet.
                    wsSFCampaignCheck.Name = "SF Campaign Checker"

            ' Step : wsAccountDesignation ("Account Designation" worksheet)
                ' Add variable with the new worksheet.
                    Set wsAccountDesignation = ThisWorkbook.Sheets.Add(Before:=wsSchoolMap)
                ' Rename the worksheet.
                    wsAccountDesignation.Name = "Account Designation"
                   
            ' Step 81: wsAccountUserDesignation ("UserRequired AccountDesignation" worksheet)
                ' Add variable with the new worksheet.
                    Set wsAccountUserDesignation = ThisWorkbook.Sheets.Add(Before:=wsSchoolMap)
                ' Rename the worksheet.
                    wsAccountUserDesignation.Name = "UserRequired AccountDesignation"

            ' Step 82: wsDivisionMap ("Division Mapping" worksheet)
                ' Add variable with the new worksheet.
                    Set wsDivisionMap = ThisWorkbook.Sheets.Add(After:=wsSchoolMap)
                ' Rename the worksheet.
                    wsDivisionMap.Name = "Division Mapping"

            ' Step 83: wsCRJSweepsInfo ("Sweeps CRJ information" worksheet)
                ' Add variable with the new worksheet.
                    Set wsCRJSweepsInfo = ThisWorkbook.Sheets.Add(After:=wsDivisionMap)
                ' Rename the worksheet.
                    wsCRJSweepsInfo.Name = "Sweeps CRJ information"

            ' Step 84: wsCRJReturnFees ("Extra Return Fees - CRJ Format" worksheet)
                ' Add variable with the new worksheet.
                    Set wsCRJReturnFees = ThisWorkbook.Sheets.Add(After:=wsCRJSweepsInfo)
                ' Rename the worksheet.
                    wsCRJReturnFees.Name = "Extra Return Fees - CRJ Format"
 
            ' Step 85: wsCRJFormat ("CRJ Format" worksheet)
                ' Add variable with the new worksheet.
                    Set wsCRJFormat = ThisWorkbook.Sheets.Add(After:=wsCRJReturnFees)
                ' Rename the worksheet.
                    wsCRJFormat.Name = "CRJ Format"

            ' Step 86: wsCRJPutTogether ("CRJ Put together" worksheet)
                ' Add variable with the new worksheet.
                    Set wsCRJPutTogether = ThisWorkbook.Sheets.Add(After:=wsCRJFormat)
                ' Rename the worksheet.
                    wsCRJPutTogether.Name = "CRJ Put together"
  
            ' Step 87: wsCRJPos ("Positive Sweep CRJs" worksheet)
                ' Add variable with the new worksheet.
                    Set wsCRJPos = ThisWorkbook.Sheets.Add(After:=wsCRJPutTogether)
                ' Rename the worksheet.
                    wsCRJPos.Name = "Positive Sweep CRJs"
 
            ' Step 88: wsCRJImport ("Positive CRJs - Import File" worksheet)
                ' Add variable with the new worksheet.
                    Set wsCRJImport = ThisWorkbook.Sheets.Add(After:=wsCRJPos)
                ' Rename the worksheet.
                    wsCRJImport.Name = "Positive CRJs - Import File"

            ' Step 89: wsCRJNeg ("Negative Sweep CRJs" worksheet)
                ' Add variable with the new worksheet.
                    Set wsCRJNeg = ThisWorkbook.Sheets.Add(After:=wsCRJImport)
                ' Rename the worksheet.
                    wsCRJNeg.Name = "Negative Sweep CRJs"
  
            ' Step 90: wsCHARNegStart ("Neg. CHAR - Start" worksheet)
                ' Add variable with the new worksheet.
                    Set wsCHARNegStart = ThisWorkbook.Sheets.Add(After:=wsCRJNeg)
                ' Rename the worksheet.
                    wsCHARNegStart.Name = "Neg. CHAR - Start"
                    
            ' Step 91: wsCHARNeg ("Negative Sweep - CHARs" worksheet)
                ' Add variable with the new worksheet.
                    Set wsCHARNeg = ThisWorkbook.Sheets.Add(After:=wsCHARNegStart)
                ' Rename the worksheet.
                    wsCHARNeg.Name = "Negative Sweep - CHARs"
    
            ' Step 92: wsCHARImport ("Negative Sweeps - CHARs Import" worksheet)
                ' Add variable with the new worksheet.
                    Set wsCHARImport = ThisWorkbook.Sheets.Add(After:=wsCHARNeg)
                ' Rename the worksheet.
                    wsCHARImport.Name = "Negative Sweeps - CHARs Import"


    ' Steps 93-: Populate all the worksheets
           
            ' Steps 93-95: Populate the: wsConsolidatedPos ("Reports Consolidated-Positives" worksheet)
                ' Step 93: Create the columns headers.
                    wsConsolidatedPos.Range("A1").value = "Sweep ID"
                    wsConsolidatedPos.Range("B1").value = "Order Number"
                    wsConsolidatedPos.Range("C1").value = "C&P Transaction Date"
                    wsConsolidatedPos.Range("D1").value = "C&P Fund Date"
                    wsConsolidatedPos.Range("E1").value = "First Name"
                    wsConsolidatedPos.Range("F1").value = "Last Name"
                    wsConsolidatedPos.Range("G1").value = "Gross Amount"
                    wsConsolidatedPos.Range("H1").value = "Per Transaction Fees"
                    wsConsolidatedPos.Range("I1").value = "Discount Fees"
                    wsConsolidatedPos.Range("J1").value = "Net Amount"
                    wsConsolidatedPos.Range("K1").value = "Order Number Trimmed"
                    wsConsolidatedPos.Range("L1").value = "Transaction Date (MM/DD/YYYY)"
                    wsConsolidatedPos.Range("M1").value = "Fund Date (MM/DD/YYYY)"
                    wsConsolidatedPos.Range("N1").value = "CNP School ID"
                    wsConsolidatedPos.Range("O1").value = "CNP School ID - Sweep ID"
                    wsConsolidatedPos.Range("P1").value = "Original File Name"
                    wsConsolidatedPos.Range("Q1").value = "New File Name"
                    wsConsolidatedPos.Range("R1").value = "Transaction Date (YYYY.MM.DD)"
                    wsConsolidatedPos.Range("S1").value = "Fund Date (YYYY.MM.DD)"

                ' Step 94: Populate the Formula.
                    wsConsolidatedPos.Range("A2").Formula2 = "=FILTER('Reports Consolidated'!A:S,('Reports Consolidated'!J:J>0) * ('Reports Consolidated'!J:J<>""Net Amount""),"""")"
                
                ' Step 95: Create a filter for the column headers and auto fit the column width
                    wsConsolidatedPos.UsedRange.AutoFilter
                    wsConsolidatedPos.Range("A:S").Columns.AutoFit


            ' Steps 96-98: Populate the: wsConsolidatedNeg ("Reports Consolidated-Negatives" worksheet)
                ' Step 96: Create the columns headers.
                    wsConsolidatedNeg.Range("A1").value = "Sweep ID"
                    wsConsolidatedNeg.Range("B1").value = "Order Number"
                    wsConsolidatedNeg.Range("C1").value = "C&P Transaction Date"
                    wsConsolidatedNeg.Range("D1").value = "C&P Fund Date"
                    wsConsolidatedNeg.Range("E1").value = "First Name"
                    wsConsolidatedNeg.Range("F1").value = "Last Name"
                    wsConsolidatedNeg.Range("G1").value = "Gross Amount"
                    wsConsolidatedNeg.Range("H1").value = "Per Transaction Fees"
                    wsConsolidatedNeg.Range("I1").value = "Discount Fees"
                    wsConsolidatedNeg.Range("J1").value = "Net Amount"
                    wsConsolidatedNeg.Range("K1").value = "Order Number Trimmed"
                    wsConsolidatedNeg.Range("L1").value = "Transaction Date (MM/DD/YYYY)"
                    wsConsolidatedNeg.Range("M1").value = "Fund Date (MM/DD/YYYY)"
                    wsConsolidatedNeg.Range("N1").value = "CNP School ID"
                    wsConsolidatedNeg.Range("O1").value = "CNP School ID - Sweep ID"
                    wsConsolidatedNeg.Range("P1").value = "Original File Name"
                    wsConsolidatedNeg.Range("Q1").value = "New File Name"
                    wsConsolidatedNeg.Range("R1").value = "Transaction Date (YYYY.MM.DD)"
                    wsConsolidatedNeg.Range("S1").value = "Fund Date (YYYY.MM.DD)"

                ' Step 97: Populate the Formula.
                    wsConsolidatedNeg.Range("A2").Formula2 = "=FILTER('Reports Consolidated'!A:S,('Reports Consolidated'!J:J<0) * ('Reports Consolidated'!H:H<>'Reports Consolidated'!J:J),"""")"
                
                ' Step 98: Create a filter for the column headers and auto fit the column width
                    wsConsolidatedNeg.UsedRange.AutoFilter
                    wsConsolidatedNeg.Range("A:S").Columns.AutoFit
                    
                    
            ' Steps 99-101: Populate the: wsConsolidatedReturn ("Reports Consolidated-ReturnFees" worksheet)
                ' Step 99: Create the columns headers.
                    wsConsolidatedReturn.Range("A1").value = "Sweep ID"
                    wsConsolidatedReturn.Range("B1").value = "Order Number"
                    wsConsolidatedReturn.Range("C1").value = "C&P Transaction Date"
                    wsConsolidatedReturn.Range("D1").value = "C&P Fund Date"
                    wsConsolidatedReturn.Range("E1").value = "First Name"
                    wsConsolidatedReturn.Range("F1").value = "Last Name"
                    wsConsolidatedReturn.Range("G1").value = "Gross Amount"
                    wsConsolidatedReturn.Range("H1").value = "Per Transaction Fees"
                    wsConsolidatedReturn.Range("I1").value = "Discount Fees"
                    wsConsolidatedReturn.Range("J1").value = "Net Amount"
                    wsConsolidatedReturn.Range("K1").value = "Order Number Trimmed"
                    wsConsolidatedReturn.Range("L1").value = "Transaction Date (MM/DD/YYYY)"
                    wsConsolidatedReturn.Range("M1").value = "Fund Date (MM/DD/YYYY)"
                    wsConsolidatedReturn.Range("N1").value = "CNP School ID"
                    wsConsolidatedReturn.Range("O1").value = "CNP School ID - Sweep ID"
                    wsConsolidatedReturn.Range("P1").value = "Original File Name"
                    wsConsolidatedReturn.Range("Q1").value = "New File Name"
                    wsConsolidatedReturn.Range("R1").value = "Transaction Date (YYYY.MM.DD)"
                    wsConsolidatedReturn.Range("S1").value = "Fund Date (YYYY.MM.DD)"

                ' Step 100: Populate the Formula.
                    wsConsolidatedReturn.Range("A2").Formula2 = "=FILTER('Reports Consolidated'!A:S, (('Reports Consolidated'!J:J<0) * ('Reports Consolidated'!J:J='Reports Consolidated'!H:H)) + (('Reports Consolidated'!J:J<0) * ('Reports Consolidated'!G:G=0)),"""")"
                
                ' Step 101: Create a filter for the column headers and auto fit the column width
                    wsConsolidatedReturn.UsedRange.AutoFilter
                    wsConsolidatedReturn.Range("A:S").Columns.AutoFit
                    
                    
            ' Steps 102-104: Populate the: wsAdditionalFees ("Additional Return Fees" worksheet)
                ' Step 102: Create the columns headers.
                    wsAdditionalFees.Range("A1").value = "Sweep ID"
                    wsAdditionalFees.Range("B1").value = "Order Number"
                    wsAdditionalFees.Range("C1").value = "C&P Transaction Date"
                    wsAdditionalFees.Range("D1").value = "C&P Fund Date"
                    wsAdditionalFees.Range("E1").value = "First Name"
                    wsAdditionalFees.Range("F1").value = "Last Name"
                    wsAdditionalFees.Range("G1").value = "Gross Amount"
                    wsAdditionalFees.Range("H1").value = "Per Transaction Fees"
                    wsAdditionalFees.Range("I1").value = "Discount Fees"
                    wsAdditionalFees.Range("J1").value = "Net Amount"
                    wsAdditionalFees.Range("K1").value = "Order Number Trimmed"
                    wsAdditionalFees.Range("L1").value = "Transaction Date (MM/DD/YYYY)"
                    wsAdditionalFees.Range("M1").value = "Fund Date (MM/DD/YYYY)"
                    wsAdditionalFees.Range("N1").value = "CNP School ID"
                    wsAdditionalFees.Range("O1").value = "CNP School ID - Sweep ID"
                    wsAdditionalFees.Range("P1").value = "Original File Name"
                    wsAdditionalFees.Range("Q1").value = "New File Name"
                    wsAdditionalFees.Range("R1").value = "Transaction Date (YYYY.MM.DD)"
                    wsAdditionalFees.Range("S1").value = "Fund Date (YYYY.MM.DD)"

                ' Step 103: Populate the Formula.
                    wsAdditionalFees.Range("A2").Formula2 = "=FILTER('Reports Consolidated'!A:S,('Reports Consolidated'!H:H=-35)*('Reports Consolidated'!J:J=-35),"""")"
                
                ' Step 104: Create a filter for the column headers and auto fit the column width
                    wsAdditionalFees.UsedRange.AutoFilter
                    wsAdditionalFees.Range("A:S").Columns.AutoFit
                    

            ' Steps 105-111: Populate the: wsSFFiltered("SF Filtered" worksheet)
                ' Step 105: Create the columns headers.
                    wsSFFiltered.Range("A2").value = "Payment: Payment Number"
                    wsSFFiltered.Range("B2").value = "Account Name"
                    wsSFFiltered.Range("C2").value = "Opportunity Name"
                    wsSFFiltered.Range("D2").value = "Primary Campaign Source"
                    wsSFFiltered.Range("E2").value = "C&P Order Number"
                    wsSFFiltered.Range("F2").value = "Check Number"
                    wsSFFiltered.Range("G2").value = "Payment Date"
                    wsSFFiltered.Range("H2").value = "Stage"
                    wsSFFiltered.Range("I2").value = "Payment Type"
                    wsSFFiltered.Range("J2").value = "Close Date"
                    wsSFFiltered.Range("K2").value = "Deposit Date (Manual)"
                    wsSFFiltered.Range("L2").value = "Deposit Date"
                    wsSFFiltered.Range("M2").value = "Last Name"
                    wsSFFiltered.Range("N2").value = "First Name"
                    wsSFFiltered.Range("O2").value = "Campaign Type"
                    wsSFFiltered.Range("P2").value = "C&P Account Name"
                    wsSFFiltered.Range("Q2").value = "Payment Amount"
                    wsSFFiltered.Range("R2").value = "Description"
                    wsSFFiltered.Range("S2").value = "Campaign Name - Campaign Type"

                ' Step 106: Populate the column positions from the Salesforce dictionary saved earlier. This helps with the lookups in the next step.
                    ' A1 -> "PaymentIDSFColumn = ColumnDictionary("Payment: Payment Number")"
                        wsSFFiltered.Range("A1").value = PaymentIDSFColumn
                    ' B1 -> "FamilyNameSFColumn = ColumnDictionary("Account Name")"
                        wsSFFiltered.Range("B1").value = FamilyNameSFColumn
                    ' C1 -> "OpportunityNameSFColumn = ColumnDictionary("Opportunity Name")"
                        wsSFFiltered.Range("C1").value = OpportunityNameSFColumn
                    ' D1 -> "CampaignNameSFColumn = ColumnDictionary("Primary Campaign Source")"
                        wsSFFiltered.Range("D1").value = CampaignNameSFColumn
                    ' E1 -> "OrderNumberSFColumn = ColumnDictionary("C&P Order Number")"
                        wsSFFiltered.Range("E1").value = OrderNumberSFColumn
                    ' F1 -> "CheckNumberColumn = ColumnDictionary("Check Number")"
                        wsSFFiltered.Range("F1").value = CheckNumberColumn
                    ' G1 -> "PaymentDateSFColumn = ColumnDictionary("Payment Date")"
                        wsSFFiltered.Range("G1").value = PaymentDateSFColumn
                    ' H1 -> "StageSFColumn = ColumnDictionary("Stage")"
                        wsSFFiltered.Range("H1").value = StageSFColumn
                    ' I1 -> "PaymentTypeColumn = ColumnDictionary("Payment Type")"
                        wsSFFiltered.Range("I1").value = PaymentTypeColumn
                    ' J1 -> "CloseDateColumn = ColumnDictionary("Close Date")"
                        wsSFFiltered.Range("J1").value = CloseDateColumn
                    ' K1 -> "DepositDateManualColumn = ColumnDictionary("Deposit Date (Manual)")"
                        wsSFFiltered.Range("K1").value = DepositDateManualColumn
                    ' L1 -> "DepositDateColumn = ColumnDictionary("Depsoit Date")"
                        wsSFFiltered.Range("L1").value = DepositDateColumn
                    ' M1 -> "LastNameSFColumn = ColumnDictionary("Last Name")"
                        wsSFFiltered.Range("M1").value = LastNameSFColumn
                    ' N1 -> "FirstNameSFColumn = ColumnDictionary("First Name")"
                        wsSFFiltered.Range("N1").value = FirstNameSFColumn
                    ' O1 -> "CampaignTypeSFColumn = ColumnDictionary("Campaign Type")"
                        wsSFFiltered.Range("O1").value = CampaignTypeSFColumn
                    ' P1 -> "SchoolSFColumn = ColumnDictionary("C&P Account Name")"
                        wsSFFiltered.Range("P1").value = SchoolSFColumn
                    ' Q1 -> "PaymentAmountSFColumn = ColumnDictionary("Payment Amount")"
                        wsSFFiltered.Range("Q1").value = PaymentAmountSFColumn
                    ' R1 -> "DescriptionSFColumn = ColumnDictionary("Description")"
                        wsSFFiltered.Range("R1").value = DescriptionSFColumn
                        
                '  Step 107: Populate the formulas.
                    ' Payment: Payment Number
                        wsSFFiltered.Range("A3").Formula2 = "=FILTER(INDIRECT(""'Salesforce Report'!""&A1&"":""&A1),ISNUMBER(MATCH(INDIRECT(""'Salesforce Report'!""&E1&"":""&E1),'Reports Consolidated'!K:K,0)))"
                    ' Account Name
                        wsSFFiltered.Range("B3").Formula = "=XLOOKUP($A3, INDIRECT(""'Salesforce Report'!"" & $A$1 & "":"" & $A$1), INDIRECT(""'Salesforce Report'!"" & B$1 & "":"" & B$1))"
                    ' Opportunity Name
                        wsSFFiltered.Range("C3").Formula = "=XLOOKUP($A3, INDIRECT(""'Salesforce Report'!"" & $A$1 & "":"" & $A$1), INDIRECT(""'Salesforce Report'!"" & C$1 & "":"" & C$1))"
                    ' Primary Campaign Source
                        wsSFFiltered.Range("D3").Formula = "=XLOOKUP($A3, INDIRECT(""'Salesforce Report'!"" & $A$1 & "":"" & $A$1), INDIRECT(""'Salesforce Report'!"" & D$1 & "":"" & D$1))"
                    ' C&P Order Number
                        wsSFFiltered.Range("E3").Formula = "=XLOOKUP($A3, INDIRECT(""'Salesforce Report'!"" & $A$1 & "":"" & $A$1), INDIRECT(""'Salesforce Report'!"" & E$1 & "":"" & E$1))"
                    ' Check Number
                        wsSFFiltered.Range("F3").Formula = "=XLOOKUP($A3, INDIRECT(""'Salesforce Report'!"" & $A$1 & "":"" & $A$1), INDIRECT(""'Salesforce Report'!"" & F$1 & "":"" & F$1))"
                    ' Payment Date
                        wsSFFiltered.Range("G3").Formula = "=IF(XLOOKUP($A3, INDIRECT(""'Salesforce Report'!"" & $A$1 & "":"" & $A$1), INDIRECT(""'Salesforce Report'!"" & G$1 & "":"" & G$1))="""","""",TEXT(XLOOKUP($A3, INDIRECT(""'Salesforce Report'!"" & $A$1 & "":"" & $A$1), INDIRECT(""'Salesforce Report'!"" & G$1 & "":"" & G$1)),""MM/DD/YYYY""))"
                    ' Stage
                        wsSFFiltered.Range("H3").Formula = "=XLOOKUP($A3, INDIRECT(""'Salesforce Report'!"" & $A$1 & "":"" & $A$1), INDIRECT(""'Salesforce Report'!"" & H$1 & "":"" & H$1))"
                    ' Payment Type
                        wsSFFiltered.Range("I3").Formula = "=XLOOKUP($A3, INDIRECT(""'Salesforce Report'!"" & $A$1 & "":"" & $A$1), INDIRECT(""'Salesforce Report'!"" & I$1 & "":"" & I$1))"
                    ' Close Date
                        wsSFFiltered.Range("J3").Formula = "=IF(XLOOKUP($A3, INDIRECT(""'Salesforce Report'!"" & $A$1 & "":"" & $A$1), INDIRECT(""'Salesforce Report'!"" & J$1 & "":"" & J$1))="""","""",TEXT(XLOOKUP($A3, INDIRECT(""'Salesforce Report'!"" & $A$1 & "":"" & $A$1), INDIRECT(""'Salesforce Report'!"" & J$1 & "":"" & J$1)),""MM/DD/YYYY""))"
                    ' Deposit Date (Manual)
                        wsSFFiltered.Range("K3").Formula = "=IF(XLOOKUP($A3, INDIRECT(""'Salesforce Report'!"" & $A$1 & "":"" & $A$1), INDIRECT(""'Salesforce Report'!"" & K$1 & "":"" & K$1))="""","""",TEXT(XLOOKUP($A3, INDIRECT(""'Salesforce Report'!"" & $A$1 & "":"" & $A$1), INDIRECT(""'Salesforce Report'!"" & K$1 & "":"" & K$1)),""MM/DD/YYYY""))"
                    ' Deposit Date
                        wsSFFiltered.Range("L3").Formula = "=IF(XLOOKUP($A3, INDIRECT(""'Salesforce Report'!"" & $A$1 & "":"" & $A$1), INDIRECT(""'Salesforce Report'!"" & L$1 & "":"" & L$1))="""","""",TEXT(XLOOKUP($A3, INDIRECT(""'Salesforce Report'!"" & $A$1 & "":"" & $A$1), INDIRECT(""'Salesforce Report'!"" & L$1 & "":"" & L$1)),""MM/DD/YYYY""))"
                    ' Last Name
                        wsSFFiltered.Range("M3").Formula = "=XLOOKUP($A3, INDIRECT(""'Salesforce Report'!"" & $A$1 & "":"" & $A$1), INDIRECT(""'Salesforce Report'!"" & M$1 & "":"" & M$1))"
                    ' First Name
                        wsSFFiltered.Range("N3").Formula = "=XLOOKUP($A3, INDIRECT(""'Salesforce Report'!"" & $A$1 & "":"" & $A$1), INDIRECT(""'Salesforce Report'!"" & N$1 & "":"" & N$1))"
                    ' Campaign Type
                        wsSFFiltered.Range("O3").Formula = "=XLOOKUP($A3, INDIRECT(""'Salesforce Report'!"" & $A$1 & "":"" & $A$1), INDIRECT(""'Salesforce Report'!"" & O$1 & "":"" & O$1))"
                    ' C&P Account Name
                        wsSFFiltered.Range("P3").Formula = "=XLOOKUP($A3, INDIRECT(""'Salesforce Report'!"" & $A$1 & "":"" & $A$1), INDIRECT(""'Salesforce Report'!"" & P$1 & "":"" & P$1))"
                    ' Payment Amount
                        wsSFFiltered.Range("Q3").Formula = "=XLOOKUP($A3, INDIRECT(""'Salesforce Report'!"" & $A$1 & "":"" & $A$1), INDIRECT(""'Salesforce Report'!"" & Q$1 & "":"" & Q$1))"
                    ' Description
                        wsSFFiltered.Range("R3").Formula = "=IF(XLOOKUP($A3, INDIRECT(""'Salesforce Report'!"" & $A$1 & "":"" & $A$1), INDIRECT(""'Salesforce Report'!"" & R$1 & "":"" & R$1))="""","""",XLOOKUP($A3, INDIRECT(""'Salesforce Report'!"" & $A$1 & "":"" & $A$1), INDIRECT(""'Salesforce Report'!"" & R$1 & "":"" & R$1)))"
                    ' Campaign Name - Campaign Type
                        wsSFFiltered.Range("S3").Formula = "=D3&"" - ""&O3"
                        
                    ' Add a count of the number of rows in this worksheet
                        wsSFFiltered.Range("V1").value = "Last Row--->"
                        wsSFFiltered.Range("W1").value = "=COUNTA(A:A)"

                ' Step 108-111: Fill Down formulas, Copy and Paste Values, and format cells
                    ' Step 108: Define the 'SFFilteredLastRow' variable by finding the last row in this worksheet
                        SFFilteredLastRow = wsSFFiltered.Cells(wsSFFiltered.Rows.Count, 1).End(xlUp).Row
                        
                    ' Step 109: Fill down the formulas (as long as the SFFilteredLastRow is greater than 3, otherwise just keep the formulas in the first row (3))
                        If SFFilteredLastRow > 3 Then
                        wsSFFiltered.Range("B3:S" & SFFilteredLastRow).FillDown
                        End If
                    
                    ' Step 110: Copy and Paste values of all columns
                        With wsSFFiltered.Range("A:S")
                            .Copy
                            .PasteSpecial xlPasteValues
                        End With
                        Application.CutCopyMode = False
                        
                    ' Step 111: Create a filter and auto fit the column width
                        wsSFFiltered.Range("A2:S2").AutoFilter
                        wsSFFiltered.Range("A:W").Columns.AutoFit


            ' Steps 112-119: Populate the: wsPosNegSweeps ("Positive vs Negative Sweeps" worksheet)
                ' Step 112: Create the columns headers.
                    wsPosNegSweeps.Range("A1").value = "Positive Sweeps"
                    wsPosNegSweeps.Range("B1").value = "Net Deposit (Donation Site Reports)"
                    wsPosNegSweeps.Range("C1").value = "CRJ Deposit Amount"
                    wsPosNegSweeps.Range("D1").value = "Variance In Sweep Amount"
                    wsPosNegSweeps.Range("F1").value = "Positive Sweeps with a Variance"
                    wsPosNegSweeps.Range("G1").value = "Variance Amount"
                    wsPosNegSweeps.Range("I1").value = "Negative Sweeps"
                    wsPosNegSweeps.Range("J1").value = "Net Deposit (Donation Site Reports"
                    wsPosNegSweeps.Range("O1").value = "From Consolidated Reports"
                    wsPosNegSweeps.Range("P1").value = "From Import Files"
                    wsPosNegSweeps.Range("N2").value = "Total Positive Sweeps"
                    wsPosNegSweeps.Range("N3").value = "Total Negative Sweeps"
                    wsPosNegSweeps.Range("N5").value = "Total Revenue"
                    wsPosNegSweeps.Range("N7").value = "Total ProPay Fees"
                    wsPosNegSweeps.Range("N9").value = "Total Bank Fees"
                    wsPosNegSweeps.Range("N10").value = "Extra Return Fees"
                    wsPosNegSweeps.Range("N12").value = "Positive Sweeps Total"
                    wsPosNegSweeps.Range("N13").value = "Negative Sweeps Total"
                    'wsPosNegSweeps.Range("N14").value = "Extra Return Fees"
                    wsPosNegSweeps.Range("N15").value = "Overall Total"
                    wsPosNegSweeps.Range("P16").value = "Missing"
                    wsPosNegSweeps.Range("Q11").value = "Variance"


                ' Steps 113-115: Populate the Formulas.
                    ' Step 113: Check if the Positive Sweeps are matching
                        ' Positive Sweeps
                            wsPosNegSweeps.Range("A2").Formula2 = "=FILTER('Sweeps Breakdown'!A:A,('Sweeps Breakdown'!H:H>0) * ('Sweeps Breakdown'!H:H<>""Net Deposit""))"
                        ' Net Deposit (Donation Site Reports) - (data from the "Sweeps Breakdown" worksheet)
                            wsPosNegSweeps.Range("B2").Formula = "=XLOOKUP(A2,'Sweeps Breakdown'!A:A,'Sweeps Breakdown'!H:H)"
                        ' CRJ Deposit Amount - (data comes from the "CRJ Put Together" worksheet)
                            wsPosNegSweeps.Range("C2").Formula = "=SUMIF('CRJ Put together'!A:A,A2,'CRJ Put together'!S:S)"
                        ' Check if the Net Deposit and CRJ Deposit Amount are the same
                            wsPosNegSweeps.Range("D2").Formula = "=ROUND(B2-C2,2)"
                        ' Show the Positive Sweeps that are not matching
                            wsPosNegSweeps.Range("F2").Formula2 = "=FILTER(A:A,(D:D<>0) * (D:D<>"""") * (D:D<>""Variance in Sweep Amount""),""All Sweeps Check Out"")"
                            wsPosNegSweeps.Range("G2").Formula = "=IF(F2=""All Sweeps Check Out"","""",IF(F2="""","""",XLOOKUP(F2,A:A,D:D)))"
                    
                    ' Step 114: Check if the Negative Sweeps are matching
                        ' Negative Sweeps
                            wsPosNegSweeps.Range("I2").Formula2 = "=FILTER('Sweeps Breakdown'!A:A,('Sweeps Breakdown'!H:H<>""Net Deposit"") * ('Sweeps Breakdown'!H:H<0),""No Negative Sweeps"")"
                        ' Net Deposit (Donation Site Reports) - (data comes from the "Sweeps Breakdown" worksheet)
                            wsPosNegSweeps.Range("J2").Formula = "=IF(I2="""","""",IF(I2=""No Negative Sweeps"","""",XLOOKUP(I2,'Sweeps Breakdown'!A:A,'Sweeps Breakdown'!H:H)))"
                        
                    ' Step 115: Check to see if the Consolidated Reports numbers and sweeps match with what is in the Import Files
                        ' Consolidated Report's Data
                            ' Total Positive Sweeps
                                wsPosNegSweeps.Range("O2").Formula = "=COUNTA(A2:A200000)"
                            ' Total Negative Sweeps
                                wsPosNegSweeps.Range("O3").Formula = "=COUNTA(I2:I200000)"
                            ' Total Revenue
                                wsPosNegSweeps.Range("O5").Formula = "=TEXT(SUM('Sweeps Breakdown'!C:C),""$#,##0.00"")"
                            ' Total ProPay Fees (transaction fees- excluding bank fees)
                                wsPosNegSweeps.Range("O7").Formula = "=TEXT(SUM('Sweeps Breakdown'!D:D)+ SUM('Sweeps Breakdown'!E:E),""$#,##0.00"")"
                            ' Total Bank Fees
                                wsPosNegSweeps.Range("O9").Formula = "=TEXT(SUM('Sweeps Breakdown'!G:G),""$#,##0.00"")"
                            ' Extra Return Fees (-35 bank transfer fees)
                                wsPosNegSweeps.Range("O10").Formula = "=TEXT(SUM('Reports Consolidated-ReturnFees'!J:J),""$#,##0.00"")"
                            ' Positive Sweeps Total
                                wsPosNegSweeps.Range("O12").Formula = "=TEXT(SUM(B:B),""$#,##0.00"")"
                            ' Negative Sweeps Total
                                wsPosNegSweeps.Range("O13").Formula = "=TEXT(SUM(J:J),""$#,##0.00"")"
                            
                            'wsPosNegSweeps.Range("O14").Formula = "=O10"
                            
                            ' Overall Net Total
                                wsPosNegSweeps.Range("O15").Formula = "=TEXT(O12+O13,""$#,##0.00"")"
                            
                            
                        ' Import File's Data
                            ' Total Positve Sweeps
                                wsPosNegSweeps.Range("P2").Formula2 = "=COUNTA(UNIQUE(FILTER('Positive CRJs - Import File'!F:F, ('Positive CRJs - Import File'!F:F<>"""") * (ISERROR(SEARCH(""DESCRIPTION"", 'Positive CRJs - Import File'!F:F))))))"
                            ' Total Negative Sweeps
                                wsPosNegSweeps.Range("P3").Formula = "=COUNTA(FILTER('Negative Sweeps - CHARs Import'!E:E,('Negative Sweeps - CHARs Import'!E:E<>"""")))-1"
                            ' Positive Sweeps Total
                                wsPosNegSweeps.Range("P12").Formula = "=TEXT(SUM('Positive CRJs - Import File'!R:R),""$#,##0.00"")"
                            ' Negative Sweeps Total
                                wsPosNegSweeps.Range("P13").Formula = "=TEXT(SUMIF('Negative Sweeps - CHARs Import'!H:H,""11*"",'Negative Sweeps - CHARs Import'!N:N)*-1,""$#,##0.00"")"
                            ' Overall Net Total
                                wsPosNegSweeps.Range("P15").Formula = "=TEXT(P12+P13,""$#,##0.00"")"
                            
                        ' Variances in amounts
                            wsPosNegSweeps.Range("Q12").Formula = "=TEXT(O12-P12,""$#,##0.00"")"
                            wsPosNegSweeps.Range("Q13").Formula = "=TEXT(O13-P13,""$#,##0.00"")"
                            wsPosNegSweeps.Range("Q15").Formula = "=TEXT(O15-P15,""$#,##0.00"")"
                            wsPosNegSweeps.Range("Q16").Formula = "=TEXT(SUM('Revenue Difference'!E:E),""$#,##0.00"")"
                            wsPosNegSweeps.Range("R15").Formula = "=TEXT(SUM(G:G),""$#,##0.00"")"



                ' Step 116-119: Format and Fill Formulas Down
                    ' Step 116: Find the last row of column A and then fill down the formulas for all the Positive Sweeps
                        PosNegSweepsBLastRow = wsPosNegSweeps.Cells(wsPosNegSweeps.Rows.Count, 1).End(xlUp).Row
                        
                        If PosNegSweepsBLastRow > 2 Then
                        wsPosNegSweeps.Range("B2:D" & PosNegSweepsBLastRow).FillDown
                        End If
                    
                    ' Step 117: Find the last row of column F and then fill down the Positive Sweep Variances Amount
                        PosNegSweepsGLastRow = wsPosNegSweeps.Cells(wsPosNegSweeps.Rows.Count, 6).End(xlUp).Row
                        
                        If PosNegSweepsGLastRow > 2 Then
                            If F2 <> "All Sweeps Check Out" Then
                                wsPosNegSweeps.Range("G2:G" & PosNegSweepsGLastRow).FillDown
                            End If
                        End If
                    
                    ' Step 118: Find the last row of column I and then fill down the Negative Sweeps Amounts
                        PosNegSweepsJLastRow = wsPosNegSweeps.Cells(wsPosNegSweeps.Rows.Count, 14).End(xlUp).Row
                        
                        If PosNegSweepsJLastRow > 2 Then
                            If F2 <> "No Negative Sweeps" Then
                                wsPosNegSweeps.Range("J2:J" & PosNegSweepsJLastRow).FillDown
                            End If
                        End If
                    
                    ' Step 119: Create an AutoFilter and AutoFit Columns and highlight (in yellow) O15 and P15
                        wsPosNegSweeps.Range("A1:Q1").AutoFilter
                        wsPosNegSweeps.Range("A:R").Columns.AutoFit
                        wsPosNegSweeps.Range("O15").Interior.Color = vbYellow
                        wsPosNegSweeps.Range("P15").Interior.Color = vbYellow
                        
           
            ' Steps 120-125: Populate the: wsSFvsCPRevenue ("SF vs C&P Revenue Match Check" worksheet)
                ' Step 120: Create the columns headers.
                    wsSFvsCPRevenue.Range("A1").value = "From Consolidated C&P Reports"
                    wsSFvsCPRevenue.Range("B1").value = "SUMs in Consolidated Report"
                    wsSFvsCPRevenue.Range("C1").value = "SUMs in SF Report"
                    wsSFvsCPRevenue.Range("D1").value = "Difference"

                ' Step 121: Populate the Formulas and Fill Down.
                    wsSFvsCPRevenue.Range("A2").Formula2 = "=UNIQUE(FILTER('Reports Consolidated'!K:K,('Reports Consolidated'!K:K<>"""") * ('Reports Consolidated'!K:K<>""Order Number Trimmed"")))"
                    wsSFvsCPRevenue.Range("B2").Formula = "=SUMIF('Reports Consolidated'!K:K,A2,'Reports Consolidated'!G:G)"
                    wsSFvsCPRevenue.Range("C2").Formula = "=SUMIF('Positive SF Data'!F:F,A2,'Positive SF Data'!R:R)-SUMIF('Negative SF Data'!F:F,A2,'Negative SF Data'!R:R)"
                    wsSFvsCPRevenue.Range("D2").Formula = "=B2-C2"

                ' Steps 122-125: Fill Down formulas, autofilter and autofit the columns, and copy and paste values of data
                    ' Step 122: Find the last row in column A
                        SFvsCPRevenueLastRow = wsSFvsCPRevenue.Cells(wsSFvsCPRevenue.Rows.Count, 1).End(xlUp).Row
                    ' Step 123: Fill the formulas down in columns B-D
                        wsSFvsCPRevenue.Range("B2:D" & SFvsCPRevenueLastRow).FillDown
                    ' Step 124: Create an autofilter and autofit the columns
                        wsSFvsCPRevenue.Range("A:D").AutoFilter
                        wsSFvsCPRevenue.Range("A:D").Columns.AutoFit
                    ' Step 125: Copy and Paste the values of columns A through B
                        With wsSFvsCPRevenue.Range("A:B")
                            .Copy
                            .PasteSpecial xlPasteValues
                        End With
                        Application.CutCopyMode = False
           
           
            ' Steps 126-128: Populate the: wsRevenueDif ("Revenue Difference" worksheet)
                ' Step 126: Create the columns headers.
                    wsRevenueDif.Range("A1").value = "From Consolidated C&P Reports"
                    wsRevenueDif.Range("B1").value = "SUMs in Consolidated Report"
                    wsRevenueDif.Range("C1").value = "SUMs in SF Report"
                    wsRevenueDif.Range("D1").value = "Difference"

                ' Step 127: Populate the Filter Formula
                    wsRevenueDif.Range("A2").Formula2 = "=FILTER('SF vs C&P Revenue Match Check'!A:D,('SF vs C&P Revenue Match Check'!D:D<>0)*('SF vs C&P Revenue Match Check'!D:D<>"""")*('SF vs C&P Revenue Match Check'!D:D<>""Difference""),""All Revenue Matches"")"

                ' Step 128: Format Cells
                    wsRevenueDif.Range("A:D").Columns.AutoFit
                    
           
            ' Steps 129-134: Populate the: wsSFPos ("Positive SF Data" worksheet)
                ' Step 129: Create the columns headers.
                    wsSFPos.Range("A1").value = "Number"
                    wsSFPos.Range("B1").value = "Payment: Payment Number"
                    wsSFPos.Range("C1").value = "Account Name"
                    wsSFPos.Range("D1").value = "Opportunity Name"
                    wsSFPos.Range("E1").value = "Primary Campaign Source"
                    wsSFPos.Range("F1").value = "C&P Order Number"
                    wsSFPos.Range("G1").value = "Check Number"
                    wsSFPos.Range("H1").value = "Payment Date"
                    wsSFPos.Range("I1").value = "Stage"
                    wsSFPos.Range("J1").value = "Payment Type"
                    wsSFPos.Range("K1").value = "Close Date"
                    wsSFPos.Range("L1").value = "Deposit Date (Manual)"
                    wsSFPos.Range("M1").value = "Deposit Date"
                    wsSFPos.Range("N1").value = "Last Name"
                    wsSFPos.Range("O1").value = "First Name"
                    wsSFPos.Range("P1").value = "Campaign Type"
                    wsSFPos.Range("Q1").value = "C&P Account Name"
                    wsSFPos.Range("R1").value = "Payment Amount"
                    wsSFPos.Range("S1").value = ""
                    wsSFPos.Range("T1").value = "CNP School - Sweep ID"
                    wsSFPos.Range("U1").value = "Sweep (Fund) Date"
                    wsSFPos.Range("V1").value = "Transaction Date"
                    wsSFPos.Range("W1").value = "Transaction Number"
                    wsSFPos.Range("X1").value = "Total Transactions in Order"
                    wsSFPos.Range("Y1").value = "Individual Transaction Breakdown of Fees"
                    wsSFPos.Range("Z1").value = "CNP School Abbreviation"
                    wsSFPos.Range("AA1").value = "Campaign School Designation"
                    wsSFPos.Range("AB1").value = "Campaign School Abbreviation"
                    wsSFPos.Range("AC1").value = "CNP vs Campaign Match"
                    wsSFPos.Range("AD1").value = "Final Abbrev. School Determination"
                    wsSFPos.Range("AE1").value = "CNP Bank Account"
                    wsSFPos.Range("AF1").value = "Campaign Bank Account"
                    wsSFPos.Range("AG1").value = "Intacct School Check"
                    wsSFPos.Range("AH1").value = "Revenue Account Type - Initial Check"
                    wsSFPos.Range("AI1").value = "Division - Initial Check"
                    wsSFPos.Range("AJ1").value = "Funding Source - Initial Check"
                    wsSFPos.Range("AK1").value = "Revenue Account - Final"
                    wsSFPos.Range("AL1").value = "Division - Final"
                    wsSFPos.Range("AM1").value = "Funding Source - Final"
                    wsSFPos.Range("AN1").value = "Payment Type"
                    wsSFPos.Range("AO1").value = ""
                    wsSFPos.Range("AP1").value = "RECEIPT_DATE"
                    wsSFPos.Range("AQ1").value = "PAYMETHOD"
                    wsSFPos.Range("AR1").value = "DOCDATE"
                    wsSFPos.Range("AS1").value = "DOCNUMBER"
                    wsSFPos.Range("AT1").value = "DESCRIPTION"
                    wsSFPos.Range("AU1").value = "DEPOSITTO"
                    wsSFPos.Range("AV1").value = "BANKACCOUNTID"
                    wsSFPos.Range("AW1").value = "DEPOSITDATE"
                    wsSFPos.Range("AX1").value = "UNDEPACCTNO"
                    wsSFPos.Range("AY1").value = "CURRENCY"
                    wsSFPos.Range("AZ1").value = "EXCH_RATE_DATE"
                    wsSFPos.Range("BA1").value = "EXCH_RATE_TYPE_ID"
                    wsSFPos.Range("BB1").value = "EXCH_RATE_DATE"
                    wsSFPos.Range("BC1").value = "LINE_NO"
                    wsSFPos.Range("BD1").value = "ACCT_NO"
                    wsSFPos.Range("BE1").value = "ACCOUNTLABEL"
                    wsSFPos.Range("BF1").value = "TRX_AMOUNT"
                    wsSFPos.Range("BG1").value = "AMOUNT"
                    wsSFPos.Range("BH1").value = "DEPT_ID"
                    wsSFPos.Range("BI1").value = "LOCATION_ID"
                    wsSFPos.Range("BJ1").value = "ITEM_MEMO"
                    wsSFPos.Range("BK1").value = "OTHERRECEIPTSENTRY_PROJECTID"
                    wsSFPos.Range("BL1").value = "OTHERRECEIPTSENTRY_CUSTOMERID"
                    wsSFPos.Range("BM1").value = "OTHERRECEIPTSENTRY_ITEMID"
                    wsSFPos.Range("BN1").value = "OTHERRECEIPTSENTRY_VENDORID"
                    wsSFPos.Range("BO1").value = "OTHERRECEIPTSENTRY_EMPLOYEEID"
                    wsSFPos.Range("BP1").value = "OTHERRECEIPTSENTRY_CLASSID"
                    wsSFPos.Range("BQ1").value = "PAYER_NAME"
                    wsSFPos.Range("BR1").value = "SUPDOCID"
                    wsSFPos.Range("BS1").value = "EXCHANGE_RATE"
                    wsSFPos.Range("BT1").value = "OR_TRANSACTION_DATE"
                    wsSFPos.Range("BU1").value = "GLDIMFUNDING_SOURCE"

                ' Step 130: Populate the Formulas
                    wsSFPos.Range("A2").Formula = "=IF(B2="""","""",""Pos-"" & ROW()-1)"
                    wsSFPos.Range("B2").Formula2 = "=IFERROR(SORT(FILTER('SF Filtered'!A:Q,ISNUMBER(MATCH('SF Filtered'!E:E,'Reports Consolidated-Positives'!K:K,0)),""""),5),"""")"
                    wsSFPos.Range("S2").value = "…........................................."
                    wsSFPos.Range("T2").Formula = "=XLOOKUP(F2,'Reports Consolidated-Positives'!K:K,'Reports Consolidated-Positives'!O:O)"
                    wsSFPos.Range("U2").Formula = "=XLOOKUP(T2,'Sweeps Breakdown'!A:A,'Sweeps Breakdown'!J:J)"
                    wsSFPos.Range("V2").Formula = "=TEXT(XLOOKUP(F2,'Reports Consolidated-Positives'!K:K,'Reports Consolidated-Positives'!C:C),""MM/DD/YYYY"")"
                    wsSFPos.Range("W2").Formula = "=IF(F2=F1,1+W1,1)"
                    wsSFPos.Range("X2").Formula = "=COUNTIF(F:F,F2)"
                    wsSFPos.Range("Y2").Formula = "=(SUMIF('Reports Consolidated-Positives'!K:K,F2,'Reports Consolidated-Positives'!H:H) + SUMIF('Reports Consolidated-Positives'!K:K,F2,'Reports Consolidated-Positives'!I:I))/X2"
                    wsSFPos.Range("Z2").Formula = "=XLOOKUP(NUMBERVALUE(LEFT(T2,5)),'School Mapping'!C:C,'School Mapping'!I:I)"
                    wsSFPos.Range("AA2").Formula = "=XLOOKUP(E2,'SF Campaign Checker'!C:C,'SF Campaign Checker'!L:L)"
                    wsSFPos.Range("AB2").Formula = "=XLOOKUP(AA2,'School Mapping'!A:A,'School Mapping'!I:I)"
                    wsSFPos.Range("AC2").Formula = "=IF(AND(Z2=AB2,AB2<>""BCSI""),""Match"", ""Does Not Match"")"
                    wsSFPos.Range("AD2").Formula = "=IF(AC2=""Match"",Z2,XLOOKUP(B2,'UserRequired School Allocation'!A:A,'UserRequired School Allocation'!H:H))"
                    wsSFPos.Range("AE2").Formula = "=XLOOKUP(Z2,'School Mapping'!I:I,'School Mapping'!D:D)"
                    wsSFPos.Range("AF2").Formula = "=XLOOKUP(AB2,'School Mapping'!I:I,'School Mapping'!D:D)"
                    wsSFPos.Range("AG2").Formula = "=IFERROR(XLOOKUP(AD2,'School Mapping'!I:I,'School Mapping'!F:F),""School Determination Required"")"
                    wsSFPos.Range("AH2").Formula = "=XLOOKUP(E2,'SF Campaign Checker'!C:C,'SF Campaign Checker'!E:E)"
                    wsSFPos.Range("AI2").Formula = "=XLOOKUP(E2,'SF Campaign Checker'!C:C,'SF Campaign Checker'!J:J)"
                    wsSFPos.Range("AJ2").Formula = "=XLOOKUP(E2,'SF Campaign Checker'!C:C,'SF Campaign Checker'!K:K)"
                    wsSFPos.Range("AK2").Formula = "=IF(AH2<>""CHECK"",AH2,IF(XLOOKUP(B2,'UserRequired AccountDesignation'!A:A,'UserRequired AccountDesignation'!I:I)<>""Other"",XLOOKUP(B2,'UserRequired AccountDesignation'!A:A,'UserRequired AccountDesignation'!I:I),IF(XLOOKUP(B2,'UserRequired AccountDesignation'!A:A,'UserRequired AccountDesignation'!N:N)<>"""", XLOOKUP(B2,'UserRequired AccountDesignation'!A:A,'UserRequired AccountDesignation'!N:N), ""Still Not Determined"")))"
                    wsSFPos.Range("AL2").Formula = "=IF(AI2<>""CHECK"",AI2,IF(XLOOKUP(B2,'UserRequired AccountDesignation'!A:A,'UserRequired AccountDesignation'!J:J)<>""Other"",XLOOKUP(B2,'UserRequired AccountDesignation'!A:A,'UserRequired AccountDesignation'!J:J),IF(XLOOKUP(B2,'UserRequired AccountDesignation'!A:A,'UserRequired AccountDesignation'!L:L)<>"""", XLOOKUP(B2,'UserRequired AccountDesignation'!A:A,'UserRequired AccountDesignation'!L:L), IF(XLOOKUP(B2, 'UserRequired AccountDesignation'!A:A,'UserRequired AccountDesignation'!O:O)<>"""", XLOOKUP(B2, 'UserRequired AccountDesignation'!A:A,'UserRequired AccountDesignation'!O:O),""Still Not Determined""))))"
                    wsSFPos.Range("AM2").Formula = "=IF(AJ2<>""CHECK"",AJ2,IF(XLOOKUP(B2,'UserRequired AccountDesignation'!A:A,'UserRequired AccountDesignation'!K:K)<>""Other"",XLOOKUP(B2,'UserRequired AccountDesignation'!A:A,'UserRequired AccountDesignation'!K:K),IF(XLOOKUP(B2,'UserRequired AccountDesignation'!A:A,'UserRequired AccountDesignation'!M:M)<>"""", XLOOKUP(B2,'UserRequired AccountDesignation'!A:A,'UserRequired AccountDesignation'!M:M), IF(XLOOKUP(B2, 'UserRequired AccountDesignation'!A:A,'UserRequired AccountDesignation'!P:P)<>"""", XLOOKUP(B2, 'UserRequired AccountDesignation'!A:A,'UserRequired AccountDesignation'!P:P),""Still Not Determined""))))"
                    wsSFPos.Range("AN2").Formula = "=IF(J2=""eCheck"",""eCheck"",""Credit Card"")"
                    wsSFPos.Range("AP2").Formula = "=U2"
                    wsSFPos.Range("AQ2").Formula = "=AN2"
                    wsSFPos.Range("AR2").Formula = "=U2"
                    wsSFPos.Range("AS2").Formula = "=""ProPay"""
                    wsSFPos.Range("AT2").Formula = "=Z2&"" - Click & Pledge (""&T2&"")"""
                    wsSFPos.Range("AU2").Formula = "=""Bank account"""
                    wsSFPos.Range("AV2").Formula = "=AE2"
                    wsSFPos.Range("AW2").Formula = "=U2"
                    wsSFPos.Range("AX2").Formula = "="""""
                    wsSFPos.Range("AY2").Formula = "=""USD"""
                    wsSFPos.Range("AZ2").Formula = "="""""
                    wsSFPos.Range("BA2").Formula = "="""""
                    wsSFPos.Range("BB2").Formula = "="""""
                    wsSFPos.Range("BC2").Formula = "=""6"""
                    wsSFPos.Range("BD2").Formula = "=AK2"
                    wsSFPos.Range("BE2").Formula = "="""""
                    wsSFPos.Range("BF2").Formula = "=R2"
                    wsSFPos.Range("BG2").Formula = "=R2"
                    wsSFPos.Range("BH2").Formula = "=AL2"
                    wsSFPos.Range("BI2").Formula = "=AG2"
                    wsSFPos.Range("BJ2").Formula = "=Z2&"" - ""&E2&"" | ""&D2&"" | Site: Click and Pledge | ""&AN2&"" | ""&B2&"" | CNP: ""&F2&"" | Disbursement ID: ""&T2&"" | Txn#:""&W2&"" of ""&X2&"" | ~Txn-Day: ""&TEXT(V2,""MM.DD.YYYY"")&"" | ^""&C2&"" | *""&N2&"", ""&O2"
                    wsSFPos.Range("BK2").Formula = "="""""
                    wsSFPos.Range("BL2").Formula = "=""19234"""
                    wsSFPos.Range("BM2").Formula = "="""""
                    wsSFPos.Range("BN2").Formula = "="""""
                    wsSFPos.Range("BO2").Formula = "="""""
                    wsSFPos.Range("BP2").Formula = "=""000"""
                    wsSFPos.Range("BQ2").Formula = "=""ProPay"""
                    wsSFPos.Range("BR2").Formula = "="""""
                    wsSFPos.Range("BS2").Formula = "="""""
                    wsSFPos.Range("BT2").Formula = "=U2"
                    wsSFPos.Range("BU2").Formula = "=AM2"

                ' Step 131: Find the last row of the 'wsSFPos' (Positive SF Data) Worksheet
                    SFPosLastRow = wsSFPos.Cells(wsSFPos.Rows.Count, 2).End(xlUp).Row
                    
                ' Step 132: Fill down all formulas
                    If SFPosLastRow > 2 Then
                    wsSFPos.Range("A2:A" & SFPosLastRow).FillDown
                    wsSFPos.Range("S2:BU" & SFPosLastRow).FillDown
                    End If
                    
                ' Step 133: Autofit the columns and create a filter in the first row.
                    wsSFPos.Range("A:BU").AutoFilter
                    wsSFPos.Range("A:BU").Columns.AutoFit
                    
                ' Step 134: Paste the values of the filtered data (to help speed up calculations)
                    With wsSFPos.Range("A:X")
                        .Copy
                        .PasteSpecial xlPasteValues
                    End With
                    Application.CutCopyMode = False
                    
           
            ' Steps 135-140: Populate the: wsSFNeg ("Negative SF Data" worksheet)
                ' Step 135: Create the columns headers.
                    wsSFNeg.Range("A1").value = "Number"
                    wsSFNeg.Range("B1").value = "Payment: Payment Number"
                    wsSFNeg.Range("C1").value = "Account Name"
                    wsSFNeg.Range("D1").value = "Opportunity Name"
                    wsSFNeg.Range("E1").value = "Primary Campaign Source"
                    wsSFNeg.Range("F1").value = "C&P Order Number"
                    wsSFNeg.Range("G1").value = "Check Number"
                    wsSFNeg.Range("H1").value = "Payment Date"
                    wsSFNeg.Range("I1").value = "Stage"
                    wsSFNeg.Range("J1").value = "Payment Type"
                    wsSFNeg.Range("K1").value = "Close Date"
                    wsSFNeg.Range("L1").value = "Deposit Date (Manual)"
                    wsSFNeg.Range("M1").value = "Deposit Date"
                    wsSFNeg.Range("N1").value = "Last Name"
                    wsSFNeg.Range("O1").value = "First Name"
                    wsSFNeg.Range("P1").value = "Campaign Type"
                    wsSFNeg.Range("Q1").value = "C&P Account Name"
                    wsSFNeg.Range("R1").value = "Payment Amount"
                    wsSFNeg.Range("S1").value = ""
                    wsSFNeg.Range("T1").value = "CNP School - Sweep ID"
                    wsSFNeg.Range("U1").value = "Sweep (Fund) Date"
                    wsSFNeg.Range("V1").value = "Transaction Date"
                    wsSFNeg.Range("W1").value = "Transaction Number"
                    wsSFNeg.Range("X1").value = "Total Transactions in Order"
                    wsSFNeg.Range("Y1").value = "Individual Transaction Breakdown of Fees"
                    wsSFNeg.Range("Z1").value = "CNP School Abbreviation"
                    wsSFNeg.Range("AA1").value = "Campaign School Designation"
                    wsSFNeg.Range("AB1").value = "Campaign School Abbreviation"
                    wsSFNeg.Range("AC1").value = "CNP vs Campaign Match"
                    wsSFNeg.Range("AD1").value = "Final Abbrev. School Determination"
                    wsSFNeg.Range("AE1").value = "CNP Bank Account"
                    wsSFNeg.Range("AF1").value = "Campaign Bank Account"
                    wsSFNeg.Range("AG1").value = "Intacct School Check"
                    wsSFNeg.Range("AH1").value = "Revenue Account Type - Initial Check"
                    wsSFNeg.Range("AI1").value = "Division - Initial Check"
                    wsSFNeg.Range("AJ1").value = "Funding Source - Initial Check"
                    wsSFNeg.Range("AK1").value = "Revenue Account - Final"
                    wsSFNeg.Range("AL1").value = "Division - Final"
                    wsSFNeg.Range("AM1").value = "Funding Source - Final"
                    wsSFNeg.Range("AN1").value = "Payment Type"
                    wsSFNeg.Range("AO1").value = ""
                    wsSFNeg.Range("AP1").value = "RECEIPT_DATE"
                    wsSFNeg.Range("AQ1").value = "PAYMETHOD"
                    wsSFNeg.Range("AR1").value = "DOCDATE"
                    wsSFNeg.Range("AS1").value = "DOCNUMBER"
                    wsSFNeg.Range("AT1").value = "DESCRIPTION"
                    wsSFNeg.Range("AU1").value = "DEPOSITTO"
                    wsSFNeg.Range("AV1").value = "BANKACCOUNTID"
                    wsSFNeg.Range("AW1").value = "DEPOSITDATE"
                    wsSFNeg.Range("AX1").value = "UNDEPACCTNO"
                    wsSFNeg.Range("AY1").value = "CURRENCY"
                    wsSFNeg.Range("AZ1").value = "EXCH_RATE_DATE"
                    wsSFNeg.Range("BA1").value = "EXCH_RATE_TYPE_ID"
                    wsSFNeg.Range("BB1").value = "EXCH_RATE_DATE"
                    wsSFNeg.Range("BC1").value = "LINE_NO"
                    wsSFNeg.Range("BD1").value = "ACCT_NO"
                    wsSFNeg.Range("BE1").value = "ACCOUNTLABEL"
                    wsSFNeg.Range("BF1").value = "TRX_AMOUNT"
                    wsSFNeg.Range("BG1").value = "AMOUNT"
                    wsSFNeg.Range("BH1").value = "DEPT_ID"
                    wsSFNeg.Range("BI1").value = "LOCATION_ID"
                    wsSFNeg.Range("BJ1").value = "ITEM_MEMO"
                    wsSFNeg.Range("BK1").value = "OTHERRECEIPTSENTRY_PROJECTID"
                    wsSFNeg.Range("BL1").value = "OTHERRECEIPTSENTRY_CUSTOMERID"
                    wsSFNeg.Range("BM1").value = "OTHERRECEIPTSENTRY_ITEMID"
                    wsSFNeg.Range("BN1").value = "OTHERRECEIPTSENTRY_VENDORID"
                    wsSFNeg.Range("BO1").value = "OTHERRECEIPTSENTRY_EMPLOYEEID"
                    wsSFNeg.Range("BP1").value = "OTHERRECEIPTSENTRY_CLASSID"
                    wsSFNeg.Range("BQ1").value = "PAYER_NAME"
                    wsSFNeg.Range("BR1").value = "SUPDOCID"
                    wsSFNeg.Range("BS1").value = "EXCHANGE_RATE"
                    wsSFNeg.Range("BT1").value = "OR_TRANSACTION_DATE"
                    wsSFNeg.Range("BU1").value = "GLDIMFUNDING_SOURCE"

                ' Step 136: Populate the Formulas
                    wsSFNeg.Range("A2").Formula = "=IF(B2="""","""",""Neg - ""&ROW()-1)"
                    wsSFNeg.Range("B2").Formula2 = "=IFERROR(SORT(FILTER('SF Filtered'!A:Q,ISNUMBER(MATCH('SF Filtered'!E:E,'Reports Consolidated-Negatives'!K:K,0)),""""),5),"""")"
                    wsSFNeg.Range("S2").value = "…........................................."
                    wsSFNeg.Range("T2").Formula = "=XLOOKUP(F2,'Reports Consolidated-Negatives'!K:K,'Reports Consolidated-Negatives'!O:O)"
                    wsSFNeg.Range("U2").Formula = "=XLOOKUP(T2,'Sweeps Breakdown'!A:A,'Sweeps Breakdown'!J:J)"
                    wsSFNeg.Range("V2").Formula = "=TEXT(XLOOKUP(F2,'Reports Consolidated-Negatives'!K:K,'Reports Consolidated-Negatives'!C:C),""MM/DD/YYYY"")"
                    wsSFNeg.Range("W2").Formula = "=IF(F2=F1,1+W1,1)"
                    wsSFNeg.Range("X2").Formula = "=COUNTIF(F:F,F2)"
                    wsSFNeg.Range("Y2").Formula = "=(SUMIF('Reports Consolidated-Negatives'!K:K,F2,'Reports Consolidated-Negatives'!H:H) + SUMIF('Reports Consolidated-Negatives'!K:K,F2,'Reports Consolidated-Negatives'!I:I))/X2"
                    wsSFNeg.Range("Z2").Formula = "=XLOOKUP(NUMBERVALUE(LEFT(T2,5)),'School Mapping'!C:C,'School Mapping'!I:I)"
                    wsSFNeg.Range("AA2").Formula = "=XLOOKUP(E2,'SF Campaign Checker'!C:C,'SF Campaign Checker'!L:L)"
                    wsSFNeg.Range("AB2").Formula = "=XLOOKUP(AA2,'School Mapping'!A:A,'School Mapping'!I:I)"
                    wsSFNeg.Range("AC2").Formula = "=IF(AND(Z2=AB2,AB2<>""BCSI""),""Match"", ""Does Not Match"")"
                    wsSFNeg.Range("AD2").Formula = "=IF(AC2=""Match"",Z2,XLOOKUP(B2,'UserRequired School Allocation'!A:A,'UserRequired School Allocation'!H:H))"
                    wsSFNeg.Range("AE2").Formula = "=XLOOKUP(Z2,'School Mapping'!I:I,'School Mapping'!D:D)"
                    wsSFNeg.Range("AF2").Formula = "=XLOOKUP(AB2,'School Mapping'!I:I,'School Mapping'!D:D)"
                    wsSFNeg.Range("AG2").Formula = "=IFERROR(XLOOKUP(AD2,'School Mapping'!I:I,'School Mapping'!F:F),""School Determination Required"")"
                    wsSFNeg.Range("AH2").Formula = "=XLOOKUP(E2,'SF Campaign Checker'!C:C,'SF Campaign Checker'!E:E)"
                    wsSFNeg.Range("AI2").Formula = "=XLOOKUP(E2,'SF Campaign Checker'!C:C,'SF Campaign Checker'!J:J)"
                    wsSFNeg.Range("AJ2").Formula = "=XLOOKUP(E2,'SF Campaign Checker'!C:C,'SF Campaign Checker'!K:K)"
                    wsSFNeg.Range("AK2").Formula = "=IF(AH2<>""CHECK"",AH2,IF(XLOOKUP(B2,'UserRequired AccountDesignation'!A:A,'UserRequired AccountDesignation'!I:I)<>""Other"",XLOOKUP(B2,'UserRequired AccountDesignation'!A:A,'UserRequired AccountDesignation'!I:I),IF(XLOOKUP(B2,'UserRequired AccountDesignation'!A:A,'UserRequired AccountDesignation'!N:N)<>"""", XLOOKUP(B2,'UserRequired AccountDesignation'!A:A,'UserRequired AccountDesignation'!N:N), ""Still Not Determined"")))"
                    wsSFNeg.Range("AL2").Formula = "=IF(AI2<>""CHECK"",AI2,IF(XLOOKUP(B2,'UserRequired AccountDesignation'!A:A,'UserRequired AccountDesignation'!J:J)<>""Other"",XLOOKUP(B2,'UserRequired AccountDesignation'!A:A,'UserRequired AccountDesignation'!J:J),IF(XLOOKUP(B2,'UserRequired AccountDesignation'!A:A,'UserRequired AccountDesignation'!L:L)<>"""", XLOOKUP(B2,'UserRequired AccountDesignation'!A:A,'UserRequired AccountDesignation'!L:L), IF(XLOOKUP(B2, 'UserRequired AccountDesignation'!A:A,'UserRequired AccountDesignation'!O:O)<>"""", XLOOKUP(B2, 'UserRequired AccountDesignation'!A:A,'UserRequired AccountDesignation'!O:O),""Still Not Determined""))))"
                    wsSFNeg.Range("AM2").Formula = "=IF(AJ2<>""CHECK"",AJ2,IF(XLOOKUP(B2,'UserRequired AccountDesignation'!A:A,'UserRequired AccountDesignation'!K:K)<>""Other"",XLOOKUP(B2,'UserRequired AccountDesignation'!A:A,'UserRequired AccountDesignation'!K:K),IF(XLOOKUP(B2,'UserRequired AccountDesignation'!A:A,'UserRequired AccountDesignation'!M:M)<>"""", XLOOKUP(B2,'UserRequired AccountDesignation'!A:A,'UserRequired AccountDesignation'!M:M), IF(XLOOKUP(B2, 'UserRequired AccountDesignation'!A:A,'UserRequired AccountDesignation'!P:P)<>"""", XLOOKUP(B2, 'UserRequired AccountDesignation'!A:A,'UserRequired AccountDesignation'!P:P),""Still Not Determined""))))"
                    wsSFNeg.Range("AN2").Formula = "=IF(J2=""eCheck"",""eCheck"",""Credit Card"")"
                    wsSFNeg.Range("AP2").Formula = "=U2"
                    wsSFNeg.Range("AQ2").Formula = "=AN2"
                    wsSFNeg.Range("AR2").Formula = "=U2"
                    wsSFNeg.Range("AS2").Formula = "=""ProPay"""
                    wsSFNeg.Range("AT2").Formula = "=Z2&"" - Click & Pledge (""&T2&"")"""
                    wsSFNeg.Range("AU2").Formula = "=""Bank account"""
                    wsSFNeg.Range("AV2").Formula = "=AE2"
                    wsSFNeg.Range("AW2").Formula = "=U2"
                    wsSFNeg.Range("AX2").Formula = "="""""
                    wsSFNeg.Range("AY2").Formula = "=""USD"""
                    wsSFNeg.Range("AZ2").Formula = "="""""
                    wsSFNeg.Range("BA2").Formula = "="""""
                    wsSFNeg.Range("BB2").Formula = "="""""
                    wsSFNeg.Range("BC2").Formula = "=""6"""
                    wsSFNeg.Range("BD2").Formula = "=AK2"
                    wsSFNeg.Range("BE2").Formula = "="""""
                    wsSFNeg.Range("BF2").Formula = "=R2*-1"
                    wsSFNeg.Range("BG2").Formula = "=R2*-1"
                    wsSFNeg.Range("BH2").Formula = "=AL2"
                    wsSFNeg.Range("BI2").Formula = "=AG2"
                    wsSFNeg.Range("BJ2").Formula = "=Z2&"" - ""&E2&"" | ""&D2&"" | Site: Click and Pledge | ""&AN2&"" | ""&B2&"" | CNP: ""&F2&"" | Disbursement ID: ""&T2&"" | Txn#:""&W2&"" of ""&X2&"" | ~Txn-Day: ""&TEXT(V2,""MM.DD.YYYY"")&"" | ^""&C2&"" | *""&N2&"", ""&O2"
                    wsSFNeg.Range("BK2").Formula = "="""""
                    wsSFNeg.Range("BL2").Formula = "=""19234"""
                    wsSFNeg.Range("BM2").Formula = "="""""
                    wsSFNeg.Range("BN2").Formula = "="""""
                    wsSFNeg.Range("BO2").Formula = "="""""
                    wsSFNeg.Range("BP2").Formula = "=""000"""
                    wsSFNeg.Range("BQ2").Formula = "=""ProPay"""
                    wsSFNeg.Range("BR2").Formula = "="""""
                    wsSFNeg.Range("BS2").Formula = "="""""
                    wsSFNeg.Range("BT2").Formula = "=U2"
                    wsSFNeg.Range("BU2").Formula = "=AM2"

                ' Step 137: Find the last row of the 'wsSFNeg' ("Negative SF Data") Worksheet
                    SFNegLastRow = wsSFNeg.Cells(wsSFNeg.Rows.Count, 2).End(xlUp).Row
                    
                ' Step 138: Fill down formulas
                    If SFNegLastRow > 2 Then
                    wsSFNeg.Range("A2:A" & SFNegLastRow).FillDown
                    wsSFNeg.Range("S2:BU" & SFNegLastRow).FillDown
                    End If
                    
                    
                ' Step 139: Autofit columns and create a filter for the first row.
                    wsSFNeg.Range("A:BU").AutoFilter
                    wsSFNeg.Range("A:BU").Columns.AutoFit
                    
                ' Step 140: Copy and paste values of the filtered data (to help speed up calculations)
                    With wsSFNeg.Range("A:X")
                        .Copy
                        .PasteSpecial xlPasteValues
                    End With
                    Application.CutCopyMode = False
            
            
            ' Steps 141-143: Populate the: wsDivisionMap ("Division Mapping" worksheet)
                ' Step 141: Create the columns headers.
                    wsDivisionMap.Range("A1").value = "Typical Allocations"
                    wsDivisionMap.Range("B1").value = "Account Number"
                    wsDivisionMap.Range("C1").value = "Account Name"
                    wsDivisionMap.Range("D1").value = "Division"
                    wsDivisionMap.Range("E1").value = "Division Name"
                    wsDivisionMap.Range("F1").value = "Funding Source"

                ' Step 142: Populate the Values
                    wsDivisionMap.Range("A2").value = ""
                    wsDivisionMap.Range("B2").value = ""
                    wsDivisionMap.Range("C2").value = "** MAPPING TO ALIGN WITH CAMPAIGNS **"
                    wsDivisionMap.Range("D2").value = ""
                    wsDivisionMap.Range("E2").value = ""
                    wsDivisionMap.Range("F2").value = ""
                    
                    ' 73001-2001-7312 (Tax Credit)
                        wsDivisionMap.Range("A3").value = "AZ Tax Credit"
                        wsDivisionMap.Range("B3").value = "73001"
                        wsDivisionMap.Range("C3").value = "Donations (non-ATF)"
                        wsDivisionMap.Range("D3").value = "2001"
                        wsDivisionMap.Range("E3").value = "Auxiliary"
                        wsDivisionMap.Range("F3").value = "7312-Tax Credit"
                        
                    ' 73001-2001-7306 (Athletics/Music Program Donations)
                        wsDivisionMap.Range("A4").value = "Athletics/Music Program Donations"
                        wsDivisionMap.Range("B4").value = "73001"
                        wsDivisionMap.Range("C4").value = "Donations (non-ATF)"
                        wsDivisionMap.Range("D4").value = "2001"
                        wsDivisionMap.Range("E4").value = "Auxiliary"
                        wsDivisionMap.Range("F4").value = "7306-Local Other (General)"
                        
                    ' 73002- ?
                        wsDivisionMap.Range("A5").value = ""
                        wsDivisionMap.Range("B5").value = "73002"
                        wsDivisionMap.Range("C5").value = "Fundraising Event (non-ATF)"
                        wsDivisionMap.Range("D5").value = ""
                        wsDivisionMap.Range("E5").value = ""
                        wsDivisionMap.Range("F5").value = ""
                        
                    ' 73003-2036-7306 ?
                        wsDivisionMap.Range("A6").value = ""
                        wsDivisionMap.Range("B6").value = "73003"
                        wsDivisionMap.Range("C6").value = "Donations - Temporarily Restricted (non-ATF)"
                        wsDivisionMap.Range("D6").value = "2036"
                        wsDivisionMap.Range("E6").value = "Not Applicable"
                        wsDivisionMap.Range("F6").value = "7306-Local Other (General)"
                        
                    ' 73009-2036-7306 (Capital Campaigns)
                        wsDivisionMap.Range("A7").value = ""
                        wsDivisionMap.Range("B7").value = "73009"
                        wsDivisionMap.Range("C7").value = "Capital Campaign Contributions"
                        wsDivisionMap.Range("D7").value = "2036"
                        wsDivisionMap.Range("E7").value = "Not Applicable"
                        wsDivisionMap.Range("F7").value = "7306-Local Other (General)"
                        
                    ' 73010-2036-7306 (Other Revenue)
                        wsDivisionMap.Range("A8").value = ""
                        wsDivisionMap.Range("B8").value = "73010"
                        wsDivisionMap.Range("C8").value = "Other Revenue (Eligible)"
                        wsDivisionMap.Range("D8").value = "2036"
                        wsDivisionMap.Range("E8").value = "Not Applicable"
                        wsDivisionMap.Range("F8").value = "7306-Local Other (General)"
                        
                    ' 73010-2086-7311 (Lunches)
                        wsDivisionMap.Range("A9").value = "Lunches"
                        wsDivisionMap.Range("B9").value = "73010"
                        wsDivisionMap.Range("C9").value = "Other Revenue (Eligible)"
                        wsDivisionMap.Range("D9").value = "2086"
                        wsDivisionMap.Range("E9").value = "Food Services"
                        wsDivisionMap.Range("F9").value = "7311-Student Reimbursement"
                        
                    ' 73011-2048-7301 (Direct Donations)
                        wsDivisionMap.Range("A10").value = "Direct Donations (Donor does not receive anything in return)"
                        wsDivisionMap.Range("B10").value = "73011"
                        wsDivisionMap.Range("C10").value = "ATF Donations Revenue*"
                        wsDivisionMap.Range("D10").value = "2048"
                        wsDivisionMap.Range("E10").value = "School Instruction - Regular"
                        wsDivisionMap.Range("F10").value = "7301-ATF Campaign"
                        
                    ' 73012-2048-7301 (Indirect Donations)
                        wsDivisionMap.Range("A11").value = "Indirect Donations (Donor receives something in return)"
                        wsDivisionMap.Range("B11").value = "73012"
                        wsDivisionMap.Range("C11").value = "ATF Fundraising Event Revenue*"
                        wsDivisionMap.Range("D11").value = "2048"
                        wsDivisionMap.Range("E11").value = "School Instruction - Regular"
                        wsDivisionMap.Range("F11").value = "7301-ATF Campaign"
                        
                    ' 73013-2048-7301 (Company/Corporate/Employer Match)
                        wsDivisionMap.Range("A12").value = "Employer/Company/Corporate Matching"
                        wsDivisionMap.Range("B12").value = "73013"
                        wsDivisionMap.Range("C12").value = "ATF Fundraising Event Revenue*"
                        wsDivisionMap.Range("D12").value = "2048"
                        wsDivisionMap.Range("E12").value = "School Instruction - Regular"
                        wsDivisionMap.Range("F12").value = "7301-ATF Campaign"
                        
                    ' 82401-2046-7301 (Fundraising Indirect Expenses [Transaction/Bank Fees])
                        wsDivisionMap.Range("A13").value = "Transaction/Bank Fees"
                        wsDivisionMap.Range("B13").value = "82401"
                        wsDivisionMap.Range("C13").value = "Indirect Fundraising Expenses - ATF*"
                        wsDivisionMap.Range("D13").value = "2046"
                        wsDivisionMap.Range("E13").value = "School Administration"
                        wsDivisionMap.Range("F13").value = "7301-ATF Campaign"
                        
                    ' 41005-2060-7306 (Founders' Circle)
                        wsDivisionMap.Range("A14").value = "Founders Circle"
                        wsDivisionMap.Range("B14").value = "41005"
                        wsDivisionMap.Range("C14").value = "Founders Cricle / Thank You Events"
                        wsDivisionMap.Range("D14").value = "2060"
                        wsDivisionMap.Range("E14").value = "Fundraising"
                        wsDivisionMap.Range("F14").value = "7306-Local Other (General)"

                ' Step 143: AutoFit Columns
                    wsDivisionMap.Range("A:F").Columns.AutoFit
                    
                        
            ' Steps 144-148: Populate the: wsSFCampaignCheck ("SF Campaign Checker" worksheet)
                ' Step 144: Create the columns headers.
                    wsSFCampaignCheck.Range("A1").value = "Primary Campaign Source - Campaign Type"
                    wsSFCampaignCheck.Range("B1").value = "Campaign Type"
                    wsSFCampaignCheck.Range("C1").value = "Primary Campaign Source"
                    wsSFCampaignCheck.Range("D1").value = "Account Designation Type"
                    wsSFCampaignCheck.Range("E1").value = "Account Allocation"
                    wsSFCampaignCheck.Range("F1").value = "School"
                    wsSFCampaignCheck.Range("G1").value = "Year"
                    wsSFCampaignCheck.Range("H1").value = "Campaign Name, with ATF/Annual Teacher Fund"
                    wsSFCampaignCheck.Range("I1").value = "Campaign Names without ATF/Annual Teacher Fund"
                    wsSFCampaignCheck.Range("J1").value = "Division"
                    wsSFCampaignCheck.Range("K1").value = "Funding Source"
                    wsSFCampaignCheck.Range("L1").value = "BASIS School Name"

                ' Step 145: Populate the Formulas
                    wsSFCampaignCheck.Range("A2").Formula2 = "=SORT(FILTER(UNIQUE('SF Filtered'!S:S),(UNIQUE('SF Filtered'!S:S)<>"""") * (UNIQUE('SF Filtered'!S:S)<>""Campaign Name - Campaign Type"")))"
                    wsSFCampaignCheck.Range("B2").Formula = "=XLOOKUP(A2,'SF Filtered'!D:D&"" - ""&'SF Filtered'!O:O,'SF Filtered'!O:O)"
                    wsSFCampaignCheck.Range("C2").Formula = "=XLOOKUP(A2,'SF Filtered'!D:D&"" - ""&'SF Filtered'!O:O,'SF Filtered'!D:D)"
                    wsSFCampaignCheck.Range("D2").Formula = "=IF(C2="""","""",IF(ISNUMBER(SEARCH(""AZ Tax"",C2)),""AZ Tax Credit"",IF(ISNUMBER(SEARCH(""Employer Match"",C2)),""Employer Matching"",IF(ISNUMBER(SEARCH("" Founder"",C2)),""Founders' Circle"",IF(ISNUMBER(SEARCH(""General Fund"",C2)),""General Fund"",IF(ISNUMBER(SEARCH(""Legacy Brick"",C2)),""Legacy Brick"",B2))))))"
                    wsSFCampaignCheck.Range("E2").Formula = "=IF(C2="""","""",IF(D2=""AZ Tax Credit"",73001,IF(D2=""Direct"",73011,IF(D2=""Employer Matching"",73013,IF(D2=""Founders' Circle"",41005,IF(D2=""General Fund"",""CHECK"",IF(D2=""Indirect"",73012,IF(D2=""Legacy Brick"",73012,""CHECK""))))))))"
                    wsSFCampaignCheck.Range("F2").Formula = "=IF(C2<>"""",IF(ISNUMBER(SEARCH(""AZ Tax Credit"",C2)),LEFT(C2,SEARCH(""AZ Tax Credit"",C2)-2),IF(ISNUMBER(SEARCH(""-"",C2)),LEFT(C2,SEARCH(""-"",C2)-6),IF(ISNUMBER(SEARCH(""Founders' Circle"",C2)),LEFT(C2,SEARCH(""Founders' Circle"",C2)-2),IF(ISNUMBER(SEARCH(""General Fund"",C2)),LEFT(C2,SEARCH(""General Fund"",C2)-2),"""")))),"""")"
                    wsSFCampaignCheck.Range("G2").Formula = "=IF(C2<>"""",IF(ISNUMBER(SEARCH(""-"",C2)),RIGHT(LEFT(C2,SEARCH(""-"",C2)-1),4)&RIGHT(LEFT(C2,SEARCH(""-"",C2)+2),3),""""),"""")"
                    wsSFCampaignCheck.Range("H2").Formula = "=IF(C2<>"""",IF(ISNUMBER(SEARCH(""-"",C2)),RIGHT(C2,LEN(C2)-SEARCH(""-"",C2)-3),""""),"""")"
                    wsSFCampaignCheck.Range("I2").Formula = "=IF(C2<>"""",IF(ISNUMBER(SEARCH(""AZ Tax Credit"",C2)),RIGHT(C2,LEN(C2)-LEN(F2)-1),IF(ISNUMBER(SEARCH(""ATF "",H2)),RIGHT(H2,LEN(H2)-SEARCH(""ATF "",H2)-3),IF(ISNUMBER(SEARCH(""Annual Teacher Fund "",H2)),RIGHT(H2,LEN(H2)-SEARCH(""Annual Teacher Fund "",H2)-19),IF(F2<>"""",RIGHT(C2,LEN(C2)-LEN(F2)-1),"""")))),"""")"
                    wsSFCampaignCheck.Range("J2").Formula = "=IF(ISNUMBER(E2),XLOOKUP('SF Campaign Checker'!E2,'Division Mapping'!B:B,'Division Mapping'!D:D),""CHECK"")"
                    wsSFCampaignCheck.Range("K2").Formula = "=IF(ISNUMBER(E2),XLOOKUP(E2,'Division Mapping'!B:B,'Division Mapping'!F:F),""CHECK"")"
                    wsSFCampaignCheck.Range("L2").Formula = "=XLOOKUP(F2,'School Mapping'!B:B,'School Mapping'!A:A)"

                ' Step 146: Find the last row of the 'wsSFCampaignCheck' ("SF Campaign Checker") Worksheet
                    SFCampaignLastRow = wsSFCampaignCheck.Cells(wsSFCampaignCheck.Rows.Count, 1).End(xlUp).Row
                    
                ' Step 147: If the last row is more than 2 (meaning there is data there), fill down the formulas)
                    If SFCampaignLastRow > 2 Then
                        wsSFCampaignCheck.Range("B2:L" & SFCampaignLastRow).FillDown
                    End If
                
                ' Step 148: Autofit the columns and create a filter in row 1
                    wsSFCampaignCheck.Range("A:L").AutoFilter
                    wsSFCampaignCheck.Range("A:L").Columns.AutoFit


            ' Steps : Populate the: wsSchoolAllocation ("School Allocation" worksheet)
                ' Step : Create the columns headers.
                    wsSchoolAllocation.Range("A1").value = "PMT-ID"
                    wsSchoolAllocation.Range("B1").value = "Campaign Name"
                    wsSchoolAllocation.Range("C1").value = "Opportunity Name"
                    wsSchoolAllocation.Range("D1").value = "Description"
                    wsSchoolAllocation.Range("E1").value = "Click and Pledge Site - School"
                    wsSchoolAllocation.Range("F1").value = "Campaign Name - School"

                ' Step : Populate the Formulas and Fill Down.
                    ' Negative SF Data
                        wsSchoolAllocation.Range("A2").Formula2 = "=FILTER('Negative SF Data'!B:B,'Negative SF Data'!AC:AC=""Does Not Match"","""")"
                        wsSchoolAllocation.Range("B2").Formula = "=IF($A2="""","""",XLOOKUP($A2,'Negative SF Data'!$B:$B,'Negative SF Data'!E:E))"
                        wsSchoolAllocation.Range("C2").Formula = "=IF($A2="""","""",XLOOKUP($A2,'Negative SF Data'!$B:$B,'Negative SF Data'!D:D))"
                        wsSchoolAllocation.Range("D2").Formula = "=IF($A2="""","""",IF(XLOOKUP($A2,'SF Filtered'!A:A,'SF Filtered'!R:R)="""","""",XLOOKUP($A2,'SF Filtered'!A:A,'SF Filtered'!R:R)))"
                        wsSchoolAllocation.Range("E2").Formula = "=IF($A2="""","""",XLOOKUP(XLOOKUP($A2,'Negative SF Data'!$B:$B,'Negative SF Data'!Z:Z),'School Mapping'!I:I,'School Mapping'!A:A))"
                        wsSchoolAllocation.Range("F2").Formula = "=IF($A2="""","""",XLOOKUP($A2,'Negative SF Data'!$B:$B,'Negative SF Data'!AA:AA))"
                    ' Positive SF Data
                        wsSchoolAllocation.Range("A20001").Formula2 = "=FILTER('Positive SF Data'!B:B,'Positive SF Data'!AC:AC=""Does Not Match"","""")"
                        wsSchoolAllocation.Range("B20001").Formula = "=IF($A20001="""","""",XLOOKUP($A20001,'Positive SF Data'!$B:$B,'Positive SF Data'!E:E))"
                        wsSchoolAllocation.Range("C20001").Formula = "=IF($A20001="""","""",XLOOKUP($A20001,'Positive SF Data'!$B:$B,'Positive SF Data'!D:D))"
                        wsSchoolAllocation.Range("D20001").Formula = "=IF($A20001="""","""",IF(XLOOKUP($A20001,'SF Filtered'!A:A,'SF Filtered'!R:R)="""","""",XLOOKUP($A20001,'SF Filtered'!A:A,'SF Filtered'!R:R)))"
                        wsSchoolAllocation.Range("E20001").Formula = "=IF($A20001="""","""",XLOOKUP(XLOOKUP($A20001,'Positive SF Data'!$B:$B,'Positive SF Data'!Z:Z),'School Mapping'!I:I,'School Mapping'!A:A))"
                        wsSchoolAllocation.Range("F20001").Formula = "=IF($A20001="""","""",XLOOKUP($A20001,'Positive SF Data'!$B:$B,'Positive SF Data'!AA:AA))"

                ' Step : Format Cells
                    
                    SchoolAllocation_TopLastRow = wsSchoolAllocation.Range("A20001").End(xlUp).Row
                    If SchoolAllocation_TopLastRow > 2 Then
                    wsSchoolAllocation.Range("B2:F" & SchoolAllocation_TopLastRow).FillDown
                    End If
                    
                    SchoolAllocation_BottomLastRow = wsSchoolAllocation.Cells(wsSchoolAllocation.Rows.Count, 1).End(xlUp).Row
                    If SchoolAllocation_BottomLastRow > 20001 Then
                    wsSchoolAllocation.Range("B20001:F" & SchoolAllocation_BottomLastRow).FillDown
                    End If
                    
                    wsSchoolAllocation.Range("A:F").AutoFilter
                    wsSchoolAllocation.Range("A:F").Columns.AutoFit

           
            ' Steps : Populate the: wsSchoolUserAllocation ("UserRequired School Allocation" worksheet)
                ' Step : Create the columns headers.
                    wsSchoolUserAllocation.Range("A1").value = "PMT-ID"
                    wsSchoolUserAllocation.Range("B1").value = "Campaign Name"
                    wsSchoolUserAllocation.Range("C1").value = "Opportunity Name"
                    wsSchoolUserAllocation.Range("D1").value = "Description"
                    wsSchoolUserAllocation.Range("E1").value = "Click and Pledge Site - School"
                    wsSchoolUserAllocation.Range("F1").value = "Campaign Name - School"
                    wsSchoolUserAllocation.Range("G1").value = "Final Determination"
                    wsSchoolUserAllocation.Range("H1").value = "School Abbreviation"
                    wsSchoolUserAllocation.Range("I1").value = "School Number"


                ' Step : Populate the Formulas and Fill Down.
                
                    wsSchoolUserAllocation.Range("A2").Formula2 = "=FILTER('School Allocation'!A:F, ('School Allocation'!A:A<>"""") * ('School Allocation'!A:A<>""PMT-ID""),"""")"
                    wsSchoolUserAllocation.Range("H2").Formula = "=IF(G2<>"""",XLOOKUP(G2,'School Mapping'!A:A,'School Mapping'!I:I,XLOOKUP(G2,'School Mapping'!B:B,'School Mapping'!I:I,"""")),"""")"
                    wsSchoolUserAllocation.Range("I2").Formula = "=IF(H2<>"""", XLOOKUP(H2,'School Mapping'!I:I,'School Mapping'!F:F),"""")"

                ' Step : Format Cells
                    wsSchoolUserAllocation.Range("A:I").AutoFilter
                    wsSchoolUserAllocation.Range("A:I").Columns.AutoFit
                    
                    
                    
                    SchoolUserAllocationLastRow = wsSchoolUserAllocation.Cells(wsSchoolUserAllocation.Rows.Count, 1).End(xlUp).Row
                    
                    If SchoolUserAllocationLastRow > 2 Then
                    wsSchoolUserAllocation.Range("H2:I" & SchoolUserAllocationLastRow).FillDown
                    End If
                    
                    
                    With wsSchoolUserAllocation.Range("G:G")
                        .Locked = False
                        .Interior.Color = vbYellow
                    End With
                    wsSchoolUserAllocation.Tab.Color = vbRed
                    
                    'With wsSchoolUserAllocation
                    '    .Protect UserInterfaceOnly:=True, AllowFormattingCells:=True, AllowFormattingColumns:=True, AllowFormattingRows:=True, AllowInsertingColumns:=True, AllowInsertingRows:=True, AllowSorting:=True, AllowFiltering:=True
                    '    .EnableOutlining = True
                    '    .Protect DrawingObjects:=True, Contents:=True, Scenarios:=True
                    'End With
                     
                
            ' Steps : Populate the: wsAccountDesignation ("Account Designation" worksheet)
                ' Step : Create the columns headers.
                    wsAccountDesignation.Range("A1").value = "PMT-ID"
                    wsAccountDesignation.Range("B1").value = "Campaign Name"
                    wsAccountDesignation.Range("C1").value = "Opportunity Name"
                    wsAccountDesignation.Range("D1").value = "Description"
                    wsAccountDesignation.Range("E1").value = "Revenue Account - Initial Check"
                    wsAccountDesignation.Range("F1").value = "Division - Initial Check"
                    wsAccountDesignation.Range("G1").value = "Funding Source - Initial Check"


                ' Step : Populate the Formulas and Fill Down.
                    wsAccountDesignation.Range("A2").Formula2 = "=FILTER('Negative SF Data'!B:B,'Negative SF Data'!AH:AH=""CHECK"","""")"
                    wsAccountDesignation.Range("B2").Formula = "=IF(A2<>"""",XLOOKUP(A2,'SF Filtered'!A:A,'SF Filtered'!D:D),"""")"
                    wsAccountDesignation.Range("C2").Formula = "=IF(A2<>"""",XLOOKUP(A2,'SF Filtered'!A:A,'SF Filtered'!C:C),"""")"
                    wsAccountDesignation.Range("D2").Formula = "=IF(A2<>"""",XLOOKUP(A2,'SF Filtered'!A:A,'SF Filtered'!R:R),"""")"
                    wsAccountDesignation.Range("E2").Formula = "=IF(A2<>"""",XLOOKUP($A2,'Negative SF Data'!$B:$B,'Negative SF Data'!AH:AH),"""")"
                    wsAccountDesignation.Range("F2").Formula = "=IF(A2<>"""",XLOOKUP($A2,'Negative SF Data'!$B:$B,'Negative SF Data'!AI:AI),"""")"
                    wsAccountDesignation.Range("G2").Formula = "=IF(A2<>"""",XLOOKUP($A2,'Negative SF Data'!$B:$B,'Negative SF Data'!AJ:AJ),"""")"
                    
                    wsAccountDesignation.Range("A20001").Formula2 = "=FILTER('Positive SF Data'!B:B,'Positive SF Data'!AH:AH=""CHECK"","""")"
                    wsAccountDesignation.Range("B20001").Formula = "=IF(A20001<>"""",XLOOKUP(A20001,'SF Filtered'!A:A,'SF Filtered'!D:D),"""")"
                    wsAccountDesignation.Range("C20001").Formula = "=IF(A20001<>"""",XLOOKUP(A20001,'SF Filtered'!A:A,'SF Filtered'!C:C),"""")"
                    wsAccountDesignation.Range("D20001").Formula = "=IF(A20001<>"""",XLOOKUP(A20001,'SF Filtered'!A:A,'SF Filtered'!R:R),"""")"
                    wsAccountDesignation.Range("E20001").Formula = "=IF(A20001<>"""",XLOOKUP($A20001,'Positive SF Data'!$B:$B,'Positive SF Data'!AH:AH),"""")"
                    wsAccountDesignation.Range("F20001").Formula = "=IF(A20001<>"""",XLOOKUP($A20001,'Positive SF Data'!$B:$B,'Positive SF Data'!AI:AI),"""")"
                    wsAccountDesignation.Range("G20001").Formula = "=IF(A20001<>"""",XLOOKUP($A20001,'Positive SF Data'!$B:$B,'Positive SF Data'!AJ:AJ),"""")"

                ' Step : Format Cells
                    
                    AccountDesignationPos_TopLastRow = wsAccountDesignation.Range("A20001").End(xlUp).Row
                    
                    If AccountDesignationPos_TopLastRow > 2 Then
                    wsAccountDesignation.Range("B2:G" & AccountDesignationPos_TopLastRow).FillDown
                    End If
                    
                    AccountDesignationPos_BottomLastRow = wsAccountDesignation.Cells(wsAccountDesignation.Rows.Count, 1).End(xlUp).Row
                    
                    If AccountDesignationPos_BottomLastRow > 20001 Then
                    wsAccountDesignation.Range("B20001:G" & AccountDesignationPos_BottomLastRow).FillDown
                    End If

                    wsAccountDesignation.Range("A:G").AutoFilter
                    wsAccountDesignation.Range("A:G").Columns.AutoFit

            ' Steps : Populate the: wsAccountUserDesignation ("UserRequired AccountDesignation" worksheet)
                ' Step : Create the columns headers.
                    wsAccountUserDesignation.Range("A1").value = "PMT-ID"
                    wsAccountUserDesignation.Range("B1").value = "Campaign Name"
                    wsAccountUserDesignation.Range("C1").value = "Opportunity Name"
                    wsAccountUserDesignation.Range("D1").value = "Description"
                    wsAccountUserDesignation.Range("E1").value = "Revenue Account - Initial Check"
                    wsAccountUserDesignation.Range("F1").value = "Division - Initial Check"
                    wsAccountUserDesignation.Range("G1").value = "Funding Source - Initial Check"
                    wsAccountUserDesignation.Range("H1").value = "Suggested Account Designation"
                    wsAccountUserDesignation.Range("I1").value = "Revenue Account - Final"
                    wsAccountUserDesignation.Range("J1").value = "Division - Suggestion"
                    wsAccountUserDesignation.Range("K1").value = "Funding Source - Suggestion"
                    wsAccountUserDesignation.Range("L1").value = "Division Designation"
                    wsAccountUserDesignation.Range("M1").value = "Funding Source Designation"
                    

                ' Step : Populate the Formulas and Fill Down.
                    wsAccountUserDesignation.Range("A2").Formula2 = "=FILTER('Account Designation'!A:G,('Account Designation'!A:A<>"""")*('Account Designation'!A:A<>""PMT-ID""),"""")"
                    wsAccountUserDesignation.Range("H2").Formula = "=IF(ISNUMBER(SEARCH(""Lunch"",C2)),""73010--2086--7311-Student Reimbursement"",IF(OR(ISNUMBER(SEARCH(""Band -"",C2)),ISNUMBER(SEARCH(""Orchestra -"",C2))),""73001--2001--7306-Local Other (General)"",IF(ISNUMBER(SEARCH(""Founder"",C2)),""41005--2060--7306-Local Other (General)"", ""No Suggestion at this time"")))"
                    wsAccountUserDesignation.Range("J2").Formula = "=IF(OR(I2=73011,I2=73012, I2=73013,I2=41005,I2=73003,I2=73009,I2=73001),XLOOKUP(I2,'Division Mapping'!B:B,'Division Mapping'!D:D),""Other"")"
                    wsAccountUserDesignation.Range("K2").Formula = "=IF(OR(I2=73011,I2=73012, I2=73013,I2=41005,I2=73003,I2=73009),XLOOKUP(I2,'Division Mapping'!B:B,'Division Mapping'!F:F),""Other"")"

                ' Step : Format Cells
                    
                    AccountUserDesignationLastRow = wsAccountUserDesignation.Cells(wsAccountUserDesignation.Rows.Count, 1).End(xlUp).Row
                    
                    If AccountUserDesignationLastRow > 2 Then
                        wsAccountUserDesignation.Range("H2:K" & AccountUserDesignationLastRow).FillDown
                    End If
                    
                    wsAccountUserDesignation.Range("A:M").AutoFilter
                    wsAccountUserDesignation.Range("A:M").Columns.AutoFit
                    wsAccountUserDesignation.Range("E:G").Columns.Hidden = True
                    wsAccountUserDesignation.Range("I:I").Locked = False
                    wsAccountUserDesignation.Range("L:M").Locked = False
                    wsAccountUserDesignation.Tab.Color = vbRed
                    wsAccountUserDesignation.Range("I:I").Interior.Color = vbYellow
                    wsAccountUserDesignation.Range("L:M").Interior.Color = vbYellow
                    'With wsAccountUserDesignation
                    '    .Protect UserInterfaceOnly:=True, AllowFormattingCells:=True, AllowFormattingColumns:=True, AllowFormattingRows:=True, AllowInsertingColumns:=True, AllowInsertingRows:=True, AllowSorting:=True, AllowFiltering:=True
                    '    .EnableOutlining = True
                    '    .Protect DrawingObjects:=True, Contents:=True, Scenarios:=True
                    'End With

            ' Steps : Populate the: wsCRJSweepsInfo ("Sweeps CRJ information" worksheet)
                ' Step : Create the columns headers.
                    wsCRJSweepsInfo.Range("A1").value = "CNP School - Sweep ID"
                    wsCRJSweepsInfo.Range("B1").value = "RECEIPT_DATE"
                    wsCRJSweepsInfo.Range("C1").value = "PAYMETHOD"
                    wsCRJSweepsInfo.Range("D1").value = "DOCDATE"
                    wsCRJSweepsInfo.Range("E1").value = "DOCNUMBER"
                    wsCRJSweepsInfo.Range("F1").value = "DESCRIPTION"
                    wsCRJSweepsInfo.Range("G1").value = "DEPOSITTO"
                    wsCRJSweepsInfo.Range("H1").value = "BANKACCOUNTID"
                    wsCRJSweepsInfo.Range("I1").value = "DEPOSITDATE"
                    wsCRJSweepsInfo.Range("J1").value = "UNDEPACCTNO"
                    wsCRJSweepsInfo.Range("K1").value = "CURRENCY"
                    wsCRJSweepsInfo.Range("L1").value = "EXCH_RATE_DATE"
                    wsCRJSweepsInfo.Range("M1").value = "EXCH_RATE_TYPE_ID"
                    wsCRJSweepsInfo.Range("N1").value = "EXCH_RATE_DATE"
                    wsCRJSweepsInfo.Range("O1").value = "LINE_NO"
                    wsCRJSweepsInfo.Range("P1").value = "ACCT_NO"
                    wsCRJSweepsInfo.Range("Q1").value = "ACCOUNTLABEL"
                    wsCRJSweepsInfo.Range("R1").value = "TRX_AMOUNT (Positive SF Data)"
                    wsCRJSweepsInfo.Range("S1").value = "AMOUNT (Negative SF Data)"
                    wsCRJSweepsInfo.Range("T1").value = "DEPT_ID"
                    wsCRJSweepsInfo.Range("U1").value = "LOCATION_ID"
                    wsCRJSweepsInfo.Range("V1").value = "ITEM_MEMO"
                    wsCRJSweepsInfo.Range("W1").value = "OTHERRECEIPTSENTRY_PROJECTID"
                    wsCRJSweepsInfo.Range("X1").value = "OTHERRECEIPTSENTRY_CUSTOMERID"
                    wsCRJSweepsInfo.Range("Y1").value = "OTHERRECEIPTSENTRY_ITEMID"
                    wsCRJSweepsInfo.Range("Z1").value = "OTHERRECEIPTSENTRY_VENDORID"
                    wsCRJSweepsInfo.Range("AA1").value = "OTHERRECEIPTSENTRY_EMPLOYEEID"
                    wsCRJSweepsInfo.Range("AB1").value = "OTHERRECEIPTSENTRY_CLASSID"
                    wsCRJSweepsInfo.Range("AC1").value = "PAYER_NAME"
                    wsCRJSweepsInfo.Range("AD1").value = "SUPDOCID"
                    wsCRJSweepsInfo.Range("AE1").value = "EXCHANGE_RATE"
                    wsCRJSweepsInfo.Range("AF1").value = "OR_TRANSACTION_DATE"
                    
                ' Step : Populate the Formulas and Fill Down.
                    wsCRJSweepsInfo.Range("A2").Formula2 = "=FILTER('Sweeps Breakdown'!A:A,('Sweeps Breakdown'!A:A<>"""")*('Sweeps Breakdown'!A:A<>""Sweep ID""),"""")"
                    wsCRJSweepsInfo.Range("B2").Formula = "=XLOOKUP(A2,'Sweeps Breakdown'!A:A,'Sweeps Breakdown'!J:J)"
                    wsCRJSweepsInfo.Range("C2").Formula = "=""Credit Card"""
                    wsCRJSweepsInfo.Range("D2").Formula = "=XLOOKUP(A2,'Sweeps Breakdown'!A:A,'Sweeps Breakdown'!J:J)"
                    wsCRJSweepsInfo.Range("E2").Formula = "=""ProPay"""
                    wsCRJSweepsInfo.Range("F2").Formula = "=XLOOKUP(NUMBERVALUE(LEFT(A2,5)),'School Mapping'!C:C,'School Mapping'!I:I)&"" - Click & Pledge (""&'Sweeps CRJ information'!A2&"")"""
                    wsCRJSweepsInfo.Range("G2").Formula = "=""Bank account"""
                    wsCRJSweepsInfo.Range("H2").Formula = "=XLOOKUP(NUMBERVALUE(LEFT(A2,5)),'School Mapping'!C:C,'School Mapping'!D:D)"
                    wsCRJSweepsInfo.Range("I2").Formula = "=XLOOKUP(A2,'Sweeps Breakdown'!A:A,'Sweeps Breakdown'!J:J)"
                    wsCRJSweepsInfo.Range("J2").Formula = "="""""
                    wsCRJSweepsInfo.Range("K2").Formula = "=""USD"""
                    wsCRJSweepsInfo.Range("L2").Formula = "="""""
                    wsCRJSweepsInfo.Range("M2").Formula = "="""""
                    wsCRJSweepsInfo.Range("N2").Formula = "="""""
                    wsCRJSweepsInfo.Range("O2").Formula = "="""""
                    wsCRJSweepsInfo.Range("P2").Formula = "=""82401"""
                    wsCRJSweepsInfo.Range("Q2").Formula = "="""""
                    wsCRJSweepsInfo.Range("R2").Formula = "=SUMIF('Positive SF Data'!T:T,A2,'Positive SF Data'!Y:Y)"
                    wsCRJSweepsInfo.Range("S2").Formula = "=SUMIF('Negative SF Data'!T:T,A2,'Negative SF Data'!Y:Y)"
                    wsCRJSweepsInfo.Range("T2").Formula = "=""2046"""
                    wsCRJSweepsInfo.Range("U2").Formula = "=XLOOKUP(NUMBERVALUE(LEFT(A2,5)),'School Mapping'!C:C,'School Mapping'!F:F)"
                    wsCRJSweepsInfo.Range("V2").Formula = "=""ProPay Processing Fee - ""&TEXT(B2,""MM.DD.YYYY"")&"" (""&A2&"") [""&XLOOKUP(NUMBERVALUE(LEFT(A2,5)),'School Mapping'!C:C,'School Mapping'!I:I)&""]"""
                    wsCRJSweepsInfo.Range("W2").Formula = "="""""
                    wsCRJSweepsInfo.Range("X2").Formula = "=""19234"""
                    wsCRJSweepsInfo.Range("Y2").Formula = "="""""
                    wsCRJSweepsInfo.Range("Z2").Formula = "="""""
                    wsCRJSweepsInfo.Range("AA2").Formula = "="""""
                    wsCRJSweepsInfo.Range("AB2").Formula = "=""000"""
                    wsCRJSweepsInfo.Range("AC2").Formula = "=""ProPay"""
                    wsCRJSweepsInfo.Range("AD2").Formula = "="""""
                    wsCRJSweepsInfo.Range("AE2").Formula = "="""""
                    wsCRJSweepsInfo.Range("AF2").Formula = "=XLOOKUP(A2,'Sweeps Breakdown'!A:A,'Sweeps Breakdown'!J:J)"
                    wsCRJSweepsInfo.Range("AG2").Formula = "=""7301-ATF Campaign"""

                ' Step : Format Cells
                    
                    CRJSweepsInfoEndRow = wsCRJSweepsInfo.Cells(wsCRJSweepsInfo.Rows.Count, 1).End(xlUp).Row
                    
                    If CRJSweepsInfoEndRow > 2 Then
                    wsCRJSweepsInfo.Range("B2:AG" & CRJSweepsInfoEndRow).FillDown
                    End If
                    
                    wsCRJSweepsInfo.Range("A:AG").AutoFilter
                    wsCRJSweepsInfo.Range("A:AG").Columns.AutoFit
                
           
            ' Steps : Populate the: wsCRJReturnFees ("Extra Return Fees - CRJ Format" worksheet)
                ' Step : Create the columns headers.
                    wsCRJReturnFees.Range("A1").value = "CNP School - Sweep ID"
                    wsCRJReturnFees.Range("B1").value = "RECEIPT_DATE"
                    wsCRJReturnFees.Range("C1").value = "PAYMETHOD"
                    wsCRJReturnFees.Range("D1").value = "DOCDATE"
                    wsCRJReturnFees.Range("E1").value = "DOCNUMBER"
                    wsCRJReturnFees.Range("F1").value = "DESCRIPTION"
                    wsCRJReturnFees.Range("G1").value = "DEPOSITTO"
                    wsCRJReturnFees.Range("H1").value = "BANKACCOUNTID"
                    wsCRJReturnFees.Range("I1").value = "DEPOSITDATE"
                    wsCRJReturnFees.Range("J1").value = "UNDEPACCTNO"
                    wsCRJReturnFees.Range("K1").value = "CURRENCY"
                    wsCRJReturnFees.Range("L1").value = "EXCH_RATE_DATE"
                    wsCRJReturnFees.Range("M1").value = "EXCH_RATE_TYPE_ID"
                    wsCRJReturnFees.Range("N1").value = "EXCH_RATE_DATE"
                    wsCRJReturnFees.Range("O1").value = "LINE_NO"
                    wsCRJReturnFees.Range("P1").value = "ACCT_NO"
                    wsCRJReturnFees.Range("Q1").value = "ACCOUNTLABEL"
                    wsCRJReturnFees.Range("R1").value = "TRX_AMOUNT (Positives SF Data)"
                    wsCRJReturnFees.Range("S1").value = "AMOUNT (Negative SF Data)"
                    wsCRJReturnFees.Range("T1").value = "DEPT_ID"
                    wsCRJReturnFees.Range("U1").value = "LOCATION_ID"
                    wsCRJReturnFees.Range("V1").value = "ITEM_MEMO"
                    wsCRJReturnFees.Range("W1").value = "OTHERRECEIPTSENTRY_PROJECTID"
                    wsCRJReturnFees.Range("X1").value = "OTHERRECEIPTSENTRY_CUSTOMERID"
                    wsCRJReturnFees.Range("Y1").value = "OTHERRECEIPTSENTRY_ITEMID"
                    wsCRJReturnFees.Range("Z1").value = "OTHERRECEIPTSENTRY_VENDORID"
                    wsCRJReturnFees.Range("AA1").value = "OTHERRECEIPTSENTRY_EMPLOYEEID"
                    wsCRJReturnFees.Range("AB1").value = "OTHERRECEIPTSENTRY_CLASSID"
                    wsCRJReturnFees.Range("AC1").value = "PAYER_NAME"
                    wsCRJReturnFees.Range("AD1").value = "SUPDOCID"
                    wsCRJReturnFees.Range("AE1").value = "EXCHANGE_RATE"
                    wsCRJReturnFees.Range("AF1").value = "OR_TRANSACTION_DATE"
                    wsCRJReturnFees.Range("AG1").value = "GLDIMFUNDING_SOURCE"

                ' Step : Populate the Formulas and Fill Down.
                    wsCRJReturnFees.Range("A2").Formula2 = "=UNIQUE(FILTER('Reports Consolidated-ReturnFees'!O:O,('Reports Consolidated-ReturnFees'!O:O<>"""")*('Reports Consolidated-ReturnFees'!O:O<>""CNP School ID - Sweep ID"")))"
                    wsCRJReturnFees.Range("B2").Formula = "=IF(A2="""","""",XLOOKUP(A2,'Sweeps Breakdown'!A:A,'Sweeps Breakdown'!J:J))"
                    wsCRJReturnFees.Range("C2").Formula = "=IF(A2="""","""",""Credit Card"")"
                    wsCRJReturnFees.Range("D2").Formula = "=IF(A2="""","""",XLOOKUP(A2,'Sweeps Breakdown'!A:A,'Sweeps Breakdown'!J:J))"
                    wsCRJReturnFees.Range("E2").Formula = "=IF(A2="""","""",""ProPay"")"
                    wsCRJReturnFees.Range("F2").Formula = "=IF(A2="""","""",XLOOKUP(NUMBERVALUE(LEFT(A2,5)),'School Mapping'!C:C,'School Mapping'!I:I)&"" - Click & Pledge (""&'Extra Return Fees - CRJ Format'!A2&"")"")"
                    wsCRJReturnFees.Range("G2").Formula = "=IF(A2="""","""",""Bank account"")"
                    wsCRJReturnFees.Range("H2").Formula = "=IF(A2="""","""",XLOOKUP(NUMBERVALUE(LEFT(A2,5)),'School Mapping'!C:C,'School Mapping'!D:D))"
                    wsCRJReturnFees.Range("I2").Formula = "=IF(A2="""","""",XLOOKUP(A2,'Sweeps Breakdown'!A:A,'Sweeps Breakdown'!J:J))"
                    wsCRJReturnFees.Range("J2").Formula = "="""""
                    wsCRJReturnFees.Range("K2").Formula = "=IF(A2="""","""",""USD"")"
                    wsCRJReturnFees.Range("L2").Formula = "="""""
                    wsCRJReturnFees.Range("M2").Formula = "="""""
                    wsCRJReturnFees.Range("N2").Formula = "="""""
                    wsCRJReturnFees.Range("O2").Formula = "=""4"""
                    wsCRJReturnFees.Range("P2").Formula = "=""82401"""
                    wsCRJReturnFees.Range("Q2").Formula = "="""""
                    wsCRJReturnFees.Range("R2").Formula = "=IF(A2="""","""",SUMIF('Reports Consolidated-ReturnFees'!O:O,A2,'Reports Consolidated-ReturnFees'!J:J))"
                    wsCRJReturnFees.Range("S2").Formula = "=IF(A2="""","""",SUMIF('Reports Consolidated-ReturnFees'!O:O,A2,'Reports Consolidated-ReturnFees'!J:J))"
                    wsCRJReturnFees.Range("T2").Formula = "=""2046"""
                    wsCRJReturnFees.Range("U2").Formula = "=IF(A2="""","""",XLOOKUP(NUMBERVALUE(LEFT(A2,5)),'School Mapping'!C:C,'School Mapping'!F:F))"
                    wsCRJReturnFees.Range("V2").Formula = "=IF(A2="""","""",""Additional Return Fees - ""&TEXT(B2,""MM.DD.YYYY"")&"" (""&A2&"") [""&XLOOKUP(NUMBERVALUE(LEFT(A2,5)),'School Mapping'!C:C,'School Mapping'!I:I)&""]"")"
                    wsCRJReturnFees.Range("W2").Formula = "="""""
                    wsCRJReturnFees.Range("X2").Formula = "=IF(A2="""","""",""19234"")"
                    wsCRJReturnFees.Range("Y2").Formula = "="""""
                    wsCRJReturnFees.Range("Z2").Formula = "="""""
                    wsCRJReturnFees.Range("AA2").Formula = "="""""
                    wsCRJReturnFees.Range("AB2").Formula = "=IF(A2="""","""",""000"")"
                    wsCRJReturnFees.Range("AC2").Formula = "=IF(A2="""","""",""ProPay"")"
                    wsCRJReturnFees.Range("AD2").Formula = "="""""
                    wsCRJReturnFees.Range("AE2").Formula = "="""""
                    wsCRJReturnFees.Range("AF2").Formula = "=IF(A2="""","""",XLOOKUP(A2,'Sweeps Breakdown'!A:A,'Sweeps Breakdown'!J:J))"
                    wsCRJReturnFees.Range("AG2").Formula = "=IF(A2="""","""",""7301-ATF Campaign"")"


                    
                ' Step : Format Cells
                    
                    CRJReturnFeesEndRow = wsCRJReturnFees.Cells(wsCRJReturnFees.Rows.Count, 1).End(xlUp).Row
                    
                    If CRJReturnFeesEndRow > 2 Then
                    wsCRJReturnFees.Range("B2:AG" & CRJReturnFeesEndRow).FillDown
                    End If
                    
                    wsCRJReturnFees.Range("A:AG").AutoFilter
                    wsCRJReturnFees.Range("A:AG").Columns.AutoFit
           
           
            ' Steps : Populate the: wsCRJFormat ("CRJ Format" worksheet)
                ' Step : Create the columns headers.
                    wsCRJFormat.Range("A1").value = "CNP School - Sweep ID"
                    wsCRJFormat.Range("B1").value = "RECEIPT_DATE"
                    wsCRJFormat.Range("C1").value = "PAYMETHOD"
                    wsCRJFormat.Range("D1").value = "DOCDATE"
                    wsCRJFormat.Range("E1").value = "DOCNUMBER"
                    wsCRJFormat.Range("F1").value = "DESCRIPTION"
                    wsCRJFormat.Range("G1").value = "DEPOSITTO"
                    wsCRJFormat.Range("H1").value = "BANKACCOUNTID"
                    wsCRJFormat.Range("I1").value = "DEPOSITDATE"
                    wsCRJFormat.Range("J1").value = "UNDEPACCTNO"
                    wsCRJFormat.Range("K1").value = "CURRENCY"
                    wsCRJFormat.Range("L1").value = "EXCH_RATE_DATE"
                    wsCRJFormat.Range("M1").value = "EXCH_RATE_TYPE_ID"
                    wsCRJFormat.Range("N1").value = "EXCH_RATE_DATE"
                    wsCRJFormat.Range("O1").value = "LINE_NO"
                    wsCRJFormat.Range("P1").value = "ACCT_NO"
                    wsCRJFormat.Range("Q1").value = "ACCOUNTLABEL"
                    wsCRJFormat.Range("R1").value = "TRX_AMOUNT (Positives SF Data)"
                    wsCRJFormat.Range("S1").value = "AMOUNT (Negative SF Data)"
                    wsCRJFormat.Range("T1").value = "DEPT_ID"
                    wsCRJFormat.Range("U1").value = "LOCATION_ID"
                    wsCRJFormat.Range("V1").value = "ITEM_MEMO"
                    wsCRJFormat.Range("W1").value = "OTHERRECEIPTSENTRY_PROJECTID"
                    wsCRJFormat.Range("X1").value = "OTHERRECEIPTSENTRY_CUSTOMERID"
                    wsCRJFormat.Range("Y1").value = "OTHERRECEIPTSENTRY_ITEMID"
                    wsCRJFormat.Range("Z1").value = "OTHERRECEIPTSENTRY_VENDORID"
                    wsCRJFormat.Range("AA1").value = "OTHERRECEIPTSENTRY_EMPLOYEEID"
                    wsCRJFormat.Range("AB1").value = "OTHERRECEIPTSENTRY_CLASSID"
                    wsCRJFormat.Range("AC1").value = "PAYER_NAME"
                    wsCRJFormat.Range("AD1").value = "SUPDOCID"
                    wsCRJFormat.Range("AE1").value = "EXCHANGE_RATE"
                    wsCRJFormat.Range("AF1").value = "OR_TRANSACTION_DATE"
                    wsCRJFormat.Range("AG1").value = "GLDIMFUNDING_SOURCE"

                ' Step : Populate the Formulas and Fill Down.
                    ' [Negative] Sweeps (Transaction Fees)
                        wsCRJFormat.Range("A2").Formula2 = "=FILTER('Sweeps CRJ information'!A:Q,('Sweeps CRJ information'!S:S<>0)*('Sweeps CRJ information'!S:S<>"""")*('Sweeps CRJ information'!S:S<>""AMOUNT (Negative SF Data)""), """")"
                        wsCRJFormat.Range("R2").Formula2 = "=FILTER('Sweeps CRJ information'!S:S,('Sweeps CRJ information'!S:S<>0)*('Sweeps CRJ information'!S:S<>"""")*('Sweeps CRJ information'!S:S<>""AMOUNT (Negative SF Data)""), """")"
                        wsCRJFormat.Range("S2").Formula2 = "=FILTER('Sweeps CRJ information'!S:AG,('Sweeps CRJ information'!S:S<>0)*('Sweeps CRJ information'!S:S<>"""")*('Sweeps CRJ information'!S:S<>""AMOUNT (Negative SF Data)""), """")"

                    ' [Positive] Sweeps (Transaction Fees)
                        wsCRJFormat.Range("A5001").Formula2 = "=FILTER('Sweeps CRJ information'!A:Q,('Sweeps CRJ information'!R:R<>0)*('Sweeps CRJ information'!R:R<>"""")*('Sweeps CRJ information'!R:R<>""TRX_AMOUNT (Positive SF Data)""), """")"
                        wsCRJFormat.Range("R5001").Formula2 = "=FILTER('Sweeps CRJ information'!R:R,('Sweeps CRJ information'!R:R<>0)*('Sweeps CRJ information'!R:R<>"""")*('Sweeps CRJ information'!R:R<>""TRX_AMOUNT (Positive SF Data)""), """")"
                        wsCRJFormat.Range("S5001").Formula2 = "=FILTER('Sweeps CRJ information'!R:R,('Sweeps CRJ information'!R:R<>0)*('Sweeps CRJ information'!R:R<>"""")*('Sweeps CRJ information'!R:R<>""TRX_AMOUNT (Positive SF Data)""), """")"
                        wsCRJFormat.Range("T5001").Formula2 = "=FILTER('Sweeps CRJ information'!T:AG,('Sweeps CRJ information'!R:R<>0)*('Sweeps CRJ information'!R:R<>"""")*('Sweeps CRJ information'!R:R<>""TRX_AMOUNT (Positive SF Data)""), """")"
                        
                    ' Positive Sweeps (Bank Fees)
                        wsCRJFormat.Range("A10001").Formula2 = "=FILTER('Sweeps Breakdown'!A:A,'Sweeps Breakdown'!G:G=-2.5, """")"
                        wsCRJFormat.Range("B10001").Formula = "=IFERROR(IF($A10001<>"""",XLOOKUP($A10001,'Sweeps CRJ information'!$A:$A,'Sweeps CRJ information'!B:B),""""),"""")"
                        wsCRJFormat.Range("C10001").Formula = "=IFERROR(IF($A10001<>"""",XLOOKUP($A10001,'Sweeps CRJ information'!$A:$A,'Sweeps CRJ information'!C:C),""""),"""")"
                        wsCRJFormat.Range("D10001").Formula = "=IFERROR(IF($A10001<>"""",XLOOKUP($A10001,'Sweeps CRJ information'!$A:$A,'Sweeps CRJ information'!D:D),""""),"""")"
                        wsCRJFormat.Range("E10001").Formula = "=IFERROR(IF($A10001<>"""",XLOOKUP($A10001,'Sweeps CRJ information'!$A:$A,'Sweeps CRJ information'!E:E),""""),"""")"
                        wsCRJFormat.Range("F10001").Formula = "=IFERROR(IF($A10001<>"""",XLOOKUP($A10001,'Sweeps CRJ information'!$A:$A,'Sweeps CRJ information'!F:F),""""),"""")"
                        wsCRJFormat.Range("G10001").Formula = "=IFERROR(IF($A10001<>"""",XLOOKUP($A10001,'Sweeps CRJ information'!$A:$A,'Sweeps CRJ information'!G:G),""""),"""")"
                        wsCRJFormat.Range("H10001").Formula = "=IFERROR(IF($A10001<>"""",XLOOKUP($A10001,'Sweeps CRJ information'!$A:$A,'Sweeps CRJ information'!H:H),""""),"""")"
                        wsCRJFormat.Range("I10001").Formula = "=IFERROR(IF($A10001<>"""",XLOOKUP($A10001,'Sweeps CRJ information'!$A:$A,'Sweeps CRJ information'!I:I),""""),"""")"
                        wsCRJFormat.Range("J10001").Formula = "=IFERROR(IF($A10001<>"""",XLOOKUP($A10001,'Sweeps CRJ information'!$A:$A,'Sweeps CRJ information'!J:J),""""),"""")"
                        wsCRJFormat.Range("K10001").Formula = "=IFERROR(IF($A10001<>"""",XLOOKUP($A10001,'Sweeps CRJ information'!$A:$A,'Sweeps CRJ information'!K:K),""""),"""")"
                        wsCRJFormat.Range("L10001").Formula = "=IFERROR(IF($A10001<>"""",XLOOKUP($A10001,'Sweeps CRJ information'!$A:$A,'Sweeps CRJ information'!L:L),""""),"""")"
                        wsCRJFormat.Range("M10001").Formula = "=IFERROR(IF($A10001<>"""",XLOOKUP($A10001,'Sweeps CRJ information'!$A:$A,'Sweeps CRJ information'!M:M),""""),"""")"
                        wsCRJFormat.Range("N10001").Formula = "=IFERROR(IF($A10001<>"""",XLOOKUP($A10001,'Sweeps CRJ information'!$A:$A,'Sweeps CRJ information'!N:N),""""),"""")"
                        wsCRJFormat.Range("O10001").Formula = "=IFERROR(IF($A10001<>"""",""3"",""""),"""")"
                        wsCRJFormat.Range("P10001").Formula = "=IFERROR(IF($A10001<>"""",XLOOKUP($A10001,'Sweeps CRJ information'!$A:$A,'Sweeps CRJ information'!P:P),""""),"""")"
                        wsCRJFormat.Range("Q10001").Formula = "=IFERROR(IF($A10001<>"""",XLOOKUP($A10001,'Sweeps CRJ information'!$A:$A,'Sweeps CRJ information'!Q:Q),""""),"""")"
                        wsCRJFormat.Range("R10001").Formula = "=IFERROR(IF($A10001<>"""",-2.5,""""),"""")"
                        wsCRJFormat.Range("S10001").Formula = "=IFERROR(IF($A10001<>"""",-2.5,""""),"""")"
                        wsCRJFormat.Range("T10001").Formula = "=IFERROR(IF($A10001<>"""",XLOOKUP($A10001,'Sweeps CRJ information'!$A:$A,'Sweeps CRJ information'!T:T),""""),"""")"
                        wsCRJFormat.Range("U10001").Formula = "=IFERROR(IF($A10001<>"""",XLOOKUP($A10001,'Sweeps CRJ information'!$A:$A,'Sweeps CRJ information'!U:U),""""),"""")"
                        wsCRJFormat.Range("V10001").Formula = "=IFERROR(IF($A10001<>"""",""ProPay ACH Deposit Transfer Fee - ""&RIGHT(XLOOKUP($A10001,'Sweeps CRJ information'!$A:$A,'Sweeps CRJ information'!V:V),LEN(XLOOKUP($A10001,'Sweeps CRJ information'!$A:$A,'Sweeps CRJ information'!V:V))-24),""""),"""")"
                        wsCRJFormat.Range("W10001").Formula = "=IFERROR(IF($A10001<>"""",XLOOKUP($A10001,'Sweeps CRJ information'!$A:$A,'Sweeps CRJ information'!W:W),""""),"""")"
                        wsCRJFormat.Range("X10001").Formula = "=IFERROR(IF($A10001<>"""",XLOOKUP($A10001,'Sweeps CRJ information'!$A:$A,'Sweeps CRJ information'!X:X),""""),"""")"
                        wsCRJFormat.Range("Y10001").Formula = "=IFERROR(IF($A10001<>"""",XLOOKUP($A10001,'Sweeps CRJ information'!$A:$A,'Sweeps CRJ information'!Y:Y),""""),"""")"
                        wsCRJFormat.Range("Z10001").Formula = "=IFERROR(IF($A10001<>"""",XLOOKUP($A10001,'Sweeps CRJ information'!$A:$A,'Sweeps CRJ information'!Z:Z),""""),"""")"
                        wsCRJFormat.Range("AA10001").Formula = "=IFERROR(IF($A10001<>"""",XLOOKUP($A10001,'Sweeps CRJ information'!$A:$A,'Sweeps CRJ information'!AA:AA),""""),"""")"
                        wsCRJFormat.Range("AB10001").Formula = "=IFERROR(IF($A10001<>"""",XLOOKUP($A10001,'Sweeps CRJ information'!$A:$A,'Sweeps CRJ information'!AB:AB),""""),"""")"
                        wsCRJFormat.Range("AC10001").Formula = "=IFERROR(IF($A10001<>"""",XLOOKUP($A10001,'Sweeps CRJ information'!$A:$A,'Sweeps CRJ information'!AC:AC),""""),"""")"
                        wsCRJFormat.Range("AD10001").Formula = "=IFERROR(IF($A10001<>"""",XLOOKUP($A10001,'Sweeps CRJ information'!$A:$A,'Sweeps CRJ information'!AD:AD),""""),"""")"
                        wsCRJFormat.Range("AE10001").Formula = "=IFERROR(IF($A10001<>"""",XLOOKUP($A10001,'Sweeps CRJ information'!$A:$A,'Sweeps CRJ information'!AE:AE),""""),"""")"
                        wsCRJFormat.Range("AF10001").Formula = "=IFERROR(IF($A10001<>"""",XLOOKUP($A10001,'Sweeps CRJ information'!$A:$A,'Sweeps CRJ information'!AF:AF),""""),"""")"
                        wsCRJFormat.Range("AG10001").Formula = "=IFERROR(IF($A10001<>"""",XLOOKUP($A10001,'Sweeps CRJ information'!$A:$A,'Sweeps CRJ information'!AG:AG),""""),"""")"
                        
                    ' Extra Return Fees
                        wsCRJFormat.Range("A17501").Formula2 = "=FILTER('Extra Return Fees - CRJ Format'!A:AG,('Extra Return Fees - CRJ Format'!A:A<>""CNP School - Sweep ID"") * ('Extra Return Fees - CRJ Format'!A:A<>""""),"""")"

                    ' Negative Transactions
                        wsCRJFormat.Range("A22501").Formula2 = "=FILTER('Negative SF Data'!A:A,('Negative SF Data'!A:A<>"""")*('Negative SF Data'!A:A<>""Number""),"""")"
                        wsCRJFormat.Range("B22501").Formula2 = "=FILTER('Negative SF Data'!AP:BU,('Negative SF Data'!A:A<>"""")*('Negative SF Data'!A:A<>""Number""),"""")"
                        
                    ' Positive Transactions
                        wsCRJFormat.Range("A32501").Formula2 = "=FILTER('Positive SF Data'!A:A,('Positive SF Data'!A:A<>"""")*('Positive SF Data'!A:A<>""Number""),"""")"
                        wsCRJFormat.Range("B32501").Formula2 = "=FILTER('Positive SF Data'!AP:BU,('Positive SF Data'!A:A<>""Number"")*('Positive SF Data'!A:A<>""""),"""")"


                ' Step : Format Cells
                    
                    CRJFormatEndRow_Bank = wsCRJFormat.Range("A17501").End(xlUp).Row
                    
                    If CRJFormatEndRow_Bank > 10001 Then
                    wsCRJFormat.Range("B10001:AG" & CRJFormatEndRow_Bank).FillDown
                    End If
                    
                    wsCRJFormat.Range("A:AG").AutoFilter
                    wsCRJFormat.Range("A:AG").Columns.AutoFit
           
           
            ' Steps : Populate the: wsCRJPutTogether ("CRJ Put together" worksheet)
                ' Step : Create the columns headers.
                    wsCRJPutTogether.Range("A1").value = "DONOTIMPORT"
                    wsCRJPutTogether.Range("B1").value = "RECEIPT_DATE"
                    wsCRJPutTogether.Range("C1").value = "PAYMETHOD"
                    wsCRJPutTogether.Range("D1").value = "DOCDATE"
                    wsCRJPutTogether.Range("E1").value = "DOCNUMBER"
                    wsCRJPutTogether.Range("F1").value = "DESCRIPTION"
                    wsCRJPutTogether.Range("G1").value = "DEPOSITTO"
                    wsCRJPutTogether.Range("H1").value = "BANKACCOUNTID"
                    wsCRJPutTogether.Range("I1").value = "DEPOSITDATE"
                    wsCRJPutTogether.Range("J1").value = "UNDEPACCTNO"
                    wsCRJPutTogether.Range("K1").value = "CURRENCY"
                    wsCRJPutTogether.Range("L1").value = "EXCH_RATE_DATE"
                    wsCRJPutTogether.Range("M1").value = "EXCH_RATE_TYPE_ID"
                    wsCRJPutTogether.Range("N1").value = "EXCH_RATE_DATE"
                    wsCRJPutTogether.Range("O1").value = "LINE_NO"
                    wsCRJPutTogether.Range("P1").value = "ACCT_NO"
                    wsCRJPutTogether.Range("Q1").value = "ACCOUNTLABEL"
                    wsCRJPutTogether.Range("R1").value = "TRX_AMOUNT"
                    wsCRJPutTogether.Range("S1").value = "AMOUNT"
                    wsCRJPutTogether.Range("T1").value = "DEPT_ID"
                    wsCRJPutTogether.Range("U1").value = "LOCATION_ID"
                    wsCRJPutTogether.Range("V1").value = "ITEM_MEMO"
                    wsCRJPutTogether.Range("W1").value = "OTHERRECEIPTSENTRY_PROJECTID"
                    wsCRJPutTogether.Range("X1").value = "OTHERRECEIPTSENTRY_CUSTOMERID"
                    wsCRJPutTogether.Range("Y1").value = "OTHERRECEIPTSENTRY_ITEMID"
                    wsCRJPutTogether.Range("Z1").value = "OTHERRECEIPTSENTRY_VENDORID"
                    wsCRJPutTogether.Range("AA1").value = "OTHERRECEIPTSENTRY_EMPLOYEEID"
                    wsCRJPutTogether.Range("AB1").value = "OTHERRECEIPTSENTRY_CLASSID"
                    wsCRJPutTogether.Range("AC1").value = "PAYER_NAME"
                    wsCRJPutTogether.Range("AD1").value = "SUPDOCID"
                    wsCRJPutTogether.Range("AE1").value = "EXCHANGE_RATE"
                    wsCRJPutTogether.Range("AF1").value = "OR_TRANSACTION_DATE"
                    wsCRJPutTogether.Range("AG1").value = "GLDIMFUNDING_SOURCE"

                ' Step : Populate the Formulas and Fill Down.
                    wsCRJPutTogether.Range("A2").Formula = "=LEFT(RIGHT(F2,LEN(F2)-SEARCH(""("",F2)),LEN(RIGHT(F2,LEN(F2)-SEARCH(""("",F2)))-1)"
                    wsCRJPutTogether.Range("B2").Formula2 = "=SORT(FILTER('CRJ Format'!B:AG,('CRJ Format'!F:F<>"""") * ('CRJ Format'!F:F<>""DESCRIPTION"")),5)"

                ' Step : Format Cells
                    
                    CRJPutTogetherEndRow = wsCRJPutTogether.Cells(wsCRJPutTogether.Rows.Count, 2).End(xlUp).Row
                    
                    If CRJPutTogetherEndRow > 2 Then
                        wsCRJPutTogether.Range("A2:A" & CRJPutTogetherEndRow).FillDown
                    End If
                    
                    wsCRJPutTogether.Range("A:AG").AutoFilter
                    wsCRJPutTogether.Range("A:AG").Columns.AutoFit
                
                
           
            ' Steps : Populate the: wsCRJPos ("Positive Sweep CRJs" worksheet)
                ' Step : Create the columns headers.
                    wsCRJPos.Range("A1").value = "DONOTIMPORT"
                    wsCRJPos.Range("B1").value = "RECEIPT_DATE"
                    wsCRJPos.Range("C1").value = "PAYMETHOD"
                    wsCRJPos.Range("D1").value = "DOCDATE"
                    wsCRJPos.Range("E1").value = "DOCNUMBER"
                    wsCRJPos.Range("F1").value = "DESCRIPTION"
                    wsCRJPos.Range("G1").value = "DEPOSITTO"
                    wsCRJPos.Range("H1").value = "BANKACCOUNTID"
                    wsCRJPos.Range("I1").value = "DEPOSITDATE"
                    wsCRJPos.Range("J1").value = "UNDEPACCTNO"
                    wsCRJPos.Range("K1").value = "CURRENCY"
                    wsCRJPos.Range("L1").value = "EXCH_RATE_DATE"
                    wsCRJPos.Range("M1").value = "EXCH_RATE_TYPE_ID"
                    wsCRJPos.Range("N1").value = "EXCH_RATE_DATE"
                    wsCRJPos.Range("O1").value = "LINE_NO"
                    wsCRJPos.Range("P1").value = "ACCT_NO"
                    wsCRJPos.Range("Q1").value = "ACCOUNTLABEL"
                    wsCRJPos.Range("R1").value = "TRX_AMOUNT"
                    wsCRJPos.Range("S1").value = "AMOUNT"
                    wsCRJPos.Range("T1").value = "DEPT_ID"
                    wsCRJPos.Range("U1").value = "LOCATION_ID"
                    wsCRJPos.Range("V1").value = "ITEM_MEMO"
                    wsCRJPos.Range("W1").value = "OTHERRECEIPTSENTRY_PROJECTID"
                    wsCRJPos.Range("X1").value = "OTHERRECEIPTSENTRY_CUSTOMERID"
                    wsCRJPos.Range("Y1").value = "OTHERRECEIPTSENTRY_ITEMID"
                    wsCRJPos.Range("Z1").value = "OTHERRECEIPTSENTRY_VENDORID"
                    wsCRJPos.Range("AA1").value = "OTHERRECEIPTSENTRY_EMPLOYEEID"
                    wsCRJPos.Range("AB1").value = "OTHERRECEIPTSENTRY_CLASSID"
                    wsCRJPos.Range("AC1").value = "PAYER_NAME"
                    wsCRJPos.Range("AD1").value = "SUPDOCID"
                    wsCRJPos.Range("AE1").value = "EXCHANGE_RATE"
                    wsCRJPos.Range("AF1").value = "OR_TRANSACTION_DATE"
                    wsCRJPos.Range("AG1").value = "GLDIMFUNDING_SOURCE"


                ' Step : Populate the Formulas and Fill Down.
                    wsCRJPos.Range("A2").value = "=IF(A1=""DONOTIMPORT"",1,1+A1)"
                    wsCRJPos.Range("B2").Formula2 = "=FILTER('CRJ Put together'!B:AG, ISNUMBER(MATCH('CRJ Put together'!A:A, 'Positive vs Negative Sweeps'!A:A, 0)))"

                ' Step : Format Cells
                    
                    CRJPosEndRow = wsCRJPos.Cells(wsCRJPos.Rows.Count, 2).End(xlUp).Row
                    
                    If CRJPosEndRow > 2 Then
                    wsCRJPos.Range("A2:A" & CRJPosEndRow).FillDown
                    End If
                    
                
           
            ' Steps : Populate the: wsCRJImport ("Positive CRJs - Import File" worksheet)
                ' Step : Create the columns headers.
                    wsCRJImport.Range("A1").value = "DONOTIMPORT"
                    wsCRJImport.Range("B1").value = "RECEIPT_DATE"
                    wsCRJImport.Range("C1").value = "PAYMETHOD"
                    wsCRJImport.Range("D1").value = "DOCDATE"
                    wsCRJImport.Range("E1").value = "DOCNUMBER"
                    wsCRJImport.Range("F1").value = "DESCRIPTION"
                    wsCRJImport.Range("G1").value = "DEPOSITTO"
                    wsCRJImport.Range("H1").value = "BANKACCOUNTID"
                    wsCRJImport.Range("I1").value = "DEPOSITDATE"
                    wsCRJImport.Range("J1").value = "UNDEPACCTNO"
                    wsCRJImport.Range("K1").value = "CURRENCY"
                    wsCRJImport.Range("L1").value = "EXCH_RATE_DATE"
                    wsCRJImport.Range("M1").value = "EXCH_RATE_TYPE_ID"
                    wsCRJImport.Range("N1").value = "EXCH_RATE_DATE"
                    wsCRJImport.Range("O1").value = "LINE_NO"
                    wsCRJImport.Range("P1").value = "ACCT_NO"
                    wsCRJImport.Range("Q1").value = "ACCOUNTLABEL"
                    wsCRJImport.Range("R1").value = "TRX_AMOUNT"
                    wsCRJImport.Range("S1").value = "AMOUNT"
                    wsCRJImport.Range("T1").value = "DEPT_ID"
                    wsCRJImport.Range("U1").value = "LOCATION_ID"
                    wsCRJImport.Range("V1").value = "ITEM_MEMO"
                    wsCRJImport.Range("W1").value = "OTHERRECEIPTSENTRY_PROJECTID"
                    wsCRJImport.Range("X1").value = "OTHERRECEIPTSENTRY_CUSTOMERID"
                    wsCRJImport.Range("Y1").value = "OTHERRECEIPTSENTRY_ITEMID"
                    wsCRJImport.Range("Z1").value = "OTHERRECEIPTSENTRY_VENDORID"
                    wsCRJImport.Range("AA1").value = "OTHERRECEIPTSENTRY_EMPLOYEEID"
                    wsCRJImport.Range("AB1").value = "OTHERRECEIPTSENTRY_CLASSID"
                    wsCRJImport.Range("AC1").value = "PAYER_NAME"
                    wsCRJImport.Range("AD1").value = "SUPDOCID"
                    wsCRJImport.Range("AE1").value = "EXCHANGE_RATE"
                    wsCRJImport.Range("AF1").value = "OR_TRANSACTION_DATE"
                    wsCRJImport.Range("AG1").value = "GLDIMFUNDING_SOURCE"

                ' Step : Populate the Formulas and Fill Down.
                    wsCRJImport.Range("A2").Formula2 = "=FILTER('Positive Sweep CRJs'!A:A,('Positive Sweep CRJs'!A:A<>"""") * ('Positive Sweep CRJs'!A:A<>""DONOTIMPORT""))"
                    wsCRJImport.Range("B2").Formula = "=XLOOKUP($A2,'Positive Sweep CRJs'!$A:$A,'Positive Sweep CRJs'!B:B)"
                    wsCRJImport.Range("C2").Formula = "=XLOOKUP($A2,'Positive Sweep CRJs'!$A:$A,'Positive Sweep CRJs'!C:C)"
                    wsCRJImport.Range("D2").Formula = "=XLOOKUP($A2,'Positive Sweep CRJs'!$A:$A,'Positive Sweep CRJs'!D:D)"
                    wsCRJImport.Range("E2").Formula = "=XLOOKUP($A2,'Positive Sweep CRJs'!$A:$A,'Positive Sweep CRJs'!E:E)"
                    wsCRJImport.Range("F2").Formula = "=XLOOKUP($A2,'Positive Sweep CRJs'!$A:$A,'Positive Sweep CRJs'!F:F)"
                    wsCRJImport.Range("G2").Formula = "=XLOOKUP($A2,'Positive Sweep CRJs'!$A:$A,'Positive Sweep CRJs'!G:G)"
                    wsCRJImport.Range("H2").Formula = "=XLOOKUP($A2,'Positive Sweep CRJs'!$A:$A,'Positive Sweep CRJs'!H:H)"
                    wsCRJImport.Range("I2").Formula = "=XLOOKUP($A2,'Positive Sweep CRJs'!$A:$A,'Positive Sweep CRJs'!I:I)"
                    wsCRJImport.Range("J2").Formula = "=XLOOKUP($A2,'Positive Sweep CRJs'!$A:$A,'Positive Sweep CRJs'!J:J)"
                    wsCRJImport.Range("K2").Formula = "=XLOOKUP($A2,'Positive Sweep CRJs'!$A:$A,'Positive Sweep CRJs'!K:K)"
                    wsCRJImport.Range("L2").Formula = "=XLOOKUP($A2,'Positive Sweep CRJs'!$A:$A,'Positive Sweep CRJs'!L:L)"
                    wsCRJImport.Range("M2").Formula = "=XLOOKUP($A2,'Positive Sweep CRJs'!$A:$A,'Positive Sweep CRJs'!M:M)"
                    wsCRJImport.Range("N2").Formula = "=XLOOKUP($A2,'Positive Sweep CRJs'!$A:$A,'Positive Sweep CRJs'!N:N)"
                    wsCRJImport.Range("O2").Formula = "=IF(F2=F1,1+O1,1)"
                    wsCRJImport.Range("P2").Formula = "=XLOOKUP($A2,'Positive Sweep CRJs'!$A:$A,'Positive Sweep CRJs'!P:P)"
                    wsCRJImport.Range("Q2").Formula = "=XLOOKUP($A2,'Positive Sweep CRJs'!$A:$A,'Positive Sweep CRJs'!Q:Q)"
                    wsCRJImport.Range("R2").Formula = "=XLOOKUP($A2,'Positive Sweep CRJs'!$A:$A,'Positive Sweep CRJs'!R:R)"
                    wsCRJImport.Range("S2").Formula = "=XLOOKUP($A2,'Positive Sweep CRJs'!$A:$A,'Positive Sweep CRJs'!S:S)"
                    wsCRJImport.Range("T2").Formula = "=XLOOKUP($A2,'Positive Sweep CRJs'!$A:$A,'Positive Sweep CRJs'!T:T)"
                    wsCRJImport.Range("U2").Formula = "=XLOOKUP($A2,'Positive Sweep CRJs'!$A:$A,'Positive Sweep CRJs'!U:U)"
                    wsCRJImport.Range("V2").Formula = "=XLOOKUP($A2,'Positive Sweep CRJs'!$A:$A,'Positive Sweep CRJs'!V:V)"
                    wsCRJImport.Range("W2").Formula = "=XLOOKUP($A2,'Positive Sweep CRJs'!$A:$A,'Positive Sweep CRJs'!W:W)"
                    wsCRJImport.Range("X2").Formula = "=XLOOKUP($A2,'Positive Sweep CRJs'!$A:$A,'Positive Sweep CRJs'!X:X)"
                    wsCRJImport.Range("Y2").Formula = "=XLOOKUP($A2,'Positive Sweep CRJs'!$A:$A,'Positive Sweep CRJs'!Y:Y)"
                    wsCRJImport.Range("Z2").Formula = "=XLOOKUP($A2,'Positive Sweep CRJs'!$A:$A,'Positive Sweep CRJs'!Z:Z)"
                    wsCRJImport.Range("AA2").Formula = "=XLOOKUP($A2,'Positive Sweep CRJs'!$A:$A,'Positive Sweep CRJs'!AA:AA)"
                    wsCRJImport.Range("AB2").Formula = "=XLOOKUP($A2,'Positive Sweep CRJs'!$A:$A,'Positive Sweep CRJs'!AB:AB)"
                    wsCRJImport.Range("AC2").Formula = "=XLOOKUP($A2,'Positive Sweep CRJs'!$A:$A,'Positive Sweep CRJs'!AC:AC)"
                    wsCRJImport.Range("AD2").Formula = "=XLOOKUP($A2,'Positive Sweep CRJs'!$A:$A,'Positive Sweep CRJs'!AD:AD)"
                    wsCRJImport.Range("AE2").Formula = "=XLOOKUP($A2,'Positive Sweep CRJs'!$A:$A,'Positive Sweep CRJs'!AE:AE)"
                    wsCRJImport.Range("AF2").Formula = "=XLOOKUP($A2,'Positive Sweep CRJs'!$A:$A,'Positive Sweep CRJs'!AF:AF)"
                    wsCRJImport.Range("AG2").Formula = "=XLOOKUP($A2,'Positive Sweep CRJs'!$A:$A,'Positive Sweep CRJs'!AG:AG)"

                ' Step : Format Cells
                    
                    CRJImportEndRow = wsCRJImport.Cells(wsCRJImport.Rows.Count, 1).End(xlUp).Row
                    
                    If CRJImportEndRow > 2 Then
                    wsCRJImport.Range("B2:AG" & CRJImportEndRow).FillDown
                    End If
                    
                    wsCRJImport.Range("A:AG").Columns.AutoFit
           
            ' Steps : Populate the: wsCRJNeg ("Negative Sweep CRJs" worksheet)
                ' Step : Create the columns headers.
                    wsCRJNeg.Range("A1").value = "DONOTIMPORT"
                    wsCRJNeg.Range("B1").value = "RECEIPT_DATE"
                    wsCRJNeg.Range("C1").value = "PAYMETHOD"
                    wsCRJNeg.Range("D1").value = "DOCDATE"
                    wsCRJNeg.Range("E1").value = "DOCNUMBER"
                    wsCRJNeg.Range("F1").value = "DESCRIPTION"
                    wsCRJNeg.Range("G1").value = "DEPOSITTO"
                    wsCRJNeg.Range("H1").value = "BANKACCOUNTID"
                    wsCRJNeg.Range("I1").value = "DEPOSITDATE"
                    wsCRJNeg.Range("J1").value = "UNDEPACCTNO"
                    wsCRJNeg.Range("K1").value = "CURRENCY"
                    wsCRJNeg.Range("L1").value = "EXCH_RATE_DATE"
                    wsCRJNeg.Range("M1").value = "EXCH_RATE_TYPE_ID"
                    wsCRJNeg.Range("N1").value = "EXCH_RATE_DATE"
                    wsCRJNeg.Range("O1").value = "LINE_NO"
                    wsCRJNeg.Range("P1").value = "ACCT_NO"
                    wsCRJNeg.Range("Q1").value = "ACCOUNTLABEL"
                    wsCRJNeg.Range("R1").value = "TRX_AMOUNT"
                    wsCRJNeg.Range("S1").value = "AMOUNT"
                    wsCRJNeg.Range("T1").value = "DEPT_ID"
                    wsCRJNeg.Range("U1").value = "LOCATION_ID"
                    wsCRJNeg.Range("V1").value = "ITEM_MEMO"
                    wsCRJNeg.Range("W1").value = "OTHERRECEIPTSENTRY_PROJECTID"
                    wsCRJNeg.Range("X1").value = "OTHERRECEIPTSENTRY_CUSTOMERID"
                    wsCRJNeg.Range("Y1").value = "OTHERRECEIPTSENTRY_ITEMID"
                    wsCRJNeg.Range("Z1").value = "OTHERRECEIPTSENTRY_VENDORID"
                    wsCRJNeg.Range("AA1").value = "OTHERRECEIPTSENTRY_EMPLOYEEID"
                    wsCRJNeg.Range("AB1").value = "OTHERRECEIPTSENTRY_CLASSID"
                    wsCRJNeg.Range("AC1").value = "PAYER_NAME"
                    wsCRJNeg.Range("AD1").value = "SUPDOCID"
                    wsCRJNeg.Range("AE1").value = "EXCHANGE_RATE"
                    wsCRJNeg.Range("AF1").value = "OR_TRANSACTION_DATE"
                    wsCRJNeg.Range("AG1").value = "GLDIMFUNDING_SOURCE"

                ' Step : Populate the Formulas and Fill Down.
                    wsCRJNeg.Range("A2").Formula = "=IF(A1=""DONOTIMPORT"",1,1+A1)"
                    wsCRJNeg.Range("B2").Formula2 = "=FILTER('CRJ Put together'!B:AG, ISNUMBER(MATCH('CRJ Put together'!A:A, 'Positive vs Negative Sweeps'!I:I, 0)),"""")"

                ' Step : Format Cells
                    
                    CRJNegEndRow = wsCRJNeg.Cells(wsCRJNeg.Rows.Count, 2).End(xlUp).Row
                    
                    If CRJNegEndRow > 2 Then
                    wsCRJNeg.Range("A2:A" & CRJNegEndRow).FillDown
                    End If
                    
            ' if the CRJNeg isn't empty then fill in the data, otherwise leave it all blank.
                If wsCRJNeg.Range("B2").value <> "" Then
                    ' Steps : Populate the: wsCHARNegStart ("Neg. CHAR - Start" worksheet)
                        ' Step : Create the columns headers.
                            wsCHARNegStart.Range("A1").value = "DONOTIMPORT"
                            wsCHARNegStart.Range("B1").value = "JOURNAL"
                            wsCHARNegStart.Range("C1").value = "DATE"
                            wsCHARNegStart.Range("D1").value = "REVERSEDATE"
                            wsCHARNegStart.Range("E1").value = "DESCRIPTION"
                            wsCHARNegStart.Range("F1").value = "REFERENCE_NO"
                            wsCHARNegStart.Range("G1").value = "LINE_NO"
                            wsCHARNegStart.Range("H1").value = "ACCT_NO"
                            wsCHARNegStart.Range("I1").value = "LOCATION_ID"
                            wsCHARNegStart.Range("J1").value = "DEPT_ID"
                            wsCHARNegStart.Range("K1").value = "DOCUMENT"
                            wsCHARNegStart.Range("L1").value = "MEMO"
                            wsCHARNegStart.Range("M1").value = "DEBIT"
                            wsCHARNegStart.Range("N1").value = "CREDIT"
                            wsCHARNegStart.Range("O1").value = "SOURCEENTITY"
                            wsCHARNegStart.Range("P1").value = "CURRENCY"
                            wsCHARNegStart.Range("Q1").value = "EXCH_RATE_DATE"
                            wsCHARNegStart.Range("R1").value = "EXCH_RATE_TYPE_ID"
                            wsCHARNegStart.Range("S1").value = "EXCHANGE_RATE"
                            wsCHARNegStart.Range("T1").value = "STATE"
                            wsCHARNegStart.Range("U1").value = "ALLOCATION_ID"
                            wsCHARNegStart.Range("V1").value = "RASSET"
                            wsCHARNegStart.Range("W1").value = "RDEPRECIATION_SCHEDULE"
                            wsCHARNegStart.Range("X1").value = "RASSET_ADJUSTMENT"
                            wsCHARNegStart.Range("Y1").value = "RASSET_CLASS"
                            wsCHARNegStart.Range("Z1").value = "RASSETOUTOFSERVICE"
                            wsCHARNegStart.Range("AA1").value = "GLDIMFUNDING_SOURCE"
                            wsCHARNegStart.Range("AB1").value = "GLENTRY_PROJECTID"
                            wsCHARNegStart.Range("AC1").value = "GLENTRY_CUSTOMERID"
                            wsCHARNegStart.Range("AD1").value = "GLENTRY_VENDORID"
                            wsCHARNegStart.Range("AE1").value = "GLENTRY_EMPLOYEEID"
                            wsCHARNegStart.Range("AF1").value = "GLENTRY_ITEMID"
                            wsCHARNegStart.Range("AG1").value = "GLENTRY_CLASSID"
        
                        ' Step : Populate the Formulas and Fill Down.
                            wsCHARNegStart.Range("A2").Formula2 = "=FILTER('Negative Sweep CRJs'!A:A,('Negative Sweep CRJs'!A:A<>"""") * ('Negative Sweep CRJs'!A:A<>""DONOTIMPORT""))"
                            wsCHARNegStart.Range("B2").Formula = "=IF(E2="""","""",""CHAR"")"
                            wsCHARNegStart.Range("C2").Formula = "=IF(E2="""","""",'Negative Sweep CRJs'!B2)"
                            wsCHARNegStart.Range("D2").Formula = "="""""
                            wsCHARNegStart.Range("E2").Formula = "=IF('Negative Sweep CRJs'!F2='Negative Sweep CRJs'!F1,"""",'Negative Sweep CRJs'!F2)"
                            wsCHARNegStart.Range("F2").Formula = "=RIGHT('Negative Sweep CRJs'!F2,LEN('Negative Sweep CRJs'!F2)-SEARCH("" - "",'Negative Sweep CRJs'!F2)-1)"
                            wsCHARNegStart.Range("G2").Formula = "=IF('Negative Sweep CRJs'!F2='Negative Sweep CRJs'!F1,1+G1,1)"
                            wsCHARNegStart.Range("H2").Formula = "='Negative Sweep CRJs'!P2"
                            wsCHARNegStart.Range("I2").Formula = "='Negative Sweep CRJs'!U2"
                            wsCHARNegStart.Range("J2").Formula = "='Negative Sweep CRJs'!T2"
                            wsCHARNegStart.Range("K2").Formula = "="""""
                            wsCHARNegStart.Range("L2").Formula = "='Negative Sweep CRJs'!V2"
                            wsCHARNegStart.Range("M2").Formula = "=IF('Negative Sweep CRJs'!R2<0,'Negative Sweep CRJs'!R2*-1,"""")"
                            wsCHARNegStart.Range("N2").Formula = "=IF('Negative Sweep CRJs'!R2>0,'Negative Sweep CRJs'!R2,"""")"
                            wsCHARNegStart.Range("O2").Formula = "="""""
                            wsCHARNegStart.Range("P2").Formula = "="""""
                            wsCHARNegStart.Range("Q2").Formula = "="""""
                            wsCHARNegStart.Range("R2").Formula = "="""""
                            wsCHARNegStart.Range("S2").Formula = "="""""
                            wsCHARNegStart.Range("T2").Formula = "=""Draft"""
                            wsCHARNegStart.Range("U2").Formula = "="""""
                            wsCHARNegStart.Range("V2").Formula = "="""""
                            wsCHARNegStart.Range("W2").Formula = "="""""
                            wsCHARNegStart.Range("X2").Formula = "="""""
                            wsCHARNegStart.Range("Y2").Formula = "="""""
                            wsCHARNegStart.Range("Z2").Formula = "="""""
                            wsCHARNegStart.Range("AA2").Formula = "='Negative Sweep CRJs'!AG2"
                            wsCHARNegStart.Range("AB2").Formula = "="""""
                            wsCHARNegStart.Range("AC2").Formula = "="""""
                            wsCHARNegStart.Range("AD2").Formula = "="""""
                            wsCHARNegStart.Range("AE2").Formula = "="""""
                            wsCHARNegStart.Range("AF2").Formula = "="""""
                            wsCHARNegStart.Range("AG2").Formula = "=""000"""
                            
                            wsCHARNegStart.Range("A2001").Formula2 = "=FILTER(UNIQUE(E2:E2000),UNIQUE(E2:E2000)<>"""")"
                            wsCHARNegStart.Range("B2001").value = "="""""
                            wsCHARNegStart.Range("C2001").value = "="""""
                            wsCHARNegStart.Range("D2001").value = "="""""
                            wsCHARNegStart.Range("E2001").value = "="""""
                            wsCHARNegStart.Range("F2001").Formula = "=XLOOKUP(A2001,E2:E2000,F2:F2000)"
                            wsCHARNegStart.Range("G2001").Formula = "=COUNTIF(F2:F2000,F2001)+1"
                            wsCHARNegStart.Range("H2001").Formula = "=IF(I2001<>""CHECK"",""11""&LEFT(I2001,1)&""00"",""CHECK"")"
                            wsCHARNegStart.Range("I2001").Formula = "=IF(SUMIF(F2:F2000,F2001,I2:I2000)/COUNTIF(F2:F2000,F2001)=XLOOKUP(F2001,F2:F2000,I2:I2000),XLOOKUP(F2001,F2:F2000,I2:I2000),""CHECK"")"
                            wsCHARNegStart.Range("J2001").value = "=""CHECK"""
                            wsCHARNegStart.Range("K2001").value = "="""""
                            wsCHARNegStart.Range("L2001").Formula = "=A2001&"" - Bank Deposit"""
                            wsCHARNegStart.Range("M2001").value = "="""""
                            wsCHARNegStart.Range("N2001").Formula = "=IF(SUMIF(F2:F2000,F2001,M2:M2000)<>0, SUMIF(F2:F2000,F2001,M2:M2000), 0)-IF(SUMIF(F2:F2000,F2001,N2:N2000)<>0, SUMIF(F2:F2000,F2001,N2:N2000), 0)"
                            wsCHARNegStart.Range("O2001").value = "="""""
                            wsCHARNegStart.Range("P2001").value = "="""""
                            wsCHARNegStart.Range("Q2001").value = "="""""
                            wsCHARNegStart.Range("R2001").value = "="""""
                            wsCHARNegStart.Range("S2001").value = "="""""
                            wsCHARNegStart.Range("T2001").value = "=""Draft"""
                            wsCHARNegStart.Range("U2001").value = "="""""
                            wsCHARNegStart.Range("V2001").value = "="""""
                            wsCHARNegStart.Range("W2001").value = "="""""
                            wsCHARNegStart.Range("X2001").value = "="""""
                            wsCHARNegStart.Range("Y2001").value = "="""""
                            wsCHARNegStart.Range("Z2001").value = "="""""
                            wsCHARNegStart.Range("AA2001").value = "=""7301-ATF Campaign"""
                            wsCHARNegStart.Range("AB2001").value = "="""""
                            wsCHARNegStart.Range("AC2001").value = "="""""
                            wsCHARNegStart.Range("AD2001").value = "="""""
                            wsCHARNegStart.Range("AE2001").value = "="""""
                            wsCHARNegStart.Range("AF2001").value = "="""""
                            wsCHARNegStart.Range("AG2001").value = "=""000"""
        
                        ' Step : Format Cells
                            
                            CHARNegStart_TopEndRow = wsCHARNegStart.Range("A2001").End(xlUp).Row
                            
                            If CHARNegStart_TopEndRow > 2 Then
                            wsCHARNegStart.Range("B2:AG" & CHARNegStart_TopEndRow).FillDown
                            End If
                            
                            CHARNegStart_BottomEndRow = wsCHARNegStart.Cells(wsCHARNegStart.Rows.Count, 1).End(xlUp).Row
                            
                            If CHARNegStart_BottomEndRow > 2001 Then
                                wsCHARNegStart.Range("B2001:AG" & CHARNegStart_BottomEndRow).FillDown
                            End If
                   
                    ' Steps : Populate the: wsCHARNeg ("Negative Sweep - CHARs" worksheet)
                        ' Step : Create the columns headers.
                            wsCHARNeg.Range("A1").value = "DONOTIMPORT"
                            wsCHARNeg.Range("B1").value = "JOURNAL"
                            wsCHARNeg.Range("C1").value = "DATE"
                            wsCHARNeg.Range("D1").value = "REVERSEDATE"
                            wsCHARNeg.Range("E1").value = "DESCRIPTION"
                            wsCHARNeg.Range("F1").value = "REFERENCE_NO"
                            wsCHARNeg.Range("G1").value = "LINE_NO"
                            wsCHARNeg.Range("H1").value = "ACCT_NO"
                            wsCHARNeg.Range("I1").value = "LOCATION_ID"
                            wsCHARNeg.Range("J1").value = "DEPT_ID"
                            wsCHARNeg.Range("K1").value = "DOCUMENT"
                            wsCHARNeg.Range("L1").value = "MEMO"
                            wsCHARNeg.Range("M1").value = "DEBIT"
                            wsCHARNeg.Range("N1").value = "CREDIT"
                            wsCHARNeg.Range("O1").value = "SOURCEENTITY"
                            wsCHARNeg.Range("P1").value = "CURRENCY"
                            wsCHARNeg.Range("Q1").value = "EXCH_RATE_DATE"
                            wsCHARNeg.Range("R1").value = "EXCH_RATE_TYPE_ID"
                            wsCHARNeg.Range("S1").value = "EXCHANGE_RATE"
                            wsCHARNeg.Range("T1").value = "STATE"
                            wsCHARNeg.Range("U1").value = "ALLOCATION_ID"
                            wsCHARNeg.Range("V1").value = "RASSET"
                            wsCHARNeg.Range("W1").value = "RDEPRECIATION_SCHEDULE"
                            wsCHARNeg.Range("X1").value = "RASSET_ADJUSTMENT"
                            wsCHARNeg.Range("Y1").value = "RASSET_CLASS"
                            wsCHARNeg.Range("Z1").value = "RASSETOUTOFSERVICE"
                            wsCHARNeg.Range("AA1").value = "GLDIMFUNDING_SOURCE"
                            wsCHARNeg.Range("AB1").value = "GLENTRY_PROJECTID"
                            wsCHARNeg.Range("AC1").value = "GLENTRY_CUSTOMERID"
                            wsCHARNeg.Range("AD1").value = "GLENTRY_VENDORID"
                            wsCHARNeg.Range("AE1").value = "GLENTRY_EMPLOYEEID"
                            wsCHARNeg.Range("AF1").value = "GLENTRY_ITEMID"
                            wsCHARNeg.Range("AG1").value = "GLENTRY_CLASSID"
        
                        ' Step : Populate the Formulas and Fill Down.
                            wsCHARNeg.Range("A2").Formula = "=IF(A1=""DONOTIMPORT"",1,1+A1)"
                            wsCHARNeg.Range("B2").Formula2 = "=SORT(FILTER('Neg. CHAR - Start'!B:AG,('Neg. CHAR - Start'!F:F<>"""") * ('Neg. CHAR - Start'!F:F<>""REFERENCE_NO"")),5)"
                            
                        ' Step : Format Cells
                            
                            CHARNegEndRow = wsCHARNeg.Cells(wsCHARNeg.Rows.Count, 6).End(xlUp).Row
                            wsCHARNeg.Range("A2:A" & CHARNegEndRow).FillDown
                   
                   
                    ' Steps : Populate the: wsCHARImport ("Negative Sweeps - CHARs Import" worksheet)
                        ' Step : Create the columns headers.
                            wsCHARImport.Range("A1").value = "DONOTIMPORT"
                            wsCHARImport.Range("B1").value = "JOURNAL"
                            wsCHARImport.Range("C1").value = "DATE"
                            wsCHARImport.Range("D1").value = "REVERSEDATE"
                            wsCHARImport.Range("E1").value = "DESCRIPTION"
                            wsCHARImport.Range("F1").value = "REFERENCE_NO"
                            wsCHARImport.Range("G1").value = "LINE_NO"
                            wsCHARImport.Range("H1").value = "ACCT_NO"
                            wsCHARImport.Range("I1").value = "LOCATION_ID"
                            wsCHARImport.Range("J1").value = "DEPT_ID"
                            wsCHARImport.Range("K1").value = "DOCUMENT"
                            wsCHARImport.Range("L1").value = "MEMO"
                            wsCHARImport.Range("M1").value = "DEBIT"
                            wsCHARImport.Range("N1").value = "CREDIT"
                            wsCHARImport.Range("O1").value = "SOURCEENTITY"
                            wsCHARImport.Range("P1").value = "CURRENCY"
                            wsCHARImport.Range("Q1").value = "EXCH_RATE_DATE"
                            wsCHARImport.Range("R1").value = "EXCH_RATE_TYPE_ID"
                            wsCHARImport.Range("S1").value = "EXCHANGE_RATE"
                            wsCHARImport.Range("T1").value = "STATE"
                            wsCHARImport.Range("U1").value = "ALLOCATION_ID"
                            wsCHARImport.Range("V1").value = "RASSET"
                            wsCHARImport.Range("W1").value = "RDEPRECIATION_SCHEDULE"
                            wsCHARImport.Range("X1").value = "RASSET_ADJUSTMENT"
                            wsCHARImport.Range("Y1").value = "RASSET_CLASS"
                            wsCHARImport.Range("Z1").value = "RASSETOUTOFSERVICE"
                            wsCHARImport.Range("AA1").value = "GLDIMFUNDING_SOURCE"
                            wsCHARImport.Range("AB1").value = "GLENTRY_PROJECTID"
                            wsCHARImport.Range("AC1").value = "GLENTRY_CUSTOMERID"
                            wsCHARImport.Range("AD1").value = "GLENTRY_VENDORID"
                            wsCHARImport.Range("AE1").value = "GLENTRY_EMPLOYEEID"
                            wsCHARImport.Range("AF1").value = "GLENTRY_ITEMID"
                            wsCHARImport.Range("AG1").value = "GLENTRY_CLASSID"
        
        
                        ' Step : Populate the Formulas and Fill Down.
                            wsCHARImport.Range("A2").Formula2 = "=FILTER('Negative Sweep - CHARs'!A:A,('Negative Sweep - CHARs'!A:A<>"""") * ('Negative Sweep - CHARs'!A:A<>""DONOTIMPORT""))"
                            wsCHARImport.Range("B2").Formula = "=XLOOKUP($A2,'Negative Sweep - CHARs'!$A:$A,'Negative Sweep - CHARs'!B:B)"
                            wsCHARImport.Range("C2").Formula = "=XLOOKUP($A2,'Negative Sweep - CHARs'!$A:$A,'Negative Sweep - CHARs'!C:C)"
                            wsCHARImport.Range("D2").Formula = "=XLOOKUP($A2,'Negative Sweep - CHARs'!$A:$A,'Negative Sweep - CHARs'!D:D)"
                            wsCHARImport.Range("E2").Formula = "=XLOOKUP($A2,'Negative Sweep - CHARs'!$A:$A,'Negative Sweep - CHARs'!E:E)"
                            wsCHARImport.Range("F2").Formula = "=XLOOKUP($A2,'Negative Sweep - CHARs'!$A:$A,'Negative Sweep - CHARs'!F:F)"
                            wsCHARImport.Range("G2").Formula = "=XLOOKUP($A2,'Negative Sweep - CHARs'!$A:$A,'Negative Sweep - CHARs'!G:G)"
                            wsCHARImport.Range("H2").Formula = "=XLOOKUP($A2,'Negative Sweep - CHARs'!$A:$A,'Negative Sweep - CHARs'!H:H)"
                            wsCHARImport.Range("I2").Formula = "=XLOOKUP($A2,'Negative Sweep - CHARs'!$A:$A,'Negative Sweep - CHARs'!I:I)"
                            wsCHARImport.Range("J2").Formula = "=XLOOKUP($A2,'Negative Sweep - CHARs'!$A:$A,'Negative Sweep - CHARs'!J:J)"
                            wsCHARImport.Range("K2").Formula = "=XLOOKUP($A2,'Negative Sweep - CHARs'!$A:$A,'Negative Sweep - CHARs'!K:K)"
                            wsCHARImport.Range("L2").Formula = "=XLOOKUP($A2,'Negative Sweep - CHARs'!$A:$A,'Negative Sweep - CHARs'!L:L)"
                            wsCHARImport.Range("M2").Formula = "=XLOOKUP($A2,'Negative Sweep - CHARs'!$A:$A,'Negative Sweep - CHARs'!M:M)"
                            wsCHARImport.Range("N2").Formula = "=XLOOKUP($A2,'Negative Sweep - CHARs'!$A:$A,'Negative Sweep - CHARs'!N:N)"
                            wsCHARImport.Range("O2").Formula = "=XLOOKUP($A2,'Negative Sweep - CHARs'!$A:$A,'Negative Sweep - CHARs'!O:O)"
                            wsCHARImport.Range("P2").Formula = "=XLOOKUP($A2,'Negative Sweep - CHARs'!$A:$A,'Negative Sweep - CHARs'!P:P)"
                            wsCHARImport.Range("Q2").Formula = "=XLOOKUP($A2,'Negative Sweep - CHARs'!$A:$A,'Negative Sweep - CHARs'!Q:Q)"
                            wsCHARImport.Range("R2").Formula = "=XLOOKUP($A2,'Negative Sweep - CHARs'!$A:$A,'Negative Sweep - CHARs'!R:R)"
                            wsCHARImport.Range("S2").Formula = "=XLOOKUP($A2,'Negative Sweep - CHARs'!$A:$A,'Negative Sweep - CHARs'!S:S)"
                            wsCHARImport.Range("T2").Formula = "=XLOOKUP($A2,'Negative Sweep - CHARs'!$A:$A,'Negative Sweep - CHARs'!T:T)"
                            wsCHARImport.Range("U2").Formula = "=XLOOKUP($A2,'Negative Sweep - CHARs'!$A:$A,'Negative Sweep - CHARs'!U:U)"
                            wsCHARImport.Range("V2").Formula = "=XLOOKUP($A2,'Negative Sweep - CHARs'!$A:$A,'Negative Sweep - CHARs'!V:V)"
                            wsCHARImport.Range("W2").Formula = "=XLOOKUP($A2,'Negative Sweep - CHARs'!$A:$A,'Negative Sweep - CHARs'!W:W)"
                            wsCHARImport.Range("X2").Formula = "=XLOOKUP($A2,'Negative Sweep - CHARs'!$A:$A,'Negative Sweep - CHARs'!X:X)"
                            wsCHARImport.Range("Y2").Formula = "=XLOOKUP($A2,'Negative Sweep - CHARs'!$A:$A,'Negative Sweep - CHARs'!Y:Y)"
                            wsCHARImport.Range("Z2").Formula = "=XLOOKUP($A2,'Negative Sweep - CHARs'!$A:$A,'Negative Sweep - CHARs'!Z:Z)"
                            wsCHARImport.Range("AA2").Formula = "=XLOOKUP($A2,'Negative Sweep - CHARs'!$A:$A,'Negative Sweep - CHARs'!AA:AA)"
                            wsCHARImport.Range("AB2").Formula = "=XLOOKUP($A2,'Negative Sweep - CHARs'!$A:$A,'Negative Sweep - CHARs'!AB:AB)"
                            wsCHARImport.Range("AC2").Formula = "=XLOOKUP($A2,'Negative Sweep - CHARs'!$A:$A,'Negative Sweep - CHARs'!AC:AC)"
                            wsCHARImport.Range("AD2").Formula = "=XLOOKUP($A2,'Negative Sweep - CHARs'!$A:$A,'Negative Sweep - CHARs'!AD:AD)"
                            wsCHARImport.Range("AE2").Formula = "=XLOOKUP($A2,'Negative Sweep - CHARs'!$A:$A,'Negative Sweep - CHARs'!AE:AE)"
                            wsCHARImport.Range("AF2").Formula = "=XLOOKUP($A2,'Negative Sweep - CHARs'!$A:$A,'Negative Sweep - CHARs'!AF:AF)"
                            wsCHARImport.Range("AG2").Formula = "=XLOOKUP($A2,'Negative Sweep - CHARs'!$A:$A,'Negative Sweep - CHARs'!AG:AG)"
        
                        ' Step : Format Cells
                            
                            CHARImportEndRow = wsCHARImport.Cells(wsCHARImport.Rows.Count, 1).End(xlUp).Row
                            wsCHARImport.Range("B2:AG" & CHARImportEndRow).FillDown
                            wsCHARImport.Range("A:AG").Columns.AutoFit
                End If
                
                
                
            ' Unhide worksheets 33-End (all the click and pledge monthly reports)
                
                
                Application.ScreenUpdating = False ' To speed up the process
                
                ' Loop through worksheets starting from the 33rd sheet
                For Each wsHidden In ThisWorkbook.Worksheets
                    If wsHidden.Index >= 33 Then
                        wsHidden.Visible = xlSheetVisible ' Unhide the worksheet
                    End If
                Next wsHidden
                
            
            ' Hide all the worksheets, that don't need to be shown.
                wsSFReport.Visible = xlSheetHidden
                wsSummary.Visible = xlSheetVisible
                wsConsolidated.Visible = xlSheetVisible
                wsSchoolMap.Visible = xlSheetHidden
                wsSweepsBD.Visible = xlSheetVisible
                
                
                wsConsolidatedPos.Visible = xlSheetHidden
                wsConsolidatedNeg.Visible = xlSheetHidden
                wsConsolidatedReturn.Visible = xlSheetHidden
                wsSFPos.Visible = xlSheetHidden
                wsSFNeg.Visible = xlSheetHidden
                wsSchoolAllocation.Visible = xlSheetHidden
                wsAccountDesignation.Visible = xlSheetHidden
                wsCRJSweepsInfo.Visible = xlSheetHidden
                wsCRJReturnFees.Visible = xlSheetHidden
                wsCRJFormat.Visible = xlSheetHidden
                wsCRJPutTogether.Visible = xlSheetHidden
                wsCRJPos.Visible = xlSheetHidden
                wsCRJNeg.Visible = xlSheetHidden
                wsCHARNegStart.Visible = xlSheetHidden
                wsCHARNeg.Visible = xlSheetHidden
                wsSFCampaignCheck.Visible = xlSheetHidden
                wsAdditionalFees.Visible = xlSheetHidden
                wsSFvsCPRevenue.Visible = xlSheetHidden

                wsPosNegSweeps.Visible = xlSheetVisible
                
                wsSFFiltered.Visible = xlSheetVisible
                wsSchoolUserAllocation.Visible = xlSheetVisible
                wsAccountUserDesignation.Visible = xlSheetVisible
                wsCRJImport.Visible = xlSheetVisible
                wsCHARImport.Visible = xlSheetVisible
                wsDivisionMap.Visible = xlSheetVisible
                
           
            ' Check Certain formulas to determine if additional worksheets need to be visible or hidden
                ' Check if all the revenue matches, if it does, hide the 'wsRevenueDif' worksheet, otherwise keep it visible
                    If wsRevenueDif.Range("A2") = "All Revenue Matches" Then
                        wsRevenueDif.Visible = xlSheetHidden
                    End If
                    
                ' Check the 'wsPosNegSweeps' Worksheet in Q12 and Q13 to make sure all the import amounts match. If they don't keep it visible.
                    ' This will also color the tabs of the import files green or yellow based on if they are good or need to be looked into.
                    
                    If wsPosNegSweeps.Range("Q12").value = "$0.00" Then
                        wsCRJImport.Tab.Color = vbGreen
                    Else
                        wsCRJImport.Tab.Color = vbYellow
                    End If
                    
                    If wsPosNegSweeps.Range("Q13").value = "$0.00" Then
                        wsCHARImport.Tab.Color = vbGreen
                    Else
                        wsCHARImport.Tab.Color = vbYellow
                    End If
                    
                    If wsPosNegSweeps.Range("Q12").value = "$0.00" And wsPosNegSweeps.Range("Q13").value = "$0.00" Then
                        wsPosNegSweeps.Visible = xlSheetHidden
                    End If
                    
                ' Check if the 'wsSchoolUSerAllocation' A2 is empty, if it is, then hide sheet
                    If wsSchoolUserAllocation.Range("A2").value = "" Then
                        wsSchoolUserAllocation.Visible = xlSheetHidden
                    End If
                    
                ' Check if the 'wsAccountUserDesignation' A2 is empty, if it is, then hide sheet
                    If wsAccountUserDesignation.Range("A2").value = "" Then
                        wsAccountUserDesignation.Visible = xlSheetHidden
                    End If
                    
                ' If 'wsCHARImport' is empty then hide it
                    If wsCHARImport.Range("A2") = "" Then
                        wsCHARImport.Visible = xlSheetHidden
                    End If
                
            ' Restore Screen updating
                Application.ScreenUpdating = True
                    
            ' Have the macro go to the Summary Page worksheet.
                wsSummary.Activate
                       
End Sub

